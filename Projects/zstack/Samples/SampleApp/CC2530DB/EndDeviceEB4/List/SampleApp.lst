###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.3.10338/W32 for 8051         03/Mar/2020  23:56:25 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet #
#                          ·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZS #
#                          tack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sa #
#                          mpleApp\Source\SampleApp.c                         #
#    Command line       =  -f C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óone #
#                          net·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È #
#                          \ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoo #
#                          rd.cfg (-DCPU32MHZ -DROOT=__near_func              #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS) -f       #
#                          C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet #
#                          ·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZS #
#                          tack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sa #
#                          mpleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig #
#                          .cfg (-DSECURE=0 -DZG_SECURE_DYNAMIC=0             #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800          #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet #
#                          ·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZS #
#                          tack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sa #
#                          mpleApp\Source\SampleApp.c -D ZIGBEEPRO -D         #
#                          ZTOOL_P1 -D xMT_TASK -D xMT_SYS_FUNC -D            #
#                          xMT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -lC            #
#                          C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet #
#                          ·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZS #
#                          tack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sa #
#                          mpleApp\CC2530DB\EndDeviceEB4\List\ -lA            #
#                          C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet #
#                          ·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZS #
#                          tack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sa #
#                          mpleApp\CC2530DB\EndDeviceEB4\List\                #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet #
#                          ·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZS #
#                          tack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sa #
#                          mpleApp\CC2530DB\EndDeviceEB4\Obj\ -e --debug      #
#                          --core=plain --dptr=16,1 --data_model=large        #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I C:\Users\Administrator\Des #
#                          ktop\ZigBeeTCPÁ¬½Óonenet·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óon #
#                          enet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZStack-CC2530-2.3.0-1.4.0\Pr #
#                          ojects\zstack\Samples\SampleApp\CC2530DB\ -I       #
#                          C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet #
#                          ·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZS #
#                          tack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sa #
#                          mpleApp\CC2530DB\..\SOURCE\ -I                     #
#                          C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet #
#                          ·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZS #
#                          tack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sa #
#                          mpleApp\CC2530DB\..\..\..\ZMAIN\TI2530DB\ -I       #
#                          C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet #
#                          ·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZS #
#                          tack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sa #
#                          mpleApp\CC2530DB\..\..\..\..\..\COMPONENTS\MT\ -I  #
#                          C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet #
#                          ·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZS #
#                          tack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sa #
#                          mpleApp\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\INC #
#                          LUDE\ -I C:\Users\Administrator\Desktop\ZigBeeTCPÁ #
#                          ¬½Óonenet·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö #
#                          ½Ú³¤¶È\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\S #
#                          amples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENT #
#                          S\HAL\TARGET\CC2530EB\ -I                          #
#                          C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet #
#                          ·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZS #
#                          tack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sa #
#                          mpleApp\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\MC #
#                          U\CCSOC\ -I C:\Users\Administrator\Desktop\ZigBeeT #
#                          CPÁ¬½Óonenet·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ #
#                          ö×Ö½Ú³¤¶È\ZStack-CC2530-2.3.0-1.4.0\Projects\zstac #
#                          k\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPON #
#                          ENTS\OSAL\INCLUDE\ -I C:\Users\Administrator\Deskt #
#                          op\ZigBeeTCPÁ¬½Óonenet·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonen #
#                          et·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZStack-CC2530-2.3.0-1.4.0\Proj #
#                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\.. #
#                          \..\COMPONENTS\STACK\AF\ -I                        #
#                          C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet #
#                          ·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZS #
#                          tack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sa #
#                          mpleApp\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\N #
#                          WK\ -I C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½ #
#                          Óonenet·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú #
#                          ³¤¶È\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Sam #
#                          ples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\ #
#                          STACK\SEC\ -I C:\Users\Administrator\Desktop\ZigBe #
#                          eTCPÁ¬½Óonenet·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ20 #
#                          0¸ö×Ö½Ú³¤¶È\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\STACK\SAPI\ -I C:\Users\Administrator\Deskt #
#                          op\ZigBeeTCPÁ¬½Óonenet·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonen #
#                          et·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZStack-CC2530-2.3.0-1.4.0\Proj #
#                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\.. #
#                          \..\COMPONENTS\STACK\SYS\ -I                       #
#                          C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet #
#                          ·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZS #
#                          tack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sa #
#                          mpleApp\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\Z #
#                          DO\ -I C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½ #
#                          Óonenet·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú #
#                          ³¤¶È\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Sam #
#                          ples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\ #
#                          ZMAC\F8W\ -I C:\Users\Administrator\Desktop\ZigBee #
#                          TCPÁ¬½Óonenet·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200 #
#                          ¸ö×Ö½Ú³¤¶È\ZStack-CC2530-2.3.0-1.4.0\Projects\zsta #
#                          ck\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\ZMAC\ -I C:\Users\Administrator\Desktop\ZigB #
#                          eeTCPÁ¬½Óonenet·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ2 #
#                          00¸ö×Ö½Ú³¤¶È\ZStack-CC2530-2.3.0-1.4.0\Projects\zs #
#                          tack\Samples\SampleApp\CC2530DB\..\..\..\..\..\COM #
#                          PONENTS\SERVICES\SADDR\ -I                         #
#                          C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet #
#                          ·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZS #
#                          tack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sa #
#                          mpleApp\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICE #
#                          S\SDATA\ -I C:\Users\Administrator\Desktop\ZigBeeT #
#                          CPÁ¬½Óonenet·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ #
#                          ö×Ö½Ú³¤¶È\ZStack-CC2530-2.3.0-1.4.0\Projects\zstac #
#                          k\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPON #
#                          ENTS\MAC\INCLUDE\ -I C:\Users\Administrator\Deskto #
#                          p\ZigBeeTCPÁ¬½Óonenet·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonene #
#                          t·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZStack-CC2530-2.3.0-1.4.0\Proje #
#                          cts\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\ #
#                          ..\COMPONENTS\MAC\HIGH_LEVEL\ -I                   #
#                          C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet #
#                          ·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZS #
#                          tack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sa #
#                          mpleApp\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW #
#                          _LEVEL\srf04\ -I C:\Users\Administrator\Desktop\Zi #
#                          gBeeTCPÁ¬½Óonenet·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢Ë #
#                          Í200¸ö×Ö½Ú³¤¶È\ZStack-CC2530-2.3.0-1.4.0\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          OMPONENTS\MAC\LOW_LEVEL\srf04\SINGLE_CHIP\ -Ohz    #
#                          --require_prototypes                               #
#    List file          =  C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet #
#                          ·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZS #
#                          tack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sa #
#                          mpleApp\CC2530DB\EndDeviceEB4\List\SampleApp.lst   #
#    Object file        =  C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet #
#                          ·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZS #
#                          tack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sa #
#                          mpleApp\CC2530DB\EndDeviceEB4\Obj\SampleApp.r51    #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\Source\SampleApp.c
      1          /**************************************************************************************************
      2            Filename:       SampleApp.c
      3            Revised:        $Date: 2009-03-18 15:56:27 -0700 (Wed, 18 Mar 2009) $
      4            Revision:       $Revision: 19453 $
      5          
      6            Description:    Sample Application (no Profile).
      7          
      8          
      9            Copyright 2007 Texas Instruments Incorporated. All rights reserved.
     10          
     11            IMPORTANT: Your use of this Software is limited to those specific rights
     12            granted under the terms of a software license agreement between the user
     13            who downloaded the software, his/her employer (which must be your employer)
     14            and Texas Instruments Incorporated (the "License").  You may not use this
     15            Software unless you agree to abide by the terms of the License. The License
     16            limits your use, and you acknowledge, that the Software may not be modified,
     17            copied or distributed unless embedded on a Texas Instruments microcontroller
     18            or used solely and exclusively in conjunction with a Texas Instruments radio
     19            frequency transceiver, which is integrated into your product.  Other than for
     20            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     21            works of, modify, distribute, perform, display or sell this Software and/or
     22            its documentation for any purpose.
     23          
     24            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     25            PROVIDED AS IS?WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     26            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     27            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     28            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     29            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     30            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     31            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     32            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     33            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     34            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     35          
     36            Should you have any questions regarding your right to use this Software,
     37            contact Texas Instruments Incorporated at www.TI.com.
     38          **************************************************************************************************/
     39          
     40          /*********************************************************************
     41            This application isn't intended to do anything useful, it is
     42            intended to be a simple example of an application's structure.
     43          
     44            This application sends it's messages either as broadcast or
     45            broadcast filtered group messages.  The other (more normal)
     46            message addressing is unicast.  Most of the other sample
     47            applications are written to support the unicast message model.
     48          
     49            Key control:
     50              SW1:  Sends a flash command to all devices in Group 1.
     51              SW2:  Adds/Removes (toggles) this device in and out
     52                    of Group 1.  This will enable and disable the
     53                    reception of the flash command.
     54          *********************************************************************/
     55          
     56          /*********************************************************************
     57           * INCLUDES
     58           */
     59          #include "OSAL.h"
     60          #include "ZGlobals.h"
     61          #include "AF.h"
     62          #include "aps_groups.h"
     63          #include "ZDApp.h"
     64          
     65          #include "SampleApp.h"
     66          #include "SampleAppHw.h"
     67          
     68          #include "OnBoard.h"

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf3
   \   unsigned char volatile __sfr P0SEL
   \                     P0SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfd
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1
     69          
     70          /* HAL */
     71          #include "hal_lcd.h"
     72          #include "hal_led.h"
     73          #include "hal_key.h"
     74          #include "MT_UART.h"
     75          #include "MT_APP.h"
     76          #include "MT.h"
     77          #include "DHT11.h"
     78          #include "stdio.h"
     79          #include "string.h"
     80          
     81          #define LEN            100
     82          
     83          #define WIFIRESET P0_6       // P0.6¿Ú¿ØÖÆIGT
     84          #define  devkey "iA8JHWjxuRkaL7oWa8uAkQbSOdk=" //onenetÆ½Ì¨tcp²úÆ·apikey
     85          #define  devid "586474334"//onenetÆ½Ì¨tcpÉè±¸id
     86          
     87          //WIFIÁ¬½ÓÃüÁî
     88          #define AT_C       "AT\r\n"
     89          #define CWMODE_C   "AT+CWMODE=3\r\n"  //STA+APÄ£Ê½
     90          #define CWJAP_C    "AT+CWJAP=\"CMCC-IOT\",\"linyi1234567890\"\r\n" //"AT+CWJAP=\"your_ssid\",\"your_pwd\"\r\n",
     91          //#define CIPSTART_C "AT+CIPSTART=\"TCP\",\"192.168.1.3\",8234\r\n" //Á¬½ÓHTTP·þÎñÆ÷192.168.1.4,8234  8234ÊÇ·þÎñÆ÷µÄ¶Ë¿ÚºÅ ---±¾µØ²âÊÔ
     92          #define CIPSTART_C "AT+CIPSTART=\"TCP\",\"183.230.40.33\",80\r\n"  //Á¬½ÓÔÆ·þÎñÆ÷
     93          #define CIPMODE_C  "AT+CIPMODE=1\r\n"  //Í¸´«Ä£Ê½
     94          #define CIPSEND_C  "AT+CIPSEND\r\n"  //·¢ËÍÊý¾ÝµÄÖ¸Áî
     95          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     96          uint8 *line;
   \                     line:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     97          uint8 len_rcv;
   \                     len_rcv:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_I, align 1, keep-with-next
     98          uint8 flat = 1;
   \                     flat:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for flat>`
   \   000001                REQUIRE __INIT_XDATA_I
     99          
    100          static uint8 SerialApp_TxBuf[LEN+1];
    101          static uint8 SerialApp_TxLen=0;
    102          
    103          /*********************************************************************
    104           * MACROS
    105           */
    106          
    107          /*********************************************************************
    108           * CONSTANTS
    109           */
    110          
    111          /*********************************************************************
    112           * TYPEDEFS
    113           */
    114          
    115          /*********************************************************************
    116           * GLOBAL VARIABLES
    117           */
    118          
    119          // This list should be filled with Application specific Cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
    120          const cId_t SampleApp_ClusterList[SAMPLEAPP_MAX_CLUSTERS] =
   \                     SampleApp_ClusterList:
   \   000000   0100         DW 1
   \   000002   0200         DW 2
    121          {
    122            SAMPLEAPP_PERIODIC_CLUSTERID,
    123            SAMPLEAPP_FLASH_CLUSTERID
    124          };
    125          

   \                                 In  segment XDATA_ROM_C, align 1
    126          const SimpleDescriptionFormat_t SampleApp_SimpleDesc =
   \                     SampleApp_SimpleDesc:
   \   000000   14           DB 20
   \   000001   080F         DW 3848
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   02           DB 2
   \   000007   ....         DW SampleApp_ClusterList
   \   000009   02           DB 2
   \   00000A   ....         DW SampleApp_ClusterList
    127          {
    128            SAMPLEAPP_ENDPOINT,              //  int Endpoint;
    129            SAMPLEAPP_PROFID,                //  uint16 AppProfId[2];
    130            SAMPLEAPP_DEVICEID,              //  uint16 AppDeviceId[2];
    131            SAMPLEAPP_DEVICE_VERSION,        //  int   AppDevVer:4;
    132            SAMPLEAPP_FLAGS,                 //  int   AppFlags:4;
    133            SAMPLEAPP_MAX_CLUSTERS,          //  uint8  AppNumInClusters;
    134            (cId_t *)SampleApp_ClusterList,  //  uint8 *pAppInClusterList;
    135            SAMPLEAPP_MAX_CLUSTERS,          //  uint8  AppNumInClusters;
    136            (cId_t *)SampleApp_ClusterList   //  uint8 *pAppInClusterList;
    137          };
    138          
    139          // This is the Endpoint/Interface description.  It is defined here, but
    140          // filled-in in SampleApp_Init().  Another way to go would be to fill
    141          // in the structure here and make it a "const" (in code space).  The
    142          // way it's defined in this sample app it is define in RAM.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    143          endPointDesc_t SampleApp_epDesc;
   \                     SampleApp_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
    144          
    145          /*********************************************************************
    146           * EXTERNAL VARIABLES
    147           */
    148          
    149          /*********************************************************************
    150           * EXTERNAL FUNCTIONS
    151           */
    152          
    153          /*********************************************************************
    154           * LOCAL VARIABLES
    155           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    156          uint8 SampleApp_TaskID;   // Task ID for internal task/event processing
   \                     SampleApp_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    157                                    // This variable will be received when
    158                                    // SampleApp_Init() is called.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    159          devStates_t SampleApp_NwkState;
   \                     SampleApp_NwkState:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    160          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    161          uint8 SampleApp_TransID;  // This is the unique message ID (counter)
   \                     SampleApp_TransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    162          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    163          afAddrType_t SampleApp_Periodic_DstAddr; //¹ã²¥
   \                     SampleApp_Periodic_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    164          afAddrType_t SampleApp_Flash_DstAddr;    //×é²¥
   \                     SampleApp_Flash_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    165          afAddrType_t SampleApp_P2P_DstAddr;      //µã²¥
   \                     SampleApp_P2P_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    166          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    167          aps_Group_t SampleApp_Group;
   \                     SampleApp_Group:
   \   000000                DS 18
   \   000012                REQUIRE __INIT_XDATA_Z
    168          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    169          uint8 SampleAppPeriodicCounter = 0;
   \                     SampleAppPeriodicCounter:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    170          uint8 SampleAppFlashCounter = 0;
   \                     SampleAppFlashCounter:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    171          
    172          
    173          
    174          /*********************************************************************
    175           * LOCAL FUNCTIONS
    176           */
    177          void SampleApp_HandleKeys( uint8 shift, uint8 keys );
    178          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pckt );
    179          void SampleApp_SendPeriodicMessage( void );
    180          void SampleApp_SendFlashMessage( uint16 flashTime );
    181          void SampleApp_Send_P2P_Message(void);
    182          void ReSetWifi(void);
    183          void ClearRAM(uint8* ram,uint32 n);
    184          /*********************************************************************
    185           * NETWORK LAYER CALLBACKS
    186           */
    187          
    188          /*********************************************************************
    189           * PUBLIC FUNCTIONS
    190           */
    191          
    192          
    193          /****************************************************************************
    194          * Ãû    ³Æ: ReSetWifi()
    195          * ¹¦    ÄÜ: µÍµçÆ½¸´Î»wifiÄ£¿é
    196          * Èë¿Ú²ÎÊý: ÎÞ
    197          * ³ö¿Ú²ÎÊý: ÎÞ
    198          ****************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    199          void ReSetWifi(void)
   \                     ReSetWifi:
    200          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    201            P0DIR |= 0x40;           //P0.6¶¨ÒåÎªÊä³ö
   \   000004   43FD40       ORL     0xfd,#0x40
    202            WIFIRESET = 0;                 //¸ßµçÆ½¸´Î»---------------------¸Ä 0
   \   000007   C286         CLR     0x80.6
    203            Delay_ms(500);
   \   000009                ; Setup parameters for call to function Delay_ms
   \   000009   7AF4         MOV     R2,#-0xc
   \   00000B   7B01         MOV     R3,#0x1
   \   00000D   12....       LCALL   ??Delay_ms?relay
    204            WIFIRESET = 1;                 //µÍµçÆ½¹¤×÷------------
   \   000010   D286         SETB    0x80.6
    205             Delay_ms(500);
   \   000012                ; Setup parameters for call to function Delay_ms
   \   000012   7AF4         MOV     R2,#-0xc
   \   000014   7B01         MOV     R3,#0x1
   \   000016   12....       LCALL   ??Delay_ms?relay
    206          }
   \   000019   D083         POP     DPH
   \   00001B   D082         POP     DPL
   \   00001D   02....       LJMP    ?BRET
   \   000020                REQUIRE P0DIR
   \   000020                REQUIRE _A_P0
    207          /*********************************************************************
    208           * @fn      SampleApp_Init
    209           *
    210           * @brief   Initialization function for the Generic App Task.
    211           *          This is called during initialization and should contain
    212           *          any application specific initialization (ie. hardware
    213           *          initialization/setup, table initialization, power up
    214           *          notificaiton ... ).
    215           *
    216           * @param   task_id - the ID assigned by OSAL.  This ID should be
    217           *                    used to send messages and set timers.
    218           *
    219           * @return  none
    220           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    221          void SampleApp_Init( uint8 task_id )
   \                     SampleApp_Init:
    222          { 
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 100
   \   000005   749C         MOV     A,#-0x64
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
   \   00000B   FE           MOV     R6,A
    223            
    224            unsigned char tmp[100];
    225            SampleApp_TaskID = task_id;
   \   00000C   90....       MOV     DPTR,#SampleApp_TaskID
   \   00000F   F0           MOVX    @DPTR,A
    226            SampleApp_NwkState = DEV_INIT;
   \   000010   90....       MOV     DPTR,#SampleApp_NwkState
   \   000013   7401         MOV     A,#0x1
   \   000015   F0           MOVX    @DPTR,A
    227            SampleApp_TransID = 0;
   \   000016   90....       MOV     DPTR,#SampleApp_TransID
   \   000019   E4           CLR     A
   \   00001A   F0           MOVX    @DPTR,A
    228            
    229            MT_UartInit();                  //´®¿Ú³õÊ¼»¯
   \   00001B                ; Setup parameters for call to function MT_UartInit
   \   00001B   12....       LCALL   ??MT_UartInit?relay
    230            MT_UartRegisterTaskID(task_id); //×¢²á´®¿ÚÈÎÎñ
   \   00001E                ; Setup parameters for call to function MT_UartRegisterTaskID
   \   00001E   EE           MOV     A,R6
   \   00001F   F9           MOV     R1,A
   \   000020   12....       LCALL   ??MT_UartRegisterTaskID?relay
    231            HalUARTWrite(0, "UART0\r\n", 7);
   \   000023                ; Setup parameters for call to function HalUARTWrite
   \   000023   7C07         MOV     R4,#0x7
   \   000025   7D00         MOV     R5,#0x0
   \   000027   7A..         MOV     R2,#`?<Constant "UART0\\r\\n">` & 0xff
   \   000029   7B..         MOV     R3,#(`?<Constant "UART0\\r\\n">` >> 8) & 0xff
   \   00002B   7900         MOV     R1,#0x0
   \   00002D   12....       LCALL   ??HalUARTWrite?relay
    232            osal_memset(tmp,0,100);
   \   000030                ; Setup parameters for call to function osal_memset
   \   000030   7C64         MOV     R4,#0x64
   \   000032   7D00         MOV     R5,#0x0
   \   000034   7900         MOV     R1,#0x0
   \   000036   85..82       MOV     DPL,?XSP + 0
   \   000039   85..83       MOV     DPH,?XSP + 1
   \   00003C   AA82         MOV     R2,DPL
   \   00003E   AB83         MOV     R3,DPH
   \   000040   12....       LCALL   ??osal_memset?relay
    233            tmp[0] = HAL_UART_DMA+0x30;
   \   000043   85..82       MOV     DPL,?XSP + 0
   \   000046   85..83       MOV     DPH,?XSP + 1
   \   000049   7431         MOV     A,#0x31
   \   00004B   F0           MOVX    @DPTR,A
    234            tmp[1] = HAL_UART_ISR+0x30;
   \   00004C   7401         MOV     A,#0x1
   \   00004E   12....       LCALL   ?XSTACK_DISP0_8
   \   000051   7432         MOV     A,#0x32
   \   000053   F0           MOVX    @DPTR,A
    235            tmp[2] = HAL_UART_USB+0x30;
   \   000054   7402         MOV     A,#0x2
   \   000056   12....       LCALL   ?XSTACK_DISP0_8
   \   000059   7430         MOV     A,#0x30
   \   00005B   F0           MOVX    @DPTR,A
    236            HalUARTWrite(0, tmp, 6);
   \   00005C                ; Setup parameters for call to function HalUARTWrite
   \   00005C   7C06         MOV     R4,#0x6
   \   00005E   7D00         MOV     R5,#0x0
   \   000060   85..82       MOV     DPL,?XSP + 0
   \   000063   85..83       MOV     DPH,?XSP + 1
   \   000066   AA82         MOV     R2,DPL
   \   000068   AB83         MOV     R3,DPH
   \   00006A   7900         MOV     R1,#0x0
   \   00006C   12....       LCALL   ??HalUARTWrite?relay
    237              P0SEL &= 0x7f;                  //P0_7ÅäÖÃ³ÉÍ¨ÓÃio
   \   00006F   53F37F       ANL     0xf3,#0x7f
    238             ReSetWifi();
   \   000072                ; Setup parameters for call to function ReSetWifi
   \   000072   12....       LCALL   ?Subroutine3 & 0xFFFF
    239               Delay_ms(1000);
    240              HalUARTWrite(1,"AT\r\n",strlen("AT\r\n"));//·¢ËÍAT¼ì²âWiFiÄ£¿é
   \                     ??CrossCallReturnLabel_0:
   \   000075   7901         MOV     R1,#0x1
   \   000077   12....       LCALL   ??HalUARTWrite?relay
    241          
    242            line = osal_msg_allocate(LEN);
   \   00007A                ; Setup parameters for call to function osal_msg_allocate
   \   00007A   7A64         MOV     R2,#0x64
   \   00007C   7B00         MOV     R3,#0x0
   \   00007E   12....       LCALL   ??osal_msg_allocate?relay
   \   000081   90....       MOV     DPTR,#line
   \   000084   EA           MOV     A,R2
   \   000085   F0           MOVX    @DPTR,A
   \   000086   A3           INC     DPTR
   \   000087   EB           MOV     A,R3
   \   000088   F0           MOVX    @DPTR,A
    243            // Device hardware initialization can be added here or in main() (Zmain.c).
    244            // If the hardware is application specific - add it here.
    245            // If the hardware is other parts of the device add it in main().
    246          
    247           #if defined ( BUILD_ALL_DEVICES )
    248            // The "Demo" target is setup to have BUILD_ALL_DEVICES and HOLD_AUTO_START
    249            // We are looking at a jumper (defined in SampleAppHw.c) to be jumpered
    250            // together - if they are - we will start up a coordinator. Otherwise,
    251            // the device will start as a router.
    252            if ( readCoordinatorJumper() )
    253              zgDeviceLogicalType = ZG_DEVICETYPE_COORDINATOR;
    254            else
    255              zgDeviceLogicalType = ZG_DEVICETYPE_ROUTER;
    256          #endif // BUILD_ALL_DEVICES
    257          
    258          #if defined ( HOLD_AUTO_START )
    259            // HOLD_AUTO_START is a compile option that will surpress ZDApp
    260            //  from starting the device and wait for the application to
    261            //  start the device.
    262            ZDOInitDevice(0);
    263          #endif
    264          
    265            // Setup for the periodic message's destination address
    266            // Broadcast to everyone
    267            SampleApp_Periodic_DstAddr.addrMode = (afAddrMode_t)AddrBroadcast;
   \   000089   90....       MOV     DPTR,#SampleApp_Periodic_DstAddr + 8
   \   00008C   740F         MOV     A,#0xf
   \   00008E   F0           MOVX    @DPTR,A
    268            SampleApp_Periodic_DstAddr.endPoint = SAMPLEAPP_ENDPOINT;
   \   00008F   A3           INC     DPTR
   \   000090   7414         MOV     A,#0x14
   \   000092   F0           MOVX    @DPTR,A
    269            SampleApp_Periodic_DstAddr.addr.shortAddr = 0xFFFF;
   \   000093   90....       MOV     DPTR,#SampleApp_Periodic_DstAddr
   \   000096   74FF         MOV     A,#-0x1
   \   000098   F0           MOVX    @DPTR,A
   \   000099   A3           INC     DPTR
   \   00009A   F0           MOVX    @DPTR,A
    270          
    271            // Setup for the flash command's destination address - Group 1
    272            SampleApp_Flash_DstAddr.addrMode = (afAddrMode_t)afAddrGroup;
   \   00009B   90....       MOV     DPTR,#SampleApp_Flash_DstAddr + 8
   \   00009E   7401         MOV     A,#0x1
   \   0000A0   F0           MOVX    @DPTR,A
    273            SampleApp_Flash_DstAddr.endPoint = SAMPLEAPP_ENDPOINT;
   \   0000A1   A3           INC     DPTR
   \   0000A2   7414         MOV     A,#0x14
   \   0000A4   F0           MOVX    @DPTR,A
    274            SampleApp_Flash_DstAddr.addr.shortAddr = SAMPLEAPP_FLASH_GROUP;
   \   0000A5   90....       MOV     DPTR,#SampleApp_Flash_DstAddr
   \   0000A8   7401         MOV     A,#0x1
   \   0000AA   F0           MOVX    @DPTR,A
   \   0000AB   A3           INC     DPTR
   \   0000AC   E4           CLR     A
   \   0000AD   F0           MOVX    @DPTR,A
    275            
    276            SampleApp_P2P_DstAddr.addrMode = (afAddrMode_t)Addr16Bit; //µã²¥ 
   \   0000AE   90....       MOV     DPTR,#SampleApp_P2P_DstAddr + 8
   \   0000B1   7402         MOV     A,#0x2
   \   0000B3   F0           MOVX    @DPTR,A
    277            SampleApp_P2P_DstAddr.endPoint = SAMPLEAPP_ENDPOINT; 
   \   0000B4   A3           INC     DPTR
   \   0000B5   7414         MOV     A,#0x14
   \   0000B7   F0           MOVX    @DPTR,A
    278            SampleApp_P2P_DstAddr.addr.shortAddr = 0x0000;            //·¢¸øÐ­µ÷Æ÷
   \   0000B8   90....       MOV     DPTR,#SampleApp_P2P_DstAddr
   \   0000BB   E4           CLR     A
   \   0000BC   F0           MOVX    @DPTR,A
   \   0000BD   A3           INC     DPTR
   \   0000BE   F0           MOVX    @DPTR,A
    279          
    280            // Fill out the endpoint description.
    281            SampleApp_epDesc.endPoint = SAMPLEAPP_ENDPOINT;
   \   0000BF   90....       MOV     DPTR,#SampleApp_epDesc
   \   0000C2   7414         MOV     A,#0x14
   \   0000C4   F0           MOVX    @DPTR,A
    282            SampleApp_epDesc.task_id = &SampleApp_TaskID;
   \   0000C5   A3           INC     DPTR
   \   0000C6   74..         MOV     A,#SampleApp_TaskID & 0xff
   \   0000C8   F0           MOVX    @DPTR,A
   \   0000C9   A3           INC     DPTR
   \   0000CA   74..         MOV     A,#(SampleApp_TaskID >> 8) & 0xff
   \   0000CC   F0           MOVX    @DPTR,A
    283            SampleApp_epDesc.simpleDesc
    284                      = (SimpleDescriptionFormat_t *)&SampleApp_SimpleDesc;
   \   0000CD   A3           INC     DPTR
   \   0000CE   74..         MOV     A,#SampleApp_SimpleDesc & 0xff
   \   0000D0   F0           MOVX    @DPTR,A
   \   0000D1   A3           INC     DPTR
   \   0000D2   74..         MOV     A,#(SampleApp_SimpleDesc >> 8) & 0xff
   \   0000D4   F0           MOVX    @DPTR,A
    285            SampleApp_epDesc.latencyReq = noLatencyReqs;
   \   0000D5   A3           INC     DPTR
   \   0000D6   E4           CLR     A
   \   0000D7   F0           MOVX    @DPTR,A
    286          
    287            // Register the endpoint description with the AF
    288            afRegister( &SampleApp_epDesc );
   \   0000D8                ; Setup parameters for call to function afRegister
   \   0000D8   7A..         MOV     R2,#SampleApp_epDesc & 0xff
   \   0000DA   7B..         MOV     R3,#(SampleApp_epDesc >> 8) & 0xff
   \   0000DC   12....       LCALL   ??afRegister?relay
    289          
    290            // Register for all key events - This app will handle all key events
    291            RegisterForKeys( SampleApp_TaskID );
   \   0000DF                ; Setup parameters for call to function RegisterForKeys
   \   0000DF   90....       MOV     DPTR,#SampleApp_TaskID
   \   0000E2   E0           MOVX    A,@DPTR
   \   0000E3   F9           MOV     R1,A
   \   0000E4   12....       LCALL   ??RegisterForKeys?relay
    292          
    293            // By default, all devices start out in Group 1
    294            SampleApp_Group.ID = 0x0001;
   \   0000E7   90....       MOV     DPTR,#SampleApp_Group
   \   0000EA   7401         MOV     A,#0x1
   \   0000EC   F0           MOVX    @DPTR,A
   \   0000ED   A3           INC     DPTR
   \   0000EE   E4           CLR     A
   \   0000EF   F0           MOVX    @DPTR,A
    295            osal_memcpy( SampleApp_Group.name, "Group 1", 7 );
   \   0000F0                ; Setup parameters for call to function osal_memcpy
   \   0000F0   75....       MOV     ?V0 + 0,#`?<Constant "Group 1">` & 0xff
   \   0000F3   75....       MOV     ?V0 + 1,#(`?<Constant "Group 1">` >> 8) & 0xff
   \   0000F6   F5..         MOV     ?V0 + 2,A
   \   0000F8   78..         MOV     R0,#?V0 + 0
   \   0000FA   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   0000FD   7C07         MOV     R4,#0x7
   \   0000FF   7D00         MOV     R5,#0x0
   \   000101   7A..         MOV     R2,#(SampleApp_Group + 2) & 0xff
   \   000103   7B..         MOV     R3,#((SampleApp_Group + 2) >> 8) & 0xff
   \   000105   12....       LCALL   ??Subroutine14_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_32:
   \   000108   12....       LCALL   ?DEALLOC_XSTACK8
    296            aps_AddGroup( SAMPLEAPP_ENDPOINT, &SampleApp_Group );
   \   00010B                ; Setup parameters for call to function aps_AddGroup
   \   00010B   7A..         MOV     R2,#SampleApp_Group & 0xff
   \   00010D   7B..         MOV     R3,#(SampleApp_Group >> 8) & 0xff
   \   00010F   7914         MOV     R1,#0x14
   \   000111   12....       LCALL   ??aps_AddGroup?relay
    297          
    298          #if defined ( LCD_SUPPORTED )
    299            HalLcdWriteString( "SampleApp", HAL_LCD_LINE_1 );
   \   000114                ; Setup parameters for call to function HalLcdWriteString
   \   000114   7901         MOV     R1,#0x1
   \   000116   7A..         MOV     R2,#`?<Constant "SampleApp">` & 0xff
   \   000118   7B..         MOV     R3,#(`?<Constant "SampleApp">` >> 8) & 0xff
   \   00011A   12....       LCALL   ??HalLcdWriteString?relay
    300          #endif
    301          }
   \   00011D   7464         MOV     A,#0x64
   \   00011F                REQUIRE ?Subroutine0
   \   00011F                REQUIRE P0SEL
   \   00011F                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   12....       LCALL   ?DEALLOC_XSTACK8
   \   000003   7F03         MOV     R7,#0x3
   \   000005   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   12....       LCALL   ??ReSetWifi?relay
   \   000003                ; Setup parameters for call to function Delay_ms
   \   000003                ; Setup parameters for call to function Delay_ms
   \   000003   7AE8         MOV     R2,#-0x18
   \   000005   7B03         MOV     R3,#0x3
   \   000007   12....       LCALL   ??Delay_ms?relay
   \   00000A                ; Setup parameters for call to function HalUARTWrite
   \   00000A                ; Setup parameters for call to function HalUARTWrite
   \   00000A   7C04         MOV     R4,#0x4
   \   00000C   7D00         MOV     R5,#0x0
   \   00000E   7A..         MOV     R2,#`?<Constant "AT\\r\\n">` & 0xff
   \   000010   7B..         MOV     R3,#(`?<Constant "AT\\r\\n">` >> 8) & 0xff
   \   000012   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine14_0:
   \   000000   12....       LCALL   ??osal_memcpy?relay
   \   000003   7403         MOV     A,#0x3
   \   000005   22           RET
    302          
    303          
    304          /*********************************************************************
    305           * @fn      SampleApp_ProcessEvent
    306           *
    307           * @brief   Generic Application Task event processor.  This function
    308           *          is called to process all events for the task.  Events
    309           *          include timers, messages and any other user defined events.
    310           *
    311           * @param   task_id  - The OSAL assigned task ID.
    312           * @param   events - events to process.  This is a bit map and can
    313           *                   contain more than one event.
    314           *
    315           * @return  none
    316           */
    317          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    318          uint16 SampleApp_ProcessEvent( uint8 task_id, uint16 events )
   \                     SampleApp_ProcessEvent:
    319          {
   \   000000   74EE         MOV     A,#-0x12
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 18
   \   000005                ; Auto size: 2
   \   000005   74FE         MOV     A,#-0x2
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   EA           MOV     A,R2
   \   00000B   FE           MOV     R6,A
   \   00000C   EB           MOV     A,R3
   \   00000D   FF           MOV     R7,A
    320             char nn[200];//mqttÁ¬½Ó»º´æ
    321             char len[200];//mqttÁ¬½Ó»º´æ
    322             char a[2];
    323            afIncomingMSGPacket_t *MSGpkt;
    324            (void)task_id;  // Intentionally unreferenced parameter
    325          
    326            if ( events & SYS_EVENT_MSG )
   \   00000E   5480         ANL     A,#0x80
   \   000010   7003         JNZ     $+5
   \   000012   02....       LJMP    ??SampleApp_ProcessEvent_0 & 0xFFFF
    327            {
    328              MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   000015                ; Setup parameters for call to function osal_msg_receive
   \   000015   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_6:
   \   000018   75....       MOV     ?V0 + 6,#`?<Constant "ERROR">` & 0xff
   \   00001B   75....       MOV     ?V0 + 7,#(`?<Constant "ERROR">` >> 8) & 0xff
   \   00001E   75....       MOV     ?V0 + 4,#`?<Constant "OK">` & 0xff
   \   000021   75....       MOV     ?V0 + 5,#(`?<Constant "OK">` >> 8) & 0xff
   \   000024   8029         SJMP    ??CrossCallReturnLabel_7
    329              while ( MSGpkt )
    330              {
    331                switch ( MSGpkt->hdr.event )
    332                {
    333                  // Received when a key is pressed
    334                  case KEY_CHANGE:
    335                    SampleApp_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    336                    break;
    337          
    338                  // Received when a messages is received (OTA) for this endpoint
    339                  case AF_INCOMING_MSG_CMD:
    340                    SampleApp_MessageMSGCB( MSGpkt );
    341                    break;
    342                case CMD_SERIAL_MSG:
    343                  mtOSALSerialData_t *p = (mtOSALSerialData_t *)MSGpkt;
                         ^
Warning[Pe1072]: a declaration cannot have a label
    344                  HalUARTWrite(HAL_UART_PORT_0, &p->msg[1], p->msg[0]); //°Ñ½ÓÊÕµ½µÄÊý¾ÝÖØÐÂ·¢»ØÈ¥ 
    345          
    346                  if(flat==1)
    347                  {
    348                     if(strstr((&p->msg[1]),"OK"))
                                      ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char const *"
    349                     {
    350                        HalUARTWrite(1,CWMODE_C,strlen(CWMODE_C));
    351                        HalUARTWrite(0, "ATOK\r\n", 6);
    352                        flat=2;
    353                        Delay_ms(1000);
    354                     }
    355                     else
    356                       HalUARTWrite(0, "AT ERR\r\n", 6); 
    357                  }
    358                   else if(flat==2)
    359                  {
    360                     if(strstr((&p->msg[1]),"OK"))
                                      ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char const *"
    361                     {
    362                        HalUARTWrite(1,CWJAP_C, strlen(CWJAP_C));//Á¬½Ó±¾µØWiFi
    363                        flat=3;
    364                         Delay_ms(500);
    365                     }
    366                    else if(strstr((&p->msg[1]),"ERROR"))
                                          ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char const *"
    367                     {
    368                       //Á¬½ÓÊ§°Ü
    369          //             ReSetWifi();//ÖØÆôWiFi
    370          //              Delay_ms(1000);
    371          //              HalUARTWrite(1,"AT\r\n",4);
    372          //              flat=1;     
    373                     }
    374                  }
    375                   else if(flat==3)
    376                  {
    377                     if(strstr((&p->msg[1]),"OK"))
                                      ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char const *"
    378                     {             
    379                       HalUARTWrite(1,CIPSTART_C, strlen(CIPSTART_C));//Á¬½Ó·þÎñÆ÷
    380                       flat=4;
    381                       Delay_ms(500);
    382                     }
    383                     else if(strstr((&p->msg[1]),"ERROR"))
                                           ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char const *"
    384                     {
    385                       ReSetWifi();//ÖØÆôWiFi
    386                        Delay_ms(1000);
    387                        HalUARTWrite(1,"AT\r\n",4);
    388                        flat=1;    
    389                     }
    390                  }
    391                  else if(flat==4)
    392                  {
    393                     if(strstr((&p->msg[1]),"OK"))
                                      ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char const *"
    394                     {
    395                       HalUARTWrite(1,CIPMODE_C, strlen(CIPMODE_C));//ÉèÖÃÍ¸´«
    396                        flat=5;
    397                        Delay_ms(500);
    398                     }
    399                  }
    400                   else if(flat==5)
    401                  {
    402                     if(strstr((&p->msg[1]),"OK"))
                                      ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char const *"
    403                     {
    404                       HalUARTWrite(1,CIPSEND_C, strlen(CIPSEND_C));//·¢ËÍ
    405                        flat=6;
    406                         Delay_ms(1000);
    407                     }
    408                  }
    409                  else if(flat==6)
    410                  {
    411                     if(strstr((&p->msg[1]),">"))
                                      ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char const *"
    412                     {           
    413                       //sprintf(nn,"%s","1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890");
    414                       
    415                       HalUARTWrite(0,"touchuan ok\r\n",strlen("touchuan ok\r\n"));//ÕâÀï¿ªÊ¼Í¸´«À´
    416          //            sprintf(nn,"POST /devices/586474334/datapoints?type=3 HTTP/1.1\r\napi-key:iA8JHWjxuRkaL7oWa8uAkQbSOdk=\r\nHost:api.heclouds.com\r\nContent-Length:20\r\n\r\n{\"temp\":89,\"hum\":50}");
    417                         flat=7;
    418          //              Delay_ms(500);
    419          //              HalUARTWrite(1,nn,strlen(nn));//ÕâÀï¿ªÊ¼Í¸´«À´
    420                        a[0]=0x1a;
    421                        HalUARTWrite(1,a,1);
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"

        switch ( MSGpkt->hdr.event )
        ^
"C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\Source\SampleApp.c",331  Warning[Pe546]: 
          transfer of control bypasses initialization of:
            variable "p" (declared at line 343 of
                      "C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet·¢ËÍ¼Ó
                      ³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZStack-CC2530-2
                      .3.0-1.4.0\Projects\zstack\Samples\SampleApp\Source\Sampl
                      eApp.c")

     char nn[200];//mqttÁ¬½Ó»º´æ
          ^
"C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\Source\SampleApp.c",320  Warning[Pe177]: 
          variable "nn" was declared but never referenced

     char len[200];//mqttÁ¬½Ó»º´æ
          ^
"C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\Source\SampleApp.c",321  Warning[Pe177]: 
          variable "len" was declared but never referenced
    422                     }
    423                  }
    424          //        else if(flat==7)
    425          //        {
    426          
    427                    //HalUARTWrite(1,strTemp,12);
    428                    // HalUARTWrite(1, &p->msg[1], p->msg[0]); //°Ñ½ÓÊÕµ½µÄÊý¾ÝÖØÐÂ·¢»ØÈ¥                     
    429          //        }
    430                   break;
    431                  // Received whenever the device changes state in the network
    432                  case ZDO_STATE_CHANGE:
    433                    SampleApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
   \                     ??SampleApp_ProcessEvent_1:
   \   000026   A3           INC     DPTR
   \   000027   E0           MOVX    A,@DPTR
   \   000028   90....       MOV     DPTR,#SampleApp_NwkState
   \   00002B   F0           MOVX    @DPTR,A
    434                    if ( //(SampleApp_NwkState == DEV_ZB_COORD) ||
    435                           (SampleApp_NwkState == DEV_ROUTER)
    436                        || (SampleApp_NwkState == DEV_END_DEVICE) )
   \   00002C   6407         XRL     A,#0x7
   \   00002E   6005         JZ      ??SampleApp_ProcessEvent_2
   \   000030   E0           MOVX    A,@DPTR
   \   000031   6406         XRL     A,#0x6
   \   000033   7010         JNZ     ??SampleApp_ProcessEvent_3
    437                    {
    438                      // Start sending the periodic message in a regular interval.
    439                      osal_start_timerEx( SampleApp_TaskID,
    440                                        SAMPLEAPP_SEND_PERIODIC_MSG_EVT,
    441                                        SAMPLEAPP_SEND_PERIODIC_MSG_TIMEOUT );
   \                     ??SampleApp_ProcessEvent_2:
   \   000035                ; Setup parameters for call to function osal_start_timerEx
   \   000035   7CB8         MOV     R4,#-0x48
   \   000037   7D0B         MOV     R5,#0xb
   \   000039   7A01         MOV     R2,#0x1
   \   00003B   7B00         MOV     R3,#0x0
   \   00003D   90....       MOV     DPTR,#SampleApp_TaskID
   \   000040   E0           MOVX    A,@DPTR
   \   000041   F9           MOV     R1,A
   \   000042   12....       LCALL   ??osal_start_timerEx?relay
    442                    }
    443                    else
    444                    {
    445                      // Device is no longer in the network
    446                    }
    447                    break;
    448          
    449                  default:
    450                    break;
    451                }
    452          
    453                // Release the memory
    454                osal_msg_deallocate( (uint8 *)MSGpkt );
   \                     ??SampleApp_ProcessEvent_3:
   \   000045                ; Setup parameters for call to function osal_msg_deallocate
   \   000045   AA..         MOV     R2,?V0 + 2
   \   000047   AB..         MOV     R3,?V0 + 3
   \   000049   12....       LCALL   ??osal_msg_deallocate?relay
    455          
    456                // Next - if one is available
    457                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   00004C                ; Setup parameters for call to function osal_msg_receive
   \   00004C   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_7:
   \   00004F   E5..         MOV     A,?V0 + 2
   \   000051   45..         ORL     A,?V0 + 3
   \   000053   7003         JNZ     $+5
   \   000055   02....       LJMP    ??SampleApp_ProcessEvent_4 & 0xFFFF
   \   000058   E5..         MOV     A,?V0 + 2
   \   00005A   2402         ADD     A,#0x2
   \   00005C   F5..         MOV     ?V0 + 0,A
   \   00005E   E5..         MOV     A,?V0 + 3
   \   000060   3400         ADDC    A,#0x0
   \   000062   F5..         MOV     ?V0 + 1,A
   \   000064   85..82       MOV     DPL,?V0 + 2
   \   000067   85..83       MOV     DPH,?V0 + 3
   \   00006A   E0           MOVX    A,@DPTR
   \   00006B   14           DEC     A
   \   00006C   6029         JZ      ??SampleApp_ProcessEvent_5
   \   00006E   24E7         ADD     A,#-0x19
   \   000070   601C         JZ      ??SampleApp_ProcessEvent_6
   \   000072   245A         ADD     A,#0x5a
   \   000074   6006         JZ      ??SampleApp_ProcessEvent_7
   \   000076   24EF         ADD     A,#-0x11
   \   000078   60AC         JZ      ??SampleApp_ProcessEvent_1
   \   00007A   80C9         SJMP    ??SampleApp_ProcessEvent_3
   \                     ??SampleApp_ProcessEvent_7:
   \   00007C                ; Setup parameters for call to function SampleApp_HandleKeys
   \   00007C   A3           INC     DPTR
   \   00007D   A3           INC     DPTR
   \   00007E   A3           INC     DPTR
   \   00007F   E0           MOVX    A,@DPTR
   \   000080   FA           MOV     R2,A
   \   000081   85..82       MOV     DPL,?V0 + 0
   \   000084   85..83       MOV     DPH,?V0 + 1
   \   000087   E0           MOVX    A,@DPTR
   \   000088   F9           MOV     R1,A
   \   000089   12....       LCALL   ??SampleApp_HandleKeys?relay
   \   00008C   80B7         SJMP    ??SampleApp_ProcessEvent_3
   \                     ??SampleApp_ProcessEvent_6:
   \   00008E                ; Setup parameters for call to function SampleApp_MessageMSGCB
   \   00008E   AA..         MOV     R2,?V0 + 2
   \   000090   AB..         MOV     R3,?V0 + 3
   \   000092   12....       LCALL   ??SampleApp_MessageMSGCB?relay
   \   000095   80AE         SJMP    ??SampleApp_ProcessEvent_3
   \                     ??SampleApp_ProcessEvent_5:
   \   000097   85..82       MOV     DPL,?V0 + 0
   \   00009A   85..83       MOV     DPH,?V0 + 1
   \   00009D   12....       LCALL   ?Subroutine9 & 0xFFFF
   \                     ??CrossCallReturnLabel_8:
   \   0000A0                ; Setup parameters for call to function HalUARTWrite
   \   0000A0   E0           MOVX    A,@DPTR
   \   0000A1   FC           MOV     R4,A
   \   0000A2   7D00         MOV     R5,#0x0
   \   0000A4   A3           INC     DPTR
   \   0000A5   AA82         MOV     R2,DPL
   \   0000A7   AB83         MOV     R3,DPH
   \   0000A9   7900         MOV     R1,#0x0
   \   0000AB   12....       LCALL   ??Subroutine12_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_23:
   \   0000AE   E0           MOVX    A,@DPTR
   \   0000AF   6401         XRL     A,#0x1
   \   0000B1   703C         JNZ     ??SampleApp_ProcessEvent_8
   \   0000B3                ; Setup parameters for call to function strstr
   \   0000B3   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_10:
   \   0000B6   6027         JZ      ??SampleApp_ProcessEvent_9
   \   0000B8                ; Setup parameters for call to function HalUARTWrite
   \   0000B8   7C0D         MOV     R4,#0xd
   \   0000BA   7D00         MOV     R5,#0x0
   \   0000BC   7A..         MOV     R2,#`?<Constant "AT+CWMODE=3\\r\\n">` & 0xff
   \   0000BE   7B..         MOV     R3,#(`?<Constant "AT+CWMODE=3\\r\\n">` >> 8) & 0xff
   \   0000C0   7901         MOV     R1,#0x1
   \   0000C2   12....       LCALL   ??HalUARTWrite?relay
   \   0000C5                ; Setup parameters for call to function HalUARTWrite
   \   0000C5   7C06         MOV     R4,#0x6
   \   0000C7   7D00         MOV     R5,#0x0
   \   0000C9   7A..         MOV     R2,#`?<Constant "ATOK\\r\\n">` & 0xff
   \   0000CB   7B..         MOV     R3,#(`?<Constant "ATOK\\r\\n">` >> 8) & 0xff
   \   0000CD   7900         MOV     R1,#0x0
   \   0000CF   12....       LCALL   ??Subroutine12_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_24:
   \   0000D2   7402         MOV     A,#0x2
   \                     ??SampleApp_ProcessEvent_10:
   \   0000D4   F0           MOVX    @DPTR,A
   \   0000D5                ; Setup parameters for call to function Delay_ms
   \   0000D5   7AE8         MOV     R2,#-0x18
   \   0000D7   7B03         MOV     R3,#0x3
   \                     ??SampleApp_ProcessEvent_11:
   \   0000D9   12....       LCALL   ??Delay_ms?relay
   \   0000DC   02....       LJMP    ??SampleApp_ProcessEvent_3 & 0xFFFF
   \                     ??SampleApp_ProcessEvent_9:
   \   0000DF                ; Setup parameters for call to function HalUARTWrite
   \   0000DF   7C06         MOV     R4,#0x6
   \   0000E1   7D00         MOV     R5,#0x0
   \   0000E3   7A..         MOV     R2,#`?<Constant "AT ERR\\r\\n">` & 0xff
   \   0000E5   7B..         MOV     R3,#(`?<Constant "AT ERR\\r\\n">` >> 8) & 0xff
   \   0000E7   7900         MOV     R1,#0x0
   \                     ??SampleApp_ProcessEvent_12:
   \   0000E9   12....       LCALL   ??HalUARTWrite?relay
   \   0000EC   02....       LJMP    ??SampleApp_ProcessEvent_3 & 0xFFFF
   \                     ??SampleApp_ProcessEvent_8:
   \   0000EF   E0           MOVX    A,@DPTR
   \   0000F0   6402         XRL     A,#0x2
   \   0000F2   7023         JNZ     ??SampleApp_ProcessEvent_13
   \   0000F4                ; Setup parameters for call to function strstr
   \   0000F4   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_4:
   \   0000F7   6014         JZ      ??SampleApp_ProcessEvent_14
   \   0000F9                ; Setup parameters for call to function HalUARTWrite
   \   0000F9   7C27         MOV     R4,#0x27
   \   0000FB   7D00         MOV     R5,#0x0
   \   0000FD   7A..         MOV     R2,#`?<Constant "AT+CWJAP=\\"CMCC-IOT\\",\\"...">` & 0xff
   \   0000FF   7B..         MOV     R3,#(`?<Constant "AT+CWJAP=\\"CMCC-IOT\\",\\"...">` >> 8) & 0xff
   \   000101   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_18:
   \   000104   7403         MOV     A,#0x3
   \                     ??SampleApp_ProcessEvent_15:
   \   000106   F0           MOVX    @DPTR,A
   \   000107                ; Setup parameters for call to function Delay_ms
   \   000107   7AF4         MOV     R2,#-0xc
   \   000109   7B01         MOV     R3,#0x1
   \   00010B   80CC         SJMP    ??SampleApp_ProcessEvent_11
   \                     ??SampleApp_ProcessEvent_14:
   \   00010D                ; Setup parameters for call to function strstr
   \   00010D   AC..         MOV     R4,?V0 + 6
   \   00010F   AD..         MOV     R5,?V0 + 7
   \   000111   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_15:
   \   000114   02....       LJMP    ??SampleApp_ProcessEvent_3 & 0xFFFF
   \                     ??SampleApp_ProcessEvent_13:
   \   000117   E0           MOVX    A,@DPTR
   \   000118   6403         XRL     A,#0x3
   \   00011A   702C         JNZ     ??SampleApp_ProcessEvent_16
   \   00011C                ; Setup parameters for call to function strstr
   \   00011C   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_5:
   \   00011F   600F         JZ      ??SampleApp_ProcessEvent_17
   \   000121                ; Setup parameters for call to function HalUARTWrite
   \   000121   7C26         MOV     R4,#0x26
   \   000123   7D00         MOV     R5,#0x0
   \   000125   7A..         MOV     R2,#`?<Constant "AT+CIPSTART=\\"TCP\\",\\"18...">` & 0xff
   \   000127   7B..         MOV     R3,#(`?<Constant "AT+CIPSTART=\\"TCP\\",\\"18...">` >> 8) & 0xff
   \   000129   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_19:
   \   00012C   7404         MOV     A,#0x4
   \   00012E   80D6         SJMP    ??SampleApp_ProcessEvent_15
   \                     ??SampleApp_ProcessEvent_17:
   \   000130                ; Setup parameters for call to function strstr
   \   000130   AC..         MOV     R4,?V0 + 6
   \   000132   AD..         MOV     R5,?V0 + 7
   \   000134   12....       LCALL   ??Subroutine11_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_13:
   \   000137   7003         JNZ     $+5
   \   000139   02....       LJMP    ??SampleApp_ProcessEvent_3 & 0xFFFF
   \   00013C                ; Setup parameters for call to function ReSetWifi
   \   00013C   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_1:
   \   00013F   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_20:
   \   000142   7401         MOV     A,#0x1
   \   000144   F0           MOVX    @DPTR,A
   \   000145   02....       LJMP    ??SampleApp_ProcessEvent_3 & 0xFFFF
   \                     ??SampleApp_ProcessEvent_16:
   \   000148   E0           MOVX    A,@DPTR
   \   000149   6404         XRL     A,#0x4
   \   00014B   7017         JNZ     ??SampleApp_ProcessEvent_18
   \   00014D                ; Setup parameters for call to function strstr
   \   00014D   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_11:
   \   000150   7003         JNZ     $+5
   \   000152   02....       LJMP    ??SampleApp_ProcessEvent_3 & 0xFFFF
   \   000155                ; Setup parameters for call to function HalUARTWrite
   \   000155   7C0E         MOV     R4,#0xe
   \   000157   7D00         MOV     R5,#0x0
   \   000159   7A..         MOV     R2,#`?<Constant "AT+CIPMODE=1\\r\\n">` & 0xff
   \   00015B   7B..         MOV     R3,#(`?<Constant "AT+CIPMODE=1\\r\\n">` >> 8) & 0xff
   \   00015D   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_21:
   \   000160   7405         MOV     A,#0x5
   \   000162   80A2         SJMP    ??SampleApp_ProcessEvent_15
   \                     ??SampleApp_ProcessEvent_18:
   \   000164   E0           MOVX    A,@DPTR
   \   000165   6405         XRL     A,#0x5
   \   000167   7018         JNZ     ??SampleApp_ProcessEvent_19
   \   000169                ; Setup parameters for call to function strstr
   \   000169   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_12:
   \   00016C   7003         JNZ     $+5
   \   00016E   02....       LJMP    ??SampleApp_ProcessEvent_3 & 0xFFFF
   \   000171                ; Setup parameters for call to function HalUARTWrite
   \   000171   7C0C         MOV     R4,#0xc
   \   000173   7D00         MOV     R5,#0x0
   \   000175   7A..         MOV     R2,#`?<Constant "AT+CIPSEND\\r\\n">` & 0xff
   \   000177   7B..         MOV     R3,#(`?<Constant "AT+CIPSEND\\r\\n">` >> 8) & 0xff
   \   000179   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_22:
   \   00017C   7406         MOV     A,#0x6
   \   00017E   02....       LJMP    ??SampleApp_ProcessEvent_10 & 0xFFFF
   \                     ??SampleApp_ProcessEvent_19:
   \   000181   E0           MOVX    A,@DPTR
   \   000182   6406         XRL     A,#0x6
   \   000184   6003         JZ      $+5
   \   000186   02....       LJMP    ??SampleApp_ProcessEvent_3 & 0xFFFF
   \   000189                ; Setup parameters for call to function strstr
   \   000189   7C..         MOV     R4,#`?<Constant ">">` & 0xff
   \   00018B   7D..         MOV     R5,#(`?<Constant ">">` >> 8) & 0xff
   \   00018D   12....       LCALL   ??Subroutine11_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_14:
   \   000190   7003         JNZ     $+5
   \   000192   02....       LJMP    ??SampleApp_ProcessEvent_3 & 0xFFFF
   \   000195                ; Setup parameters for call to function HalUARTWrite
   \   000195   7C0D         MOV     R4,#0xd
   \   000197   7D00         MOV     R5,#0x0
   \   000199   7A..         MOV     R2,#`?<Constant "touchuan ok\\r\\n">` & 0xff
   \   00019B   7B..         MOV     R3,#(`?<Constant "touchuan ok\\r\\n">` >> 8) & 0xff
   \   00019D   7900         MOV     R1,#0x0
   \   00019F   12....       LCALL   ??Subroutine12_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_25:
   \   0001A2   7407         MOV     A,#0x7
   \   0001A4   F0           MOVX    @DPTR,A
   \   0001A5   85..82       MOV     DPL,?XSP + 0
   \   0001A8   85..83       MOV     DPH,?XSP + 1
   \   0001AB   741A         MOV     A,#0x1a
   \   0001AD   F0           MOVX    @DPTR,A
   \   0001AE                ; Setup parameters for call to function HalUARTWrite
   \   0001AE   7C01         MOV     R4,#0x1
   \   0001B0   7D00         MOV     R5,#0x0
   \   0001B2   AA82         MOV     R2,DPL
   \   0001B4   AB83         MOV     R3,DPH
   \   0001B6   7901         MOV     R1,#0x1
   \   0001B8   02....       LJMP    ??SampleApp_ProcessEvent_12 & 0xFFFF
    458              }
    459          
    460              // return unprocessed events
    461              return (events ^ SYS_EVENT_MSG);
   \                     ??SampleApp_ProcessEvent_4:
   \   0001BB   EE           MOV     A,R6
   \   0001BC   FA           MOV     R2,A
   \   0001BD   EF           MOV     A,R7
   \   0001BE   6480         XRL     A,#0x80
   \                     ??SampleApp_ProcessEvent_20:
   \   0001C0   FB           MOV     R3,A
   \   0001C1   802A         SJMP    ??SampleApp_ProcessEvent_21
    462            }
    463          
    464            // Send a message out - This event is generated by a timer
    465            //  (setup in SampleApp_Init()).
    466            if ( events & SAMPLEAPP_SEND_PERIODIC_MSG_EVT )
   \                     ??SampleApp_ProcessEvent_0:
   \   0001C3   EE           MOV     A,R6
   \   0001C4   A2E0         MOV     C,0xE0 /* A   */.0
   \   0001C6   5021         JNC     ??SampleApp_ProcessEvent_22
    467            {
    468              // Send the periodic message
    469              //SampleApp_SendPeriodicMessage();
    470              SampleApp_Send_P2P_Message();
   \   0001C8                ; Setup parameters for call to function SampleApp_Send_P2P_Message
   \   0001C8   12....       LCALL   ??SampleApp_Send_P2P_Message?relay
    471          
    472              // Setup to send message again in normal period (+ a little jitter)
    473              osal_start_timerEx( SampleApp_TaskID, SAMPLEAPP_SEND_PERIODIC_MSG_EVT,
    474                  (SAMPLEAPP_SEND_PERIODIC_MSG_TIMEOUT + (osal_rand() & 0x00FF)) );
   \   0001CB                ; Setup parameters for call to function osal_rand
   \   0001CB   12....       LCALL   ??osal_rand?relay
   \   0001CE                ; Setup parameters for call to function osal_start_timerEx
   \   0001CE   EA           MOV     A,R2
   \   0001CF   24B8         ADD     A,#-0x48
   \   0001D1   FC           MOV     R4,A
   \   0001D2   E4           CLR     A
   \   0001D3   340B         ADDC    A,#0xb
   \   0001D5   FD           MOV     R5,A
   \   0001D6   7A01         MOV     R2,#0x1
   \   0001D8   7B00         MOV     R3,#0x0
   \   0001DA   90....       MOV     DPTR,#SampleApp_TaskID
   \   0001DD   E0           MOVX    A,@DPTR
   \   0001DE   F9           MOV     R1,A
   \   0001DF   12....       LCALL   ??osal_start_timerEx?relay
    475          
    476              // return unprocessed events
    477              return (events ^ SAMPLEAPP_SEND_PERIODIC_MSG_EVT);
   \   0001E2   EE           MOV     A,R6
   \   0001E3   6401         XRL     A,#0x1
   \   0001E5   FA           MOV     R2,A
   \   0001E6   EF           MOV     A,R7
   \   0001E7   80D7         SJMP    ??SampleApp_ProcessEvent_20
    478            }
    479          
    480            // Discard unknown events
    481            return 0;
   \                     ??SampleApp_ProcessEvent_22:
   \   0001E9   7A00         MOV     R2,#0x0
   \   0001EB   7B00         MOV     R3,#0x0
   \                     ??SampleApp_ProcessEvent_21:
   \   0001ED   7402         MOV     A,#0x2
   \   0001EF   12....       LCALL   ?DEALLOC_XSTACK8
   \   0001F2   7F0A         MOV     R7,#0xa
   \   0001F4   02....       LJMP    ?BANKED_LEAVE_XDATA
    482          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine8:
   \   000000   90....       MOV     DPTR,#SampleApp_TaskID
   \   000003   E0           MOVX    A,@DPTR
   \   000004   F9           MOV     R1,A
   \   000005   12....       LCALL   ??osal_msg_receive?relay
   \   000008   8A..         MOV     ?V0 + 2,R2
   \   00000A   8B..         MOV     ?V0 + 3,R3
   \   00000C   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   AC..         MOV     R4,?V0 + 4
   \   000002   AD..         MOV     R5,?V0 + 5
   \   000004   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_16:
   \   000007   8B..         MOV     ?V0 + 9,R3
   \   000009   EA           MOV     A,R2
   \   00000A   45..         ORL     A,?V0 + 9
   \   00000C   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine10:
   \   000000   85..82       MOV     DPL,?V0 + 0
   \   000003   85..83       MOV     DPH,?V0 + 1
   \   000006   E0           MOVX    A,@DPTR
   \   000007   2401         ADD     A,#0x1
   \   000009   FA           MOV     R2,A
   \   00000A   A3           INC     DPTR
   \   00000B   E0           MOVX    A,@DPTR
   \   00000C   3400         ADDC    A,#0x0
   \   00000E   FB           MOV     R3,A
   \   00000F   12....       LCALL   ??strstr?relay
   \   000012   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   AC..         MOV     R4,?V0 + 4
   \   000002   AD..         MOV     R5,?V0 + 5
   \   000004                REQUIRE ??Subroutine11_0
   \   000004                ; // Fall through to label ??Subroutine11_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine11_0:
   \   000000   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_17:
   \   000003   8B..         MOV     ?V0 + 1,R3
   \   000005   EA           MOV     A,R2
   \   000006   45..         ORL     A,?V0 + 1
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine9:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F8           MOV     R0,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   F9           MOV     R1,A
   \   000005                ; Setup parameters for call to function HalLedBlink
   \   000005   8882         MOV     DPL,R0
   \   000007   8983         MOV     DPH,R1
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   7901         MOV     R1,#0x1
   \   000002                REQUIRE ??Subroutine12_0
   \   000002                ; // Fall through to label ??Subroutine12_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine12_0:
   \   000000   12....       LCALL   ??HalUARTWrite?relay
   \   000003   90....       MOV     DPTR,#flat
   \   000006   22           RET
    483          
    484          /*********************************************************************
    485           * Event Generation Functions
    486           */
    487          /*********************************************************************
    488           * @fn      SampleApp_HandleKeys
    489           *
    490           * @brief   Handles all key events for this device.
    491           *
    492           * @param   shift - true if in shift/alt.
    493           * @param   keys - bit field for key events. Valid entries:
    494           *                 HAL_KEY_SW_2
    495           *                 HAL_KEY_SW_1
    496           *
    497           * @return  none
    498           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    499          void SampleApp_HandleKeys( uint8 shift, uint8 keys )
   \                     SampleApp_HandleKeys:
    500          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
    501            (void)shift;  // Intentionally unreferenced parameter
    502            
    503            if ( keys & HAL_KEY_SW_1 )
   \   000007   A2E0         MOV     C,0xE0 /* A   */.0
   \   000009   5007         JNC     ??SampleApp_HandleKeys_0
    504            {
    505              /* This key sends the Flash Command is sent to Group 1.
    506               * This device will not receive the Flash Command from this
    507               * device (even if it belongs to group 1).
    508               */
    509              SampleApp_SendFlashMessage( SAMPLEAPP_FLASH_DURATION );
   \   00000B                ; Setup parameters for call to function SampleApp_SendFlashMessage
   \   00000B   7AE8         MOV     R2,#-0x18
   \   00000D   7B03         MOV     R3,#0x3
   \   00000F   12....       LCALL   ??SampleApp_SendFlashMessage?relay
    510            }
    511          
    512            if ( keys & HAL_KEY_SW_2 )
   \                     ??SampleApp_HandleKeys_0:
   \   000012   EE           MOV     A,R6
   \   000013   A2E1         MOV     C,0xE0 /* A   */.1
   \   000015   5024         JNC     ??SampleApp_HandleKeys_1
    513            {
    514              /* The Flashr Command is sent to Group 1.
    515               * This key toggles this device in and out of group 1.
    516               * If this device doesn't belong to group 1, this application
    517               * will not receive the Flash command sent to group 1.
    518               */
    519              aps_Group_t *grp;
    520              grp = aps_FindGroup( SAMPLEAPP_ENDPOINT, SAMPLEAPP_FLASH_GROUP );
    521              if ( grp )
   \   000017                ; Setup parameters for call to function aps_FindGroup
   \   000017   7A01         MOV     R2,#0x1
   \   000019   7B00         MOV     R3,#0x0
   \   00001B   7914         MOV     R1,#0x14
   \   00001D   12....       LCALL   ??aps_FindGroup?relay
   \   000020   8B..         MOV     ?V0 + 1,R3
   \   000022   EA           MOV     A,R2
   \   000023   45..         ORL     A,?V0 + 1
   \   000025   600B         JZ      ??SampleApp_HandleKeys_2
    522              {
    523                // Remove from the group
    524                aps_RemoveGroup( SAMPLEAPP_ENDPOINT, SAMPLEAPP_FLASH_GROUP );
   \   000027                ; Setup parameters for call to function aps_RemoveGroup
   \   000027   7A01         MOV     R2,#0x1
   \   000029   7B00         MOV     R3,#0x0
   \   00002B   7914         MOV     R1,#0x14
   \   00002D   12....       LCALL   ??aps_RemoveGroup?relay
   \   000030   8009         SJMP    ??SampleApp_HandleKeys_1
    525              }
    526              else
    527              {
    528                // Add to the flash group
    529                aps_AddGroup( SAMPLEAPP_ENDPOINT, &SampleApp_Group );
   \                     ??SampleApp_HandleKeys_2:
   \   000032                ; Setup parameters for call to function aps_AddGroup
   \   000032   7A..         MOV     R2,#SampleApp_Group & 0xff
   \   000034   7B..         MOV     R3,#(SampleApp_Group >> 8) & 0xff
   \   000036   7914         MOV     R1,#0x14
   \   000038   12....       LCALL   ??aps_AddGroup?relay
    530              }
    531            }
    532          }
   \                     ??SampleApp_HandleKeys_1:
   \   00003B   02....       LJMP    ??Subroutine13_0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine13_0:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    533          
    534          /*********************************************************************
    535           * LOCAL FUNCTIONS
    536           */
    537          
    538          /*********************************************************************
    539           * @fn      SampleApp_MessageMSGCB
    540           *
    541           * @brief   Data message processor callback.  This function processes
    542           *          any incoming data - probably from other devices.  So, based
    543           *          on cluster ID, perform the intended action.
    544           *
    545           * @param   none
    546           *
    547           * @return  none
    548           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    549          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pkt )
   \                     SampleApp_MessageMSGCB:
    550          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 200
   \   000005   7438         MOV     A,#0x38
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    551            uint16 flashTime;
    552            char HttpData[200];
    553            uint8 ceshi[200];//²âÊÔ»º´æ
    554            switch ( pkt->clusterId )
   \   00000A   EA           MOV     A,R2
   \   00000B   2421         ADD     A,#0x21
   \   00000D   FE           MOV     R6,A
   \   00000E   EB           MOV     A,R3
   \   00000F   3400         ADDC    A,#0x0
   \   000011   FF           MOV     R7,A
   \   000012   8A82         MOV     DPL,R2
   \   000014   8B83         MOV     DPH,R3
   \   000016   A3           INC     DPTR
   \   000017   A3           INC     DPTR
   \   000018   A3           INC     DPTR
   \   000019   A3           INC     DPTR
   \   00001A   E0           MOVX    A,@DPTR
   \   00001B   F5..         MOV     ?V0 + 0,A
   \   00001D   A3           INC     DPTR
   \   00001E   E0           MOVX    A,@DPTR
   \   00001F   F5..         MOV     ?V0 + 1,A
   \   000021   78..         MOV     R0,#?V0 + 0
   \   000023   12....       LCALL   ?US_SWITCH_DENSE
   \                     `?<Jumptable for SampleApp_MessageMSGCB>_0`:
   \   000026   0200         DW        2
   \   000028   02           DB        2
   \   000029   ....         DW        ??SampleApp_MessageMSGCB_0
   \   00002B   ....         DW        ??SampleApp_MessageMSGCB_1
   \   00002D   ....         DW        ??SampleApp_MessageMSGCB_0
   \   00002F   ....         DW        ??SampleApp_MessageMSGCB_2
    555            {
    556              case SAMPLEAPP_P2P_CLUSTERID:
    557          //      HalUARTWrite(0, "T&H:", 4);       //ÌáÊ¾½ÓÊÕµ½Êý¾Ý
    558                HalUARTWrite(0, pkt->cmd.Data, pkt->cmd.DataLength); //Êä³ö½ÓÊÕµ½µÄÊý¾Ý
   \                     ??SampleApp_MessageMSGCB_2:
   \   000031   EA           MOV     A,R2
   \   000032   241F         ADD     A,#0x1f
   \   000034   F5..         MOV     ?V0 + 0,A
   \   000036   EB           MOV     A,R3
   \   000037   3400         ADDC    A,#0x0
   \   000039   F5..         MOV     ?V0 + 1,A
   \   00003B                ; Setup parameters for call to function HalUARTWrite
   \   00003B   85..82       MOV     DPL,?V0 + 0
   \   00003E   F583         MOV     DPH,A
   \   000040   E0           MOVX    A,@DPTR
   \   000041   FC           MOV     R4,A
   \   000042   A3           INC     DPTR
   \   000043   E0           MOVX    A,@DPTR
   \   000044   FD           MOV     R5,A
   \   000045   8E82         MOV     DPL,R6
   \   000047   8F83         MOV     DPH,R7
   \   000049   E0           MOVX    A,@DPTR
   \   00004A   FA           MOV     R2,A
   \   00004B   A3           INC     DPTR
   \   00004C   E0           MOVX    A,@DPTR
   \   00004D   FB           MOV     R3,A
   \   00004E   12....       LCALL   ?Subroutine4 & 0xFFFF
    559                HalUARTWrite(0, "\n", 1);         // »Ø³µ»»ÐÐ
   \                     ??CrossCallReturnLabel_2:
   \   000051   12....       LCALL   ??Subroutine12_0 & 0xFFFF
    560                
    561                 //tcpÁ¬½Ó³É¹¦²¢ÇÒÊÕµ½ÖÕ¶ËÊý¾ÝºóÏòÆ½Ì¨·¢ËÍÎÂÊª¶È
    562                if(flat==7)
   \                     ??CrossCallReturnLabel_26:
   \   000054   E0           MOVX    A,@DPTR
   \   000055   6407         XRL     A,#0x7
   \   000057   6003         JZ      $+5
   \   000059   02....       LJMP    ??SampleApp_MessageMSGCB_0 & 0xFFFF
    563                {
    564                  sprintf(HttpData,"POST /devices/%s/datapoints?type=3 HTTP/1.1\r\napi-key:%s\r\nHost:api.heclouds.com\r\nContent-Length:%d\r\n\r\n%s",devid,devkey, pkt->cmd.DataLength,pkt->cmd.Data);
   \   00005C   75....       MOV     ?V0 + 2,#`?<Constant "POST /devices/%s/data...">` & 0xff
   \   00005F   75....       MOV     ?V0 + 3,#(`?<Constant "POST /devices/%s/data...">` >> 8) & 0xff
   \   000062   75....       MOV     ?V0 + 6,#`?<Constant "586474334">` & 0xff
   \   000065   75....       MOV     ?V0 + 7,#(`?<Constant "586474334">` >> 8) & 0xff
   \   000068   75....       MOV     ?V0 + 4,#`?<Constant "iA8JHWjxuRkaL7oWa8uAk...">` & 0xff
   \   00006B   75....       MOV     ?V0 + 5,#(`?<Constant "iA8JHWjxuRkaL7oWa8uAk...">` >> 8) & 0xff
   \   00006E                ; Setup parameters for call to function sprintf
   \   00006E   8E82         MOV     DPL,R6
   \   000070   8F83         MOV     DPH,R7
   \   000072   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   000075   85..82       MOV     DPL,?V0 + 0
   \   000078   85..83       MOV     DPH,?V0 + 1
   \   00007B   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   00007E   78..         MOV     R0,#?V0 + 4
   \   000080   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000083   78..         MOV     R0,#?V0 + 6
   \   000085   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000088   AC..         MOV     R4,?V0 + 2
   \   00008A   AD..         MOV     R5,?V0 + 3
   \   00008C   7408         MOV     A,#0x8
   \   00008E   12....       LCALL   ?XSTACK_DISP0_8
   \   000091   AA82         MOV     R2,DPL
   \   000093   AB83         MOV     R3,DPH
   \   000095   12....       LCALL   ??sprintf?relay
   \   000098   7408         MOV     A,#0x8
   \   00009A   12....       LCALL   ?DEALLOC_XSTACK8
    565                         
    566                  sprintf(HttpData,"POST /devices/%s/datapoints?type=3 HTTP/1.1\r\napi-key:%s\r\nHost:api.heclouds.com\r\nContent-Length:%d\r\n\r\n%s",devid,devkey, pkt->cmd.DataLength,pkt->cmd.Data);	
   \   00009D                ; Setup parameters for call to function sprintf
   \   00009D   8E82         MOV     DPL,R6
   \   00009F   8F83         MOV     DPH,R7
   \   0000A1   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   0000A4   85..82       MOV     DPL,?V0 + 0
   \   0000A7   85..83       MOV     DPH,?V0 + 1
   \   0000AA   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   0000AD   78..         MOV     R0,#?V0 + 4
   \   0000AF   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000B2   78..         MOV     R0,#?V0 + 6
   \   0000B4   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000B7   AC..         MOV     R4,?V0 + 2
   \   0000B9   AD..         MOV     R5,?V0 + 3
   \   0000BB   7408         MOV     A,#0x8
   \   0000BD   12....       LCALL   ?XSTACK_DISP0_8
   \   0000C0   AA82         MOV     R2,DPL
   \   0000C2   AB83         MOV     R3,DPH
   \   0000C4   12....       LCALL   ??sprintf?relay
   \   0000C7   7408         MOV     A,#0x8
   \   0000C9   12....       LCALL   ?DEALLOC_XSTACK8
    567                 //  sprintf(HttpData,"POST /devices/586474334/datapoints?type=3 HTTP/1.1\r\napi-key:iA8JHWjxuRkaL7oWa8uAkQbSOdk=\r\nHost:api.heclouds.com\r\nContent-Length:%d\r\n\r\n{\"temp\":89,\"hum\":50}");
    568                //  sprintf(ceshi,"len£º%d\r\n",strlen(HttpData));//Êý¾Ý³¤¶È
    569                 // HalUARTWrite(0,ceshi,strlen(ceshi)); 
    570                  //HalUARTWrite(0,HttpData,strlen(HttpData));
    571                  HalUARTWrite(1,HttpData,strlen(HttpData));
                                        ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"

    uint8 ceshi[200];//²âÊÔ»º´æ
          ^
"C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\Source\SampleApp.c",553  Warning[Pe177]: 
          variable "ceshi" was declared but never referenced

  static uint8 SerialApp_TxBuf[LEN+1];
               ^
"C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\Source\SampleApp.c",100  Warning[Pe177]: 
          variable "SerialApp_TxBuf" was declared but never referenced

  static uint8 SerialApp_TxLen=0;
               ^
"C:\Users\Administrator\Desktop\ZigBeeTCPÁ¬½Óonenet·¢ËÍ¼Ó³¤¶È\ZigBeeTCPÁ¬½Óonenet·¢ËÍ200¸ö×Ö½Ú³¤¶È\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\Source\SampleApp.c",101  Warning[Pe177]: 
          variable "SerialApp_TxLen" was declared but never referenced
   \   0000CC                ; Setup parameters for call to function HalUARTWrite
   \   0000CC                ; Setup parameters for call to function strlen
   \   0000CC   85..82       MOV     DPL,?XSP + 0
   \   0000CF   85..83       MOV     DPH,?XSP + 1
   \   0000D2   AA82         MOV     R2,DPL
   \   0000D4   AB83         MOV     R3,DPH
   \   0000D6   12....       LCALL   ??strlen?relay
   \   0000D9   EA           MOV     A,R2
   \   0000DA   FC           MOV     R4,A
   \   0000DB   EB           MOV     A,R3
   \   0000DC   FD           MOV     R5,A
   \   0000DD   85..82       MOV     DPL,?XSP + 0
   \   0000E0   85..83       MOV     DPH,?XSP + 1
   \   0000E3   AA82         MOV     R2,DPL
   \   0000E5   AB83         MOV     R3,DPH
   \   0000E7   7901         MOV     R1,#0x1
   \   0000E9   12....       LCALL   ??HalUARTWrite?relay
   \   0000EC   802F         SJMP    ??SampleApp_MessageMSGCB_0
    572                  
    573                  //²âÊÔ·¢ËÍ¹Ì¶¨Êý¾Ý
    574          //         sprintf(ceshi,"POST /devices/586474334/datapoints?type=3 HTTP/1.1\r\napi-key:iA8JHWjxuRkaL7oWa8uAkQbSOdk=\r\nHost:api.heclouds.com\r\nContent-Length:20\r\n\r\n{\"temp\":89,\"hum\":50}");
    575          //         HalUARTWrite(0,ceshi,strlen(ceshi)); 
    576               }
    577           
    578                break;    
    579              case SAMPLEAPP_PERIODIC_CLUSTERID:
    580                break;
    581          
    582              case SAMPLEAPP_FLASH_CLUSTERID:
    583                flashTime = BUILD_UINT16(pkt->cmd.Data[1], pkt->cmd.Data[2] );
    584                HalLedBlink( HAL_LED_4, 4, 50, (flashTime / 4) );
   \                     ??SampleApp_MessageMSGCB_1:
   \   0000EE   8E82         MOV     DPL,R6
   \   0000F0   8F83         MOV     DPH,R7
   \   0000F2   12....       LCALL   ?Subroutine9 & 0xFFFF
   \                     ??CrossCallReturnLabel_9:
   \   0000F5   A3           INC     DPTR
   \   0000F6   E0           MOVX    A,@DPTR
   \   0000F7   FA           MOV     R2,A
   \   0000F8   8882         MOV     DPL,R0
   \   0000FA   8983         MOV     DPH,R1
   \   0000FC   A3           INC     DPTR
   \   0000FD   A3           INC     DPTR
   \   0000FE   E0           MOVX    A,@DPTR
   \   0000FF   F9           MOV     R1,A
   \   000100   EA           MOV     A,R2
   \   000101   2400         ADD     A,#0x0
   \   000103   F5..         MOV     ?V0 + 0,A
   \   000105   E4           CLR     A
   \   000106   39           ADDC    A,R1
   \   000107   F5..         MOV     ?V0 + 1,A
   \   000109   7402         MOV     A,#0x2
   \   00010B   78..         MOV     R0,#?V0 + 0
   \   00010D   12....       LCALL   ?US_SHR
   \   000110   AC..         MOV     R4,?V0 + 0
   \   000112   AD..         MOV     R5,?V0 + 1
   \   000114   7B32         MOV     R3,#0x32
   \   000116   7A04         MOV     R2,#0x4
   \   000118   7908         MOV     R1,#0x8
   \   00011A   12....       LCALL   ??HalLedBlink?relay
    585                break;
    586            }
    587          }
   \                     ??SampleApp_MessageMSGCB_0:
   \   00011D   74C8         MOV     A,#-0x38
   \   00011F   12....       LCALL   ?DEALLOC_XSTACK8
   \   000122   7F08         MOV     R7,#0x8
   \   000124   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   7900         MOV     R1,#0x0
   \   000002   12....       LCALL   ??HalUARTWrite?relay
   \   000005                ; Setup parameters for call to function HalUARTWrite
   \   000005                ; Setup parameters for call to function HalUARTWrite
   \   000005   7C01         MOV     R4,#0x1
   \   000007   7D00         MOV     R5,#0x0
   \   000009   7A..         MOV     R2,#`?<Constant "\\n">` & 0xff
   \   00000B   7B..         MOV     R3,#(`?<Constant "\\n">` >> 8) & 0xff
   \   00000D   7900         MOV     R1,#0x0
   \   00000F   22           RET
    588          
    589          /*********************************************************************
    590           * @fn      SampleApp_SendPeriodicMessage
    591           *
    592           * @brief   Send the periodic message.
    593           *
    594           * @param   none
    595           *
    596           * @return  none
    597           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    598          void SampleApp_SendPeriodicMessage( void )
   \                     SampleApp_SendPeriodicMessage:
    599          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    600            if ( AF_DataRequest( &SampleApp_Periodic_DstAddr, &SampleApp_epDesc,
    601                                 SAMPLEAPP_PERIODIC_CLUSTERID,
    602                                 1,
    603                                 (uint8*)&SampleAppPeriodicCounter,
    604                                 &SampleApp_TransID,
    605                                 AF_DISCV_ROUTE,
    606                                 AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
   \   000005                ; Setup parameters for call to function AF_DataRequest
   \   000005   75..1E       MOV     ?V0 + 0,#0x1e
   \   000008   78..         MOV     R0,#?V0 + 0
   \   00000A   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00000D   75....       MOV     ?V0 + 0,#SampleApp_TransID & 0xff
   \   000010   75....       MOV     ?V0 + 1,#(SampleApp_TransID >> 8) & 0xff
   \   000013   78..         MOV     R0,#?V0 + 0
   \   000015   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000018   75....       MOV     ?V0 + 0,#SampleAppPeriodicCounter & 0xff
   \   00001B   75....       MOV     ?V0 + 1,#(SampleAppPeriodicCounter >> 8) & 0xff
   \   00001E   78..         MOV     R0,#?V0 + 0
   \   000020   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000023   75..01       MOV     ?V0 + 0,#0x1
   \   000026   75..00       MOV     ?V0 + 1,#0x0
   \   000029   78..         MOV     R0,#?V0 + 0
   \   00002B   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00002E   78..         MOV     R0,#?V0 + 0
   \   000030   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000033   7920         MOV     R1,#0x20
   \   000035   7C..         MOV     R4,#SampleApp_epDesc & 0xff
   \   000037   7D..         MOV     R5,#(SampleApp_epDesc >> 8) & 0xff
   \   000039   7A..         MOV     R2,#SampleApp_Periodic_DstAddr & 0xff
   \   00003B   7B..         MOV     R3,#(SampleApp_Periodic_DstAddr >> 8) & 0xff
   \   00003D   12....       LCALL   ??AF_DataRequest?relay
   \   000040   7409         MOV     A,#0x9
   \   000042                REQUIRE ?Subroutine1
   \   000042                ; // Fall through to label ?Subroutine1
    607            {
    608            }
    609            else
    610            {
    611              // Error occurred in request to send.
    612            }
    613          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   12....       LCALL   ?DEALLOC_XSTACK8
   \   000003                REQUIRE ??Subroutine13_0
   \   000003                ; // Fall through to label ??Subroutine13_0
    614          
    615          /*********************************************************************
    616           * @fn      SampleApp_SendFlashMessage
    617           *
    618           * @brief   Send the flash message to group 1.
    619           *
    620           * @param   flashTime - in milliseconds
    621           *
    622           * @return  none
    623           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    624          void SampleApp_SendFlashMessage( uint16 flashTime )
   \                     SampleApp_SendFlashMessage:
    625          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 3
   \   000005   74FD         MOV     A,#-0x3
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    626            uint8 buffer[3];
    627            buffer[0] = (uint8)(SampleAppFlashCounter++);
   \   00000A   90....       MOV     DPTR,#SampleAppFlashCounter
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   85..82       MOV     DPL,?XSP + 0
   \   000011   85..83       MOV     DPH,?XSP + 1
   \   000014   F0           MOVX    @DPTR,A
   \   000015   90....       MOV     DPTR,#SampleAppFlashCounter
   \   000018   E0           MOVX    A,@DPTR
   \   000019   04           INC     A
   \   00001A   F0           MOVX    @DPTR,A
    628            buffer[1] = LO_UINT16( flashTime );
   \   00001B   7401         MOV     A,#0x1
   \   00001D   12....       LCALL   ?XSTACK_DISP0_8
   \   000020   EA           MOV     A,R2
   \   000021   F0           MOVX    @DPTR,A
    629            buffer[2] = HI_UINT16( flashTime );
   \   000022   7402         MOV     A,#0x2
   \   000024   12....       LCALL   ?XSTACK_DISP0_8
   \   000027   EB           MOV     A,R3
   \   000028   F0           MOVX    @DPTR,A
    630          
    631            if ( AF_DataRequest( &SampleApp_Flash_DstAddr, &SampleApp_epDesc,
    632                                 SAMPLEAPP_FLASH_CLUSTERID,
    633                                 3,
    634                                 buffer,
    635                                 &SampleApp_TransID,
    636                                 AF_DISCV_ROUTE,
    637                                 AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
   \   000029                ; Setup parameters for call to function AF_DataRequest
   \   000029   75..1E       MOV     ?V0 + 0,#0x1e
   \   00002C   78..         MOV     R0,#?V0 + 0
   \   00002E   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000031   75....       MOV     ?V0 + 0,#SampleApp_TransID & 0xff
   \   000034   75....       MOV     ?V0 + 1,#(SampleApp_TransID >> 8) & 0xff
   \   000037   78..         MOV     R0,#?V0 + 0
   \   000039   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00003C   7403         MOV     A,#0x3
   \   00003E   12....       LCALL   ?XSTACK_DISP0_8
   \   000041   8582..       MOV     ?V0 + 0,DPL
   \   000044   8583..       MOV     ?V0 + 1,DPH
   \   000047   78..         MOV     R0,#?V0 + 0
   \   000049   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00004C   75..03       MOV     ?V0 + 0,#0x3
   \   00004F   75..00       MOV     ?V0 + 1,#0x0
   \   000052   78..         MOV     R0,#?V0 + 0
   \   000054   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000057   75..02       MOV     ?V0 + 0,#0x2
   \   00005A   78..         MOV     R0,#?V0 + 0
   \   00005C   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00005F   7920         MOV     R1,#0x20
   \   000061   7C..         MOV     R4,#SampleApp_epDesc & 0xff
   \   000063   7D..         MOV     R5,#(SampleApp_epDesc >> 8) & 0xff
   \   000065   7A..         MOV     R2,#SampleApp_Flash_DstAddr & 0xff
   \   000067   7B..         MOV     R3,#(SampleApp_Flash_DstAddr >> 8) & 0xff
   \   000069   12....       LCALL   ??AF_DataRequest?relay
   \   00006C   7409         MOV     A,#0x9
   \   00006E   12....       LCALL   ?DEALLOC_XSTACK8
    638            {
    639            }
    640            else
    641            {
    642              // Error occurred in request to send.
    643            }
    644          }
   \   000071   7403         MOV     A,#0x3
   \   000073   80..         SJMP    ?Subroutine1
    645          
    646          /*********************************************************************
    647           * @fn      SampleApp_Send_P2P_Message
    648           *
    649           * @brief   point to point.
    650           *
    651           * @param   none
    652           *
    653           * @return  none
    654           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    655          void SampleApp_Send_P2P_Message( void )
   \                     SampleApp_Send_P2P_Message:
    656          {
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 27
   \   000005   74E5         MOV     A,#-0x1b
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    657            byte i, temp[3], humidity[3], strTemp[21];
    658            Delay_ms(500);
   \   00000A                ; Setup parameters for call to function Delay_ms
   \   00000A   7AF4         MOV     R2,#-0xc
   \   00000C   7B01         MOV     R3,#0x1
   \   00000E   12....       LCALL   ??Delay_ms?relay
    659            DHT11();             //»ñÈ¡ÎÂÊª¶È
   \   000011                ; Setup parameters for call to function DHT11
   \   000011   12....       LCALL   ??DHT11?relay
    660            Delay_ms(500);
   \   000014                ; Setup parameters for call to function Delay_ms
   \   000014   7AF4         MOV     R2,#-0xc
   \   000016   7B01         MOV     R3,#0x1
   \   000018   12....       LCALL   ??Delay_ms?relay
    661            //½«ÎÂÊª¶ÈµÄ×ª»»³É×Ö·û´®,¹©LCDÏÔÊ¾  
    662            temp[0] = wendu_shi+0x30;
   \   00001B   90....       MOV     DPTR,#wendu_shi
   \   00001E   E0           MOVX    A,@DPTR
   \   00001F   2430         ADD     A,#0x30
   \   000021   C0E0         PUSH    A
   \   000023   7403         MOV     A,#0x3
   \   000025   12....       LCALL   ?XSTACK_DISP0_8
   \   000028   D0E0         POP     A
   \   00002A   F0           MOVX    @DPTR,A
    663            temp[1] = wendu_ge+0x30;
   \   00002B   90....       MOV     DPTR,#wendu_ge
   \   00002E   E0           MOVX    A,@DPTR
   \   00002F   2430         ADD     A,#0x30
   \   000031   C0E0         PUSH    A
   \   000033   7404         MOV     A,#0x4
   \   000035   12....       LCALL   ?XSTACK_DISP0_8
   \   000038   D0E0         POP     A
   \   00003A   F0           MOVX    @DPTR,A
    664            temp[2] = '\0';
   \   00003B   7405         MOV     A,#0x5
   \   00003D   12....       LCALL   ?XSTACK_DISP0_8
   \   000040   E4           CLR     A
   \   000041   F0           MOVX    @DPTR,A
    665            humidity[0] = shidu_shi+0x30;
   \   000042   90....       MOV     DPTR,#shidu_shi
   \   000045   E0           MOVX    A,@DPTR
   \   000046   2430         ADD     A,#0x30
   \   000048   85..82       MOV     DPL,?XSP + 0
   \   00004B   85..83       MOV     DPH,?XSP + 1
   \   00004E   F0           MOVX    @DPTR,A
    666            humidity[1] = shidu_ge+0x30;
   \   00004F   90....       MOV     DPTR,#shidu_ge
   \   000052   E0           MOVX    A,@DPTR
   \   000053   2430         ADD     A,#0x30
   \   000055   C0E0         PUSH    A
   \   000057   7401         MOV     A,#0x1
   \   000059   12....       LCALL   ?XSTACK_DISP0_8
   \   00005C   D0E0         POP     A
   \   00005E   F0           MOVX    @DPTR,A
    667            humidity[2] = '\0';
   \   00005F   7402         MOV     A,#0x2
   \   000061   12....       LCALL   ?XSTACK_DISP0_8
   \   000064   E4           CLR     A
   \   000065   F0           MOVX    @DPTR,A
    668            //½«Êý¾ÝÕûºÏºó·½±ã·¢¸øÐ­µ÷Æ÷ÏÔÊ¾
    669            //{"temp": ,"hum": }
    670          //  osal_memcpy(strTemp, temp, 2); 
    671          //  osal_memcpy(&strTemp[2], "  ", 2);
    672          //  osal_memcpy(&strTemp[4], humidity, 3);
    673            
    674             osal_memcpy(strTemp,"{\"temp\":", 8); 
   \   000066                ; Setup parameters for call to function osal_memcpy
   \   000066   75....       MOV     ?V0 + 0,#`?<Constant "{\\"temp\\":">` & 0xff
   \   000069   75....       MOV     ?V0 + 1,#(`?<Constant "{\\"temp\\":">` >> 8) & 0xff
   \   00006C   F5..         MOV     ?V0 + 2,A
   \   00006E   78..         MOV     R0,#?V0 + 0
   \   000070   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000073   7C08         MOV     R4,#0x8
   \   000075   7D00         MOV     R5,#0x0
   \   000077   7409         MOV     A,#0x9
   \   000079   12....       LCALL   ?XSTACK_DISP0_8
   \   00007C   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_27:
   \   00007F   12....       LCALL   ?DEALLOC_XSTACK8
    675             osal_memcpy(&strTemp[8],temp, 2);
   \   000082                ; Setup parameters for call to function osal_memcpy
   \   000082   7403         MOV     A,#0x3
   \   000084   12....       LCALL   ?XSTACK_DISP0_8
   \   000087   A982         MOV     R1,DPL
   \   000089   AA83         MOV     R2,DPH
   \   00008B   89..         MOV     ?V0 + 0,R1
   \   00008D   8A..         MOV     ?V0 + 1,R2
   \   00008F   78..         MOV     R0,#?V0 + 0
   \   000091   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000094   7C02         MOV     R4,#0x2
   \   000096   7D00         MOV     R5,#0x0
   \   000098   7411         MOV     A,#0x11
   \   00009A   12....       LCALL   ?XSTACK_DISP0_8
   \   00009D   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_28:
   \   0000A0   12....       LCALL   ?DEALLOC_XSTACK8
    676             osal_memcpy(&strTemp[10],",\"hum\":", 7);
   \   0000A3                ; Setup parameters for call to function osal_memcpy
   \   0000A3   75....       MOV     ?V0 + 0,#`?<Constant ",\\"hum\\":">` & 0xff
   \   0000A6   75....       MOV     ?V0 + 1,#(`?<Constant ",\\"hum\\":">` >> 8) & 0xff
   \   0000A9   78..         MOV     R0,#?V0 + 0
   \   0000AB   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   0000AE   7C07         MOV     R4,#0x7
   \   0000B0   7D00         MOV     R5,#0x0
   \   0000B2   7413         MOV     A,#0x13
   \   0000B4   12....       LCALL   ?XSTACK_DISP0_8
   \   0000B7   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_29:
   \   0000BA   12....       LCALL   ?DEALLOC_XSTACK8
    677             osal_memcpy(&strTemp[17],humidity, 2);
   \   0000BD                ; Setup parameters for call to function osal_memcpy
   \   0000BD   85..82       MOV     DPL,?XSP + 0
   \   0000C0   85..83       MOV     DPH,?XSP + 1
   \   0000C3   A982         MOV     R1,DPL
   \   0000C5   AA83         MOV     R2,DPH
   \   0000C7   89..         MOV     ?V0 + 0,R1
   \   0000C9   8A..         MOV     ?V0 + 1,R2
   \   0000CB   78..         MOV     R0,#?V0 + 0
   \   0000CD   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   0000D0   7C02         MOV     R4,#0x2
   \   0000D2   7D00         MOV     R5,#0x0
   \   0000D4   741A         MOV     A,#0x1a
   \   0000D6   12....       LCALL   ?XSTACK_DISP0_8
   \   0000D9   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_30:
   \   0000DC   12....       LCALL   ?DEALLOC_XSTACK8
    678             osal_memcpy(&strTemp[19],"}", 1);
   \   0000DF                ; Setup parameters for call to function osal_memcpy
   \   0000DF   75....       MOV     ?V0 + 0,#`?<Constant "}">` & 0xff
   \   0000E2   75....       MOV     ?V0 + 1,#(`?<Constant "}">` >> 8) & 0xff
   \   0000E5   78..         MOV     R0,#?V0 + 0
   \   0000E7   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   0000EA   7C01         MOV     R4,#0x1
   \   0000EC   7D00         MOV     R5,#0x0
   \   0000EE   741C         MOV     A,#0x1c
   \   0000F0   12....       LCALL   ?XSTACK_DISP0_8
   \   0000F3   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_31:
   \   0000F6   12....       LCALL   ?DEALLOC_XSTACK8
    679            
    680            //»ñµÃµÄÎÂÊª¶ÈÍ¨¹ý´®¿ÚÊä³öµ½µçÄÔÏÔÊ¾
    681            HalUARTWrite(0, "T&H:", 4);
   \   0000F9                ; Setup parameters for call to function HalUARTWrite
   \   0000F9   7C04         MOV     R4,#0x4
   \   0000FB   7D00         MOV     R5,#0x0
   \   0000FD   7A..         MOV     R2,#`?<Constant "T&H:">` & 0xff
   \   0000FF   7B..         MOV     R3,#(`?<Constant "T&H:">` >> 8) & 0xff
   \   000101   7900         MOV     R1,#0x0
   \   000103   12....       LCALL   ??HalUARTWrite?relay
    682            HalUARTWrite(0, strTemp, 20);
   \   000106                ; Setup parameters for call to function HalUARTWrite
   \   000106   7C14         MOV     R4,#0x14
   \   000108   7D00         MOV     R5,#0x0
   \   00010A   7406         MOV     A,#0x6
   \   00010C   12....       LCALL   ?XSTACK_DISP0_8
   \   00010F   AA82         MOV     R2,DPL
   \   000111   AB83         MOV     R3,DPH
   \   000113   12....       LCALL   ?Subroutine4 & 0xFFFF
    683            HalUARTWrite(0, "\n",1);
   \                     ??CrossCallReturnLabel_3:
   \   000116   12....       LCALL   ??HalUARTWrite?relay
    684          
    685            //Êä³öµ½LCDÏÔÊ¾
    686            for(i=0; i<3; i++)
    687            {   
    688              if(i==0)
    689              {
    690                LCD_P16x16Ch(i*16,4,i*16);
   \   000119                ; Setup parameters for call to function LCD_P16x16Ch
   \   000119   7B00         MOV     R3,#0x0
   \   00011B   7A04         MOV     R2,#0x4
   \   00011D   7900         MOV     R1,#0x0
   \   00011F   12....       LCALL   ??LCD_P16x16Ch?relay
    691                LCD_P16x16Ch(i*16,6,(i+3)*16);
   \   000122                ; Setup parameters for call to function LCD_P16x16Ch
   \   000122   7B30         MOV     R3,#0x30
   \   000124   7A06         MOV     R2,#0x6
   \   000126   7900         MOV     R1,#0x0
   \   000128   12....       LCALL   ??LCD_P16x16Ch?relay
    692              }
   \   00012B   7F01         MOV     R7,#0x1
    693              else
    694              {
    695                LCD_P16x16Ch(i*16,4,i*16);
   \                     ??SampleApp_Send_P2P_Message_0:
   \   00012D   EF           MOV     A,R7
   \   00012E   C4           SWAP    A
   \   00012F   54F0         ANL     A,#0xf0
   \   000131   FE           MOV     R6,A
   \   000132                ; Setup parameters for call to function LCD_P16x16Ch
   \   000132   FB           MOV     R3,A
   \   000133   7A04         MOV     R2,#0x4
   \   000135   F9           MOV     R1,A
   \   000136   12....       LCALL   ??LCD_P16x16Ch?relay
    696                LCD_P16x16Ch(i*16,6,i*16);        
   \   000139                ; Setup parameters for call to function LCD_P16x16Ch
   \   000139   EE           MOV     A,R6
   \   00013A   FB           MOV     R3,A
   \   00013B   7A06         MOV     R2,#0x6
   \   00013D   F9           MOV     R1,A
   \   00013E   12....       LCALL   ??LCD_P16x16Ch?relay
    697              }
    698            } 
   \   000141   0F           INC     R7
   \   000142   EF           MOV     A,R7
   \   000143   C3           CLR     C
   \   000144   9403         SUBB    A,#0x3
   \   000146   40E5         JC      ??SampleApp_Send_P2P_Message_0
    699            LCD_P8x16Str(44, 4, temp);
   \   000148                ; Setup parameters for call to function LCD_P8x16Str
   \   000148   7403         MOV     A,#0x3
   \   00014A   12....       LCALL   ?XSTACK_DISP0_8
   \   00014D   AC82         MOV     R4,DPL
   \   00014F   AD83         MOV     R5,DPH
   \   000151   7A04         MOV     R2,#0x4
   \   000153   792C         MOV     R1,#0x2c
   \   000155   12....       LCALL   ??LCD_P8x16Str?relay
    700            LCD_P8x16Str(44, 6, humidity);
   \   000158                ; Setup parameters for call to function LCD_P8x16Str
   \   000158   85..82       MOV     DPL,?XSP + 0
   \   00015B   85..83       MOV     DPH,?XSP + 1
   \   00015E   AC82         MOV     R4,DPL
   \   000160   AD83         MOV     R5,DPH
   \   000162   7A06         MOV     R2,#0x6
   \   000164   792C         MOV     R1,#0x2c
   \   000166   12....       LCALL   ??LCD_P8x16Str?relay
    701           
    702            if ( AF_DataRequest( &SampleApp_P2P_DstAddr, &SampleApp_epDesc,
    703                                 SAMPLEAPP_P2P_CLUSTERID,
    704                                 20,
    705                                 strTemp,
    706                                 &SampleApp_TransID,
    707                                 AF_DISCV_ROUTE,
    708                                 AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
   \   000169                ; Setup parameters for call to function AF_DataRequest
   \   000169   75..1E       MOV     ?V0 + 0,#0x1e
   \   00016C   78..         MOV     R0,#?V0 + 0
   \   00016E   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000171   75....       MOV     ?V0 + 0,#SampleApp_TransID & 0xff
   \   000174   75....       MOV     ?V0 + 1,#(SampleApp_TransID >> 8) & 0xff
   \   000177   78..         MOV     R0,#?V0 + 0
   \   000179   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00017C   7409         MOV     A,#0x9
   \   00017E   12....       LCALL   ?XSTACK_DISP0_8
   \   000181   8582..       MOV     ?V0 + 0,DPL
   \   000184   8583..       MOV     ?V0 + 1,DPH
   \   000187   78..         MOV     R0,#?V0 + 0
   \   000189   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00018C   75..14       MOV     ?V0 + 0,#0x14
   \   00018F   75..00       MOV     ?V0 + 1,#0x0
   \   000192   78..         MOV     R0,#?V0 + 0
   \   000194   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000197   75..04       MOV     ?V0 + 0,#0x4
   \   00019A   78..         MOV     R0,#?V0 + 0
   \   00019C   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00019F   7920         MOV     R1,#0x20
   \   0001A1   7C..         MOV     R4,#SampleApp_epDesc & 0xff
   \   0001A3   7D..         MOV     R5,#(SampleApp_epDesc >> 8) & 0xff
   \   0001A5   7A..         MOV     R2,#SampleApp_P2P_DstAddr & 0xff
   \   0001A7   7B..         MOV     R3,#(SampleApp_P2P_DstAddr >> 8) & 0xff
   \   0001A9   12....       LCALL   ??AF_DataRequest?relay
   \   0001AC   7409         MOV     A,#0x9
   \   0001AE   12....       LCALL   ?DEALLOC_XSTACK8
    709            {
    710            }
    711            else
    712            {
    713              // Error occurred in request to send.
    714            }
    715          }
   \   0001B1   741B         MOV     A,#0x1b
   \   0001B3   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine7:
   \   000000   AA82         MOV     R2,DPL
   \   000002   AB83         MOV     R3,DPH
   \   000004                REQUIRE ??Subroutine14_0
   \   000004                ; // Fall through to label ??Subroutine14_0

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for flat>`:
   \   000000   01           DB 1

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??ReSetWifi?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ReSetWifi

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_HandleKeys?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_HandleKeys

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_MessageMSGCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_MessageMSGCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_SendPeriodicMessage?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_SendPeriodicMessage

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_SendFlashMessage?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_SendFlashMessage

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_Send_P2P_Message?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_Send_P2P_Message

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "UART0\\r\\n">`:
   \   000000   55415254     DB "UART0\015\012"
   \            300D0A00

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT\\r\\n">`:
   \   000000   41540D0A     DB "AT\015\012"
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Group 1">`:
   \   000000   47726F75     DB "Group 1"
   \            70203100

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "SampleApp">`:
   \   000000   53616D70     DB "SampleApp"
   \            6C654170
   \            7000    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "OK">`:
   \   000000   4F4B00       DB "OK"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT+CWMODE=3\\r\\n">`:
   \   000000   41542B43     DB "AT+CWMODE=3\015\012"
   \            574D4F44
   \            453D330D
   \            0A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "ATOK\\r\\n">`:
   \   000000   41544F4B     DB "ATOK\015\012"
   \            0D0A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT ERR\\r\\n">`:
   \   000000   41542045     DB "AT ERR\015\012"
   \            52520D0A
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT+CWJAP=\\"CMCC-IOT\\",\\"...">`:
   \   000000   41542B43     DB "AT+CWJAP=\"CMCC-IOT\",\"linyi1234567890\"\015\012"
   \            574A4150
   \            3D22434D
   \            43432D49
   \            4F54222C
   \            226C696E
   \            79693132
   \            33343536
   \            37383930
   \            220D0A00

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "ERROR">`:
   \   000000   4552524F     DB "ERROR"
   \            5200    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT+CIPSTART=\\"TCP\\",\\"18...">`:
   \   000000   41542B43     DB "AT+CIPSTART=\"TCP\",\"183.230.40.33\",80\015\012"
   \            49505354
   \            4152543D
   \            22544350
   \            222C2231
   \            38332E32
   \            33302E34
   \            302E3333
   \            222C3830
   \            0D0A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT+CIPMODE=1\\r\\n">`:
   \   000000   41542B43     DB "AT+CIPMODE=1\015\012"
   \            49504D4F
   \            44453D31
   \            0D0A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT+CIPSEND\\r\\n">`:
   \   000000   41542B43     DB "AT+CIPSEND\015\012"
   \            49505345
   \            4E440D0A
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant ">">`:
   \   000000   3E00         DB ">"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "touchuan ok\\r\\n">`:
   \   000000   746F7563     DB "touchuan ok\015\012"
   \            6875616E
   \            206F6B0D
   \            0A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "\\n">`:
   \   000000   0A00         DB "\012"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "POST /devices/%s/data...">`:
   \   000000   504F5354     DB 50H, 4FH, 53H, 54H, 20H, 2FH, 64H, 65H
   \            202F6465
   \   000008   76696365     DB 76H, 69H, 63H, 65H, 73H, 2FH, 25H, 73H
   \            732F2573
   \   000010   2F646174     DB 2FH, 64H, 61H, 74H, 61H, 70H, 6FH, 69H
   \            61706F69
   \   000018   6E74733F     DB 6EH, 74H, 73H, 3FH, 74H, 79H, 70H, 65H
   \            74797065
   \   000020   3D332048     DB 3DH, 33H, 20H, 48H, 54H, 54H, 50H, 2FH
   \            5454502F
   \   000028   312E310D     DB 31H, 2EH, 31H, 0DH, 0AH, 61H, 70H, 69H
   \            0A617069
   \   000030   2D6B6579     DB 2DH, 6BH, 65H, 79H, 3AH, 25H, 73H, 0DH
   \            3A25730D
   \   000038   0A486F73     DB 0AH, 48H, 6FH, 73H, 74H, 3AH, 61H, 70H
   \            743A6170
   \   000040   692E6865     DB 69H, 2EH, 68H, 65H, 63H, 6CH, 6FH, 75H
   \            636C6F75
   \   000048   64732E63     DB 64H, 73H, 2EH, 63H, 6FH, 6DH, 0DH, 0AH
   \            6F6D0D0A
   \   000050   436F6E74     DB 43H, 6FH, 6EH, 74H, 65H, 6EH, 74H, 2DH
   \            656E742D
   \   000058   4C656E67     DB 4CH, 65H, 6EH, 67H, 74H, 68H, 3AH, 25H
   \            74683A25
   \   000060   640D0A0D     DB 64H, 0DH, 0AH, 0DH, 0AH, 25H, 73H, 0
   \            0A257300

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "586474334">`:
   \   000000   35383634     DB "586474334"
   \            37343333
   \            3400    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "iA8JHWjxuRkaL7oWa8uAk...">`:
   \   000000   6941384A     DB "iA8JHWjxuRkaL7oWa8uAkQbSOdk="
   \            48576A78
   \            75526B61
   \            4C376F57
   \            61387541
   \            6B516253
   \            4F646B3D
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "{\\"temp\\":">`:
   \   000000   7B227465     DB "{\"temp\":"
   \            6D70223A
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant ",\\"hum\\":">`:
   \   000000   2C226875     DB ",\"hum\":"
   \            6D223A00

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "}">`:
   \   000000   7D00         DB "}"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "T&H:">`:
   \   000000   5426483A     DB "T&H:"
   \            00      
    716          
    717          /*********************************************************************
    718          *********************************************************************/

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     ReSetWifi                          2      0    111
       -> Delay_ms                      4      0      0
       -> Delay_ms                      4      0      0
     SampleApp_HandleKeys               0      0     30
       -> SampleApp_SendFlashMessage
                                        0      0     20
       -> aps_FindGroup                 0      0     20
       -> aps_RemoveGroup               0      0     20
       -> aps_AddGroup                  0      0     20
     SampleApp_Init                     0      0    114
       -> MT_UartInit                   0      0    222
       -> MT_UartRegisterTaskID         0      0    222
       -> HalUARTWrite                  0      0    222
       -> osal_memset                   0      0    222
       -> HalUARTWrite                  0      0    222
       -> ReSetWifi                     0      0    222
       -> Delay_ms                      0      0    222
       -> HalUARTWrite                  0      0    222
       -> osal_msg_allocate             0      0    222
       -> afRegister                    0      0    222
       -> RegisterForKeys               0      0    222
       -> osal_memcpy                   0      0    228
       -> aps_AddGroup                  0      0    222
       -> HalLcdWriteString             0      0    222
     SampleApp_MessageMSGCB             0      0    244
       -> HalUARTWrite                  0      0    432
       -> HalUARTWrite                  0      0    432
       -> sprintf                       0      0    448
       -> sprintf                       0      0    448
       -> strlen                        0      0    432
       -> HalUARTWrite                  0      0    432
       -> HalLedBlink                   0      0    432
     SampleApp_ProcessEvent             0      0     20
       -> osal_msg_receive              0      0     40
       -> osal_start_timerEx            0      0     40
       -> osal_msg_deallocate           0      0     40
       -> osal_msg_receive              0      0     40
       -> SampleApp_HandleKeys          0      0     40
       -> SampleApp_MessageMSGCB        0      0     40
       -> HalUARTWrite                  0      0     40
       -> strstr                        0      0     40
       -> HalUARTWrite                  0      0     40
       -> HalUARTWrite                  0      0     40
       -> Delay_ms                      0      0     40
       -> HalUARTWrite                  0      0     40
       -> strstr                        0      0     40
       -> HalUARTWrite                  0      0     40
       -> Delay_ms                      0      0     40
       -> strstr                        0      0     40
       -> strstr                        0      0     40
       -> HalUARTWrite                  0      0     40
       -> Delay_ms                      0      0     40
       -> strstr                        0      0     40
       -> ReSetWifi                     0      0     40
       -> Delay_ms                      0      0     40
       -> HalUARTWrite                  0      0     40
       -> strstr                        0      0     40
       -> HalUARTWrite                  0      0     40
       -> Delay_ms                      0      0     40
       -> strstr                        0      0     40
       -> HalUARTWrite                  0      0     40
       -> Delay_ms                      0      0     40
       -> strstr                        0      0     40
       -> HalUARTWrite                  0      0     40
       -> HalUARTWrite                  0      0     40
       -> SampleApp_Send_P2P_Message
                                        0      0     40
       -> osal_rand                     0      0     40
       -> osal_start_timerEx            0      0     40
     SampleApp_SendFlashMessage         1      0     32
       -> AF_DataRequest                0      0     44
     SampleApp_SendPeriodicMessage      0      0     19
       -> AF_DataRequest                0      0     38
     SampleApp_Send_P2P_Message         1      0     67
       -> Delay_ms                      0      0     76
       -> DHT11                         0      0     76
       -> Delay_ms                      0      0     76
       -> osal_memcpy                   0      0     82
       -> osal_memcpy                   0      0     82
       -> osal_memcpy                   0      0     82
       -> osal_memcpy                   0      0     82
       -> osal_memcpy                   0      0     82
       -> HalUARTWrite                  0      0     76
       -> HalUARTWrite                  0      0     76
       -> HalUARTWrite                  0      0     76
       -> LCD_P16x16Ch                  0      0     76
       -> LCD_P16x16Ch                  0      0     76
       -> LCD_P16x16Ch                  0      0     76
       -> LCD_P16x16Ch                  0      0     76
       -> LCD_P8x16Str                  0      0     76
       -> LCD_P8x16Str                  0      0     76
       -> AF_DataRequest                0      0     94


   Segment part sizes:

     Function/Label                            Bytes
     --------------                            -----
     _A_P0                                        1
     P0SEL                                        1
     P0DIR                                        1
     line                                         2
     len_rcv                                      1
     flat                                         1
     SampleApp_ClusterList                        4
     SampleApp_SimpleDesc                        12
     SampleApp_epDesc                             6
     SampleApp_TaskID                             1
     SampleApp_NwkState                           1
     SampleApp_TransID                            1
     SampleApp_Periodic_DstAddr                  12
     SampleApp_Flash_DstAddr                     12
     SampleApp_P2P_DstAddr                       12
     SampleApp_Group                             18
     SampleAppPeriodicCounter                     1
     SampleAppFlashCounter                        1
     ReSetWifi                                   32
     SampleApp_Init                             287
     ?Subroutine0                                 8
     ?Subroutine3                                19
     ??Subroutine14_0                             6
     SampleApp_ProcessEvent                     503
     ?Subroutine8                                13
     ?Subroutine6                                13
     ?Subroutine10                               19
     ?Subroutine5                                 4
     ??Subroutine11_0                             9
     ?Subroutine9                                10
     ?Subroutine2                                 2
     ??Subroutine12_0                             7
     SampleApp_HandleKeys                        62
     ??Subroutine13_0                             5
     SampleApp_MessageMSGCB                     295
     ?Subroutine4                                16
     SampleApp_SendPeriodicMessage               66
     ?Subroutine1                                 3
     SampleApp_SendFlashMessage                 117
     SampleApp_Send_P2P_Message                 438
     ?Subroutine7                                 4
     ?<Initializer for flat>                      1
     ??ReSetWifi?relay                            6
     ??SampleApp_Init?relay                       6
     ??SampleApp_ProcessEvent?relay               6
     ??SampleApp_HandleKeys?relay                 6
     ??SampleApp_MessageMSGCB?relay               6
     ??SampleApp_SendPeriodicMessage?relay        6
     ??SampleApp_SendFlashMessage?relay           6
     ??SampleApp_Send_P2P_Message?relay           6
     ?<Constant "UART0\r\n">                      8
     ?<Constant "AT\r\n">                         5
     ?<Constant "Group 1">                        8
     ?<Constant "SampleApp">                     10
     ?<Constant "OK">                             3
     ?<Constant "AT+CWMODE=3\r\n">               14
     ?<Constant "ATOK\r\n">                       7
     ?<Constant "AT ERR\r\n">                     9
     ?<Constant "AT+CWJAP=\"CMCC-IOT\",\"...">   40
     ?<Constant "ERROR">                          6
     ?<Constant "AT+CIPSTART=\"TCP\",\"18...">   39
     ?<Constant "AT+CIPMODE=1\r\n">              15
     ?<Constant "AT+CIPSEND\r\n">                13
     ?<Constant ">">                              2
     ?<Constant "touchuan ok\r\n">               14
     ?<Constant "\n">                             2
     ?<Constant "POST /devices/%s/data...">     104
     ?<Constant "586474334">                     10
     ?<Constant "iA8JHWjxuRkaL7oWa8uAk...">      29
     ?<Constant "{\"temp\":">                     9
     ?<Constant ",\"hum\":">                      8
     ?<Constant "}">                              2
     ?<Constant "T&H:">                           5

 
 1 938 bytes in segment BANKED_CODE
    48 bytes in segment BANK_RELAYS
     3 bytes in segment SFR_AN
     1 byte  in segment XDATA_I
     1 byte  in segment XDATA_ID
   378 bytes in segment XDATA_ROM_C
    68 bytes in segment XDATA_Z
 
 1 987 bytes of CODE  memory
   378 bytes of CONST memory
     0 bytes of DATA  memory (+ 3 bytes shared)
    69 bytes of XDATA memory

Errors: none
Warnings: 17
