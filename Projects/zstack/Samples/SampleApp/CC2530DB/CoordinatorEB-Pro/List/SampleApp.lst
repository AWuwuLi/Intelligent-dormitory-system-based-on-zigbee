###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.3.10338/W32 for 8051         27/Jun/2025  14:42:34 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONE #
#                          NET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-CC #
#                          2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp #
#                          \Source\SampleApp.c                                #
#    Command line       =  -f "D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ #
#                          ½ONENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStac #
#                          k-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sampl #
#                          eApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg #
#                          " (-DCPU32MHZ -DROOT=__near_func                   #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS) -f       #
#                          "D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ON #
#                          ENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-C #
#                          C2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"  #
#                          (-DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR      #
#                          -DDEFAULT_CHANLIST=0x00020000                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          "D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ON #
#                          ENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-C #
#                          C2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleAp #
#                          p\Source\SampleApp.c" -D ZIGBEEPRO -D ZTOOL_P1 -D  #
#                          xMT_TASK -D xMT_SYS_FUNC -D xMT_ZDO_FUNC -D        #
#                          LCD_SUPPORTED=DEBUG -D xWDT_IN_PM1 -lC             #
#                          "D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ON #
#                          ENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-C #
#                          C2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\CoordinatorEB-Pro\List\" -lA            #
#                          "D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ON #
#                          ENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-C #
#                          C2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\CoordinatorEB-Pro\List\"                #
#                          --diag_suppress Pe001,Pa010 -o "D:\Program         #
#                          field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\¶àÖÕ¶ËÊ #
#                          ý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-CC2530-2.3.0- #
#                          1.4.0\Projects\zstack\Samples\SampleApp\CC2530DB\C #
#                          oordinatorEB-Pro\Obj\" -e --debug --core=plain     #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "D:\Program                #
#                          field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\¶àÖÕ¶ËÊ #
#                          ý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-CC2530-2.3.0- #
#                          1.4.0\Projects\zstack\Samples\SampleApp\CC2530DB\" #
#                           -I "D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍ #
#                          µ½ONENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZSta #
#                          ck-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\SOURCE\" -I "D:\Program          #
#                          field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\¶àÖÕ¶ËÊ #
#                          ý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-CC2530-2.3.0- #
#                          1.4.0\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\ZMAIN\TI2530DB\" -I "D:\Program            #
#                          field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\¶àÖÕ¶ËÊ #
#                          ý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-CC2530-2.3.0- #
#                          1.4.0\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\MT\" -I "D:\Program       #
#                          field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\¶àÖÕ¶ËÊ #
#                          ý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-CC2530-2.3.0- #
#                          1.4.0\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\HAL\INCLUDE\" -I          #
#                          "D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ON #
#                          ENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-C #
#                          C2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\TARGET\CC #
#                          2530EB\" -I "D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍø #
#                          WiFi·¢ËÍµ½ONENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONE #
#                          NET\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\O #
#                          SAL\MCU\CCSOC\" -I "D:\Program                     #
#                          field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\¶àÖÕ¶ËÊ #
#                          ý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-CC2530-2.3.0- #
#                          1.4.0\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\OSAL\INCLUDE\" -I         #
#                          "D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ON #
#                          ENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-C #
#                          C2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\AF\"    #
#                          -I "D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ #
#                          ½ONENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStac #
#                          k-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sampl #
#                          eApp\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\NWK\ #
#                          " -I "D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢Ë #
#                          Íµ½ONENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZSt #
#                          ack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SE #
#                          C\" -I "D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi· #
#                          ¢ËÍµ½ONENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\Z #
#                          Stack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\S #
#                          ampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ #
#                          SAPI\" -I "D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWi #
#                          Fi·¢ËÍµ½ONENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENE #
#                          T\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Sample #
#                          s\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\STA #
#                          CK\SYS\" -I "D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍø #
#                          WiFi·¢ËÍµ½ONENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONE #
#                          NET\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\S #
#                          TACK\ZDO\" -I "D:\Program                          #
#                          field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\¶àÖÕ¶ËÊ #
#                          ý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-CC2530-2.3.0- #
#                          1.4.0\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\ZMAC\F8W\" -I             #
#                          "D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ON #
#                          ENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-C #
#                          C2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\" -I     #
#                          "D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ON #
#                          ENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-C #
#                          C2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES\SADD #
#                          R\" -I "D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi· #
#                          ¢ËÍµ½ONENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\Z #
#                          Stack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\S #
#                          ampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\SERVIC #
#                          ES\SDATA\" -I "D:\Program                          #
#                          field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\¶àÖÕ¶ËÊ #
#                          ý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-CC2530-2.3.0- #
#                          1.4.0\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\MAC\INCLUDE\" -I          #
#                          "D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ON #
#                          ENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-C #
#                          C2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\HIGH_LEVE #
#                          L\" -I "D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi· #
#                          ¢ËÍµ½ONENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\Z #
#                          Stack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\S #
#                          ampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LO #
#                          W_LEVEL\srf04\" -I "D:\Program                     #
#                          field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\¶àÖÕ¶ËÊ #
#                          ý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-CC2530-2.3.0- #
#                          1.4.0\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\MAC\LOW_LEVEL\srf04\SINGL #
#                          E_CHIP\" -Ohz --require_prototypes                 #
#    List file          =  D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONE #
#                          NET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-CC #
#                          2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp #
#                          \CC2530DB\CoordinatorEB-Pro\List\SampleApp.lst     #
#    Object file        =  D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONE #
#                          NET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-CC #
#                          2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp #
#                          \CC2530DB\CoordinatorEB-Pro\Obj\SampleApp.r51      #
#                                                                             #
#                                                                             #
###############################################################################

D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\Source\SampleApp.c
      1          #include "OSAL.h"
      2          #include "ZGlobals.h"
      3          #include "AF.h"
      4          #include "aps_groups.h"
      5          #include "ZDApp.h"
      6          
      7          #include "SampleApp.h"
      8          #include "SampleAppHw.h"
      9          
     10          #include "OnBoard.h"

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xa8
   \   union <unnamed> volatile __sfr _A_IEN0
   \                     _A_IEN0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xc9
   \   unsigned char volatile __sfr WDCTL
   \                     WDCTL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf5
   \   unsigned char volatile __sfr P2SEL
   \                     P2SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfd
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1
     11          
     12          /* HAL */
     13          #include "hal_lcd.h"
     14          #include "hal_led.h"
     15          #include "hal_key.h"
     16          #include "MT_UART.h"
     17          #include "MT_APP.h"
     18          #include "MT.h"
     19          #include "DHT11.h"
     20          #include "stdio.h"
     21          #include "string.h"
     22          #include <stdlib.h>
     23          
     24          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     25          //ÐèÒªÐÞ¸ÄµÄÊÇÏÂÃæ5ÐÐ
     26          
     27          #define  token    "version=2018-10-31&res=products%2F9dBJ0I0C3F%2Fdevices%2Fyinxingru&et=1751180218&method=md5&sign=JLWxKRqwjaSDZIrUqwrgVg%3D%3D" //token¹¤¾ß¼ÆËãÖµ
     28          #define  devid    "yinxingru"           //ÐÂ°æ±¾onenetÆ½Ì¨Éè±¸id
     29          #define  proid     "9dBJ0I0C3F"                 //ÐÂ°æ±¾onenetÆ½Ì¨²úÆ·id
     30          #define  LYSSID    "yinxingru"                   // ÐÞ¸ÄÄãÂ·ÓÉÆ÷µÄSSId
     31          #define  LYPASSWD  "woshiyxr"  
     32          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     33          
     34          #define WIFIRESET   P0_6             // P0.6¿Ú¿ØÖÆwifi reset
     35          //WIFIÁ¬½ÓÃüÁî
     36          #define AT_C       "AT\r\n"
     37          #define CWMODE_C   "AT+CWMODE=1\r\n"    //STAÄ£Ê½
     38          #define CIPMODE_C  "AT+CIPMODE=0\r\n"   //·ÇÍ¸´«Ä£Ê½
     39          #define MQTTCONN "AT+MQTTCONN=0,\"mqtts.heclouds.com\",1883,1\r\n"//Á¬½Ómqtt·þÎñÆ÷
     40          
     41          #define RELAY P0_6 //¼ÌµçÆ÷¿ØÖÆÒý½Å

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     42          char ibusy = 0;  //ÅÐ¶ÏÊÇ·ñÔÚ·¢ËÍÊý¾Ý
   \                     ibusy:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     43          int kmg=0;  
   \                     kmg:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_I, align 1, keep-with-next
     44          uint8 flat = 1;
   \                     flat:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for flat>`
   \   000001                REQUIRE __INIT_XDATA_I

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     45          uint8 relay,hum_old,hum_new;  
   \                     relay:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     hum_old:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     hum_new:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     46          uint8 adc=0;
   \                     adc:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     47          /*********************************************************************
     48           * MACROS
     49           */
     50          
     51          /*********************************************************************
     52           * CONSTANTS
     53           */
     54          
     55          /*********************************************************************
     56           * TYPEDEFS
     57           */
     58          
     59          /*********************************************************************
     60           * GLOBAL VARIABLES
     61           */
     62          
     63          // Ó¦ÓÃ³ÌÐòÖ§³ÖµÄCluster IDÁÐ±í

   \                                 In  segment XDATA_ROM_C, align 1
     64          const cId_t SampleApp_ClusterList[SAMPLEAPP_MAX_CLUSTERS] =
   \                     SampleApp_ClusterList:
   \   000000   0100         DW 1
   \   000002   0200         DW 2
     65          {
     66            SAMPLEAPP_PERIODIC_CLUSTERID,
     67            SAMPLEAPP_FLASH_CLUSTERID
     68          };
     69          

   \                                 In  segment XDATA_ROM_C, align 1
     70          const SimpleDescriptionFormat_t SampleApp_SimpleDesc =
   \                     SampleApp_SimpleDesc:
   \   000000   14           DB 20
   \   000001   080F         DW 3848
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   02           DB 2
   \   000007   ....         DW SampleApp_ClusterList
   \   000009   02           DB 2
   \   00000A   ....         DW SampleApp_ClusterList
     71          {
     72            SAMPLEAPP_ENDPOINT,              //  int Endpoint;
     73            SAMPLEAPP_PROFID,                //  uint16 AppProfId[2];
     74            SAMPLEAPP_DEVICEID,              //  uint16 AppDeviceId[2];
     75            SAMPLEAPP_DEVICE_VERSION,        //  int   AppDevVer:4;
     76            SAMPLEAPP_FLAGS,                 //  int   AppFlags:4;
     77            SAMPLEAPP_MAX_CLUSTERS,          //  uint8  AppNumInClusters;
     78            (cId_t *)SampleApp_ClusterList,  //  uint8 *pAppInClusterList;
     79            SAMPLEAPP_MAX_CLUSTERS,          //  uint8  AppNumInClusters;
     80            (cId_t *)SampleApp_ClusterList   //  uint8 *pAppInClusterList;
     81          };
     82          
     83          // This is the Endpoint/Interface description.  It is defined here, but
     84          // filled-in in SampleApp_Init().  Another way to go would be to fill
     85          // in the structure here and make it a "const" (in code space).  The
     86          // way it's defined in this sample app it is define in RAM.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     87          endPointDesc_t SampleApp_epDesc;
   \                     SampleApp_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
     88          
     89          /*********************************************************************
     90           * EXTERNAL VARIABLES
     91           */
     92          
     93          /*********************************************************************
     94           * EXTERNAL FUNCTIONS
     95           */
     96          
     97          /*********************************************************************
     98           * LOCAL VARIABLES
     99           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    100          uint8 SampleApp_TaskID;   // Task ID for internal task/event processing
   \                     SampleApp_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    101                                    // This variable will be received when
    102                                    // SampleApp_Init() is called.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    103          devStates_t SampleApp_NwkState;
   \                     SampleApp_NwkState:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    104          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    105          uint8 SampleApp_TransID;  // This is the unique message ID (counter)
   \                     SampleApp_TransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    106          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    107          afAddrType_t SampleApp_Periodic_DstAddr; //¹ã²¥
   \                     SampleApp_Periodic_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    108          afAddrType_t SampleApp_Flash_DstAddr;    //×é²¥
   \                     SampleApp_Flash_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    109          afAddrType_t SampleApp_P2P_DstAddr;      //µã²¥
   \                     SampleApp_P2P_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    110          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    111          aps_Group_t SampleApp_Group;
   \                     SampleApp_Group:
   \   000000                DS 18
   \   000012                REQUIRE __INIT_XDATA_Z
    112          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    113          uint8 SampleAppPeriodicCounter = 0;
   \                     SampleAppPeriodicCounter:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    114          uint8 SampleAppFlashCounter = 0;
   \                     SampleAppFlashCounter:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    115          
    116          
    117          
    118          /*********************************************************************
    119           * LOCAL FUNCTIONS
    120           */
    121          void SampleApp_HandleKeys( uint8 shift, uint8 keys );
    122          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pckt );
    123          void SampleApp_SendPeriodicMessage( void );
    124          void SampleApp_SendFlashMessage( uint16 flashTime );
    125          void ReSetWifi(void);
    126          void ClearRAM(uint8* ram,uint32 n);
    127          /*********************************************************************
    128           * NETWORK LAYER CALLBACKS
    129           */
    130          
    131          /*********************************************************************
    132           * PUBLIC FUNCTIONS
    133           */
    134          
    135          
    136          /****************************************************************************
    137          * Ãû    ³Æ: ReSetWifi()
    138          * ¹¦    ÄÜ: µÍµçÆ½¸´Î»wifiÄ£¿é
    139          * Èë¿Ú²ÎÊý: ÎÞ
    140          * ³ö¿Ú²ÎÊý: ÎÞ
    141          ****************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    142          void ReSetWifi(void)
   \                     ReSetWifi:
    143          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    144            //P0DIR |= 0x40;                  //P0.6¶¨ÒåÎªÊä³ö
    145            //WIFIRESET = 0;                  //µÍµçÆ½¸´Î»---------------------
    146           //Delay_ms(500);
    147           // WIFIRESET = 1;                  //¸ßµçÆ½¹¤×÷------------
    148            Delay_ms(500);
   \   000004                ; Setup parameters for call to function Delay_ms
   \   000004   7AF4         MOV     R2,#-0xc
   \   000006   7B01         MOV     R3,#0x1
   \   000008   12....       LCALL   ??Delay_ms?relay
    149          }
   \   00000B   D083         POP     DPH
   \   00000D   D082         POP     DPL
   \   00000F   02....       LJMP    ?BRET
    150          /*********************************************************************
    151           * @fn      SampleApp_Init
    152           *
    153           * @brief   Initialization function for the Generic App Task.
    154           *          This is called during initialization and should contain
    155           *          any application specific initialization (ie. hardware
    156           *          initialization/setup, table initialization, power up
    157           *          notificaiton ... ).
    158           *
    159           * @param   task_id - the ID assigned by OSAL.  This ID should be
    160           *                    used to send messages and set timers.
    161           *
    162           * @return  none
    163           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    164          void SampleApp_Init( uint8 task_id )
   \                     SampleApp_Init:
    165          { 
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 10
   \   000005   74F6         MOV     A,#-0xa
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
   \   00000B   FE           MOV     R6,A
    166            
    167            unsigned char tmp[10];
    168            SampleApp_TaskID = task_id;
   \   00000C   90....       MOV     DPTR,#SampleApp_TaskID
   \   00000F   F0           MOVX    @DPTR,A
    169            SampleApp_NwkState = DEV_INIT;
   \   000010   90....       MOV     DPTR,#SampleApp_NwkState
   \   000013   7401         MOV     A,#0x1
   \   000015   F0           MOVX    @DPTR,A
    170            SampleApp_TransID = 0;
   \   000016   90....       MOV     DPTR,#SampleApp_TransID
   \   000019   E4           CLR     A
   \   00001A   F0           MOVX    @DPTR,A
    171            
    172            MT_UartInit();                  //´®¿Ú³õÊ¼»¯
   \   00001B                ; Setup parameters for call to function MT_UartInit
   \   00001B   12....       LCALL   ??MT_UartInit?relay
    173            MT_UartRegisterTaskID(task_id); //×¢²á´®¿ÚÈÎÎñ
   \   00001E                ; Setup parameters for call to function MT_UartRegisterTaskID
   \   00001E   EE           MOV     A,R6
   \   00001F   F9           MOV     R1,A
   \   000020   12....       LCALL   ??MT_UartRegisterTaskID?relay
    174            HalUARTWrite(0, "CoordinatorZB\r\n", 15);
   \   000023                ; Setup parameters for call to function HalUARTWrite
   \   000023   7C0F         MOV     R4,#0xf
   \   000025   7D00         MOV     R5,#0x0
   \   000027   7A..         MOV     R2,#`?<Constant "CoordinatorZB\\r\\n">` & 0xff
   \   000029   7B..         MOV     R3,#(`?<Constant "CoordinatorZB\\r\\n">` >> 8) & 0xff
   \   00002B   7900         MOV     R1,#0x0
   \   00002D   12....       LCALL   ??HalUARTWrite?relay
    175            osal_memset(tmp,0,10);
   \   000030                ; Setup parameters for call to function osal_memset
   \   000030   7C0A         MOV     R4,#0xa
   \   000032   7D00         MOV     R5,#0x0
   \   000034   7900         MOV     R1,#0x0
   \   000036   85..82       MOV     DPL,?XSP + 0
   \   000039   85..83       MOV     DPH,?XSP + 1
   \   00003C   AA82         MOV     R2,DPL
   \   00003E   AB83         MOV     R3,DPH
   \   000040   12....       LCALL   ??osal_memset?relay
    176            tmp[0] = HAL_UART_DMA+0x30;
   \   000043   85..82       MOV     DPL,?XSP + 0
   \   000046   85..83       MOV     DPH,?XSP + 1
   \   000049   7431         MOV     A,#0x31
   \   00004B   F0           MOVX    @DPTR,A
    177            tmp[1] = HAL_UART_ISR+0x30;
   \   00004C   7401         MOV     A,#0x1
   \   00004E   12....       LCALL   ?XSTACK_DISP0_8
   \   000051   7432         MOV     A,#0x32
   \   000053   F0           MOVX    @DPTR,A
    178            tmp[2] = HAL_UART_USB+0x30;
   \   000054   7402         MOV     A,#0x2
   \   000056   12....       LCALL   ?XSTACK_DISP0_8
   \   000059   7430         MOV     A,#0x30
   \   00005B   F0           MOVX    @DPTR,A
    179            HalUARTWrite(0, tmp, 6);
   \   00005C                ; Setup parameters for call to function HalUARTWrite
   \   00005C   7C06         MOV     R4,#0x6
   \   00005E   7D00         MOV     R5,#0x0
   \   000060   85..82       MOV     DPL,?XSP + 0
   \   000063   85..83       MOV     DPH,?XSP + 1
   \   000066   AA82         MOV     R2,DPL
   \   000068   AB83         MOV     R3,DPH
   \   00006A   7900         MOV     R1,#0x0
   \   00006C   12....       LCALL   ??HalUARTWrite?relay
    180              
    181             P2SEL &= 0xfe;                  //P0_7ÅäÖÃ³ÉÍ¨ÓÃio ÎÂÊª¶È
   \   00006F   53F5FE       ANL     0xf5,#0xfe
    182             ReSetWifi();
   \   000072                ; Setup parameters for call to function Delay_ms
   \   000072   12....       LCALL   ?Subroutine2 & 0xFFFF
    183             Delay_ms(1000);                //µÈ´ýÄ£¿éÆô¶¯
    184             
    185             HalUARTWrite(1,"AT\r\n",strlen("AT\r\n")); //·¢ËÍAT¼ì²âWiFiÄ£¿é
    186          
    187            // Device hardware initialization can be added here or in main() (Zmain.c).
    188            // If the hardware is application specific - add it here.
    189            // If the hardware is other parts of the device add it in main().
    190          
    191           #if defined ( BUILD_ALL_DEVICES )
    192            // The "Demo" target is setup to have BUILD_ALL_DEVICES and HOLD_AUTO_START
    193            // We are looking at a jumper (defined in SampleAppHw.c) to be jumpered
    194            // together - if they are - we will start up a coordinator. Otherwise,
    195            // the device will start as a router.
    196            if ( readCoordinatorJumper() )
    197              zgDeviceLogicalType = ZG_DEVICETYPE_COORDINATOR;
    198            else
    199              zgDeviceLogicalType = ZG_DEVICETYPE_ROUTER;
    200          #endif // BUILD_ALL_DEVICES
    201          
    202          #if defined ( HOLD_AUTO_START )
    203            // HOLD_AUTO_START is a compile option that will surpress ZDApp
    204            //  from starting the device and wait for the application to
    205            //  start the device.
    206            ZDOInitDevice(0);
    207          #endif
    208          
    209          //  Setup for the periodic message's destination address
    210          //  Broadcast to everyone
    211          //  SampleApp_Periodic_DstAddr.addrMode = (afAddrMode_t)AddrBroadcast;
    212          //  SampleApp_Periodic_DstAddr.endPoint = SAMPLEAPP_ENDPOINT;
    213          //  SampleApp_Periodic_DstAddr.addr.shortAddr = 0xFFFF;
    214            SampleApp_Periodic_DstAddr.addrMode = (afAddrMode_t)Addr16Bit;
   \                     ??CrossCallReturnLabel_0:
   \   000075   90....       MOV     DPTR,#SampleApp_Periodic_DstAddr + 8
   \   000078   7402         MOV     A,#0x2
   \   00007A   F0           MOVX    @DPTR,A
    215            SampleApp_Periodic_DstAddr.endPoint = SAMPLEAPP_ENDPOINT;
   \   00007B   A3           INC     DPTR
   \   00007C   7414         MOV     A,#0x14
   \   00007E   F0           MOVX    @DPTR,A
    216            SampleApp_Periodic_DstAddr.addr.shortAddr = 0x0000; 
   \   00007F   90....       MOV     DPTR,#SampleApp_Periodic_DstAddr
   \   000082   E4           CLR     A
   \   000083   F0           MOVX    @DPTR,A
   \   000084   A3           INC     DPTR
   \   000085   F0           MOVX    @DPTR,A
    217            
    218          
    219            // Setup for the flash command's destination address - Group 1
    220            SampleApp_Flash_DstAddr.addrMode = (afAddrMode_t)afAddrGroup;
   \   000086   90....       MOV     DPTR,#SampleApp_Flash_DstAddr + 8
   \   000089   04           INC     A
   \   00008A   F0           MOVX    @DPTR,A
    221            SampleApp_Flash_DstAddr.endPoint = SAMPLEAPP_ENDPOINT;
   \   00008B   A3           INC     DPTR
   \   00008C   7414         MOV     A,#0x14
   \   00008E   F0           MOVX    @DPTR,A
    222            SampleApp_Flash_DstAddr.addr.shortAddr = SAMPLEAPP_FLASH_GROUP;
   \   00008F   90....       MOV     DPTR,#SampleApp_Flash_DstAddr
   \   000092   7401         MOV     A,#0x1
   \   000094   F0           MOVX    @DPTR,A
   \   000095   A3           INC     DPTR
   \   000096   E4           CLR     A
   \   000097   F0           MOVX    @DPTR,A
    223            
    224            SampleApp_P2P_DstAddr.addrMode = (afAddrMode_t)Addr16Bit; //µã²¥ 
   \   000098   90....       MOV     DPTR,#SampleApp_P2P_DstAddr + 8
   \   00009B   7402         MOV     A,#0x2
   \   00009D   F0           MOVX    @DPTR,A
    225            SampleApp_P2P_DstAddr.endPoint = SAMPLEAPP_ENDPOINT; 
   \   00009E   A3           INC     DPTR
   \   00009F   7414         MOV     A,#0x14
   \   0000A1   F0           MOVX    @DPTR,A
    226            SampleApp_P2P_DstAddr.addr.shortAddr = 0x0000;            //·¢¸øÐ­µ÷Æ÷
   \   0000A2   90....       MOV     DPTR,#SampleApp_P2P_DstAddr
   \   0000A5   E4           CLR     A
   \   0000A6   F0           MOVX    @DPTR,A
   \   0000A7   A3           INC     DPTR
   \   0000A8   F0           MOVX    @DPTR,A
    227          
    228            // Fill out the endpoint description.
    229            SampleApp_epDesc.endPoint = SAMPLEAPP_ENDPOINT;
   \   0000A9   90....       MOV     DPTR,#SampleApp_epDesc
   \   0000AC   7414         MOV     A,#0x14
   \   0000AE   F0           MOVX    @DPTR,A
    230            SampleApp_epDesc.task_id = &SampleApp_TaskID;
   \   0000AF   A3           INC     DPTR
   \   0000B0   74..         MOV     A,#SampleApp_TaskID & 0xff
   \   0000B2   F0           MOVX    @DPTR,A
   \   0000B3   A3           INC     DPTR
   \   0000B4   74..         MOV     A,#(SampleApp_TaskID >> 8) & 0xff
   \   0000B6   F0           MOVX    @DPTR,A
    231            SampleApp_epDesc.simpleDesc
    232                      = (SimpleDescriptionFormat_t *)&SampleApp_SimpleDesc;
   \   0000B7   A3           INC     DPTR
   \   0000B8   74..         MOV     A,#SampleApp_SimpleDesc & 0xff
   \   0000BA   F0           MOVX    @DPTR,A
   \   0000BB   A3           INC     DPTR
   \   0000BC   74..         MOV     A,#(SampleApp_SimpleDesc >> 8) & 0xff
   \   0000BE   F0           MOVX    @DPTR,A
    233            SampleApp_epDesc.latencyReq = noLatencyReqs;
   \   0000BF   A3           INC     DPTR
   \   0000C0   E4           CLR     A
   \   0000C1   F0           MOVX    @DPTR,A
    234          
    235            // Register the endpoint description with the AF
    236            afRegister( &SampleApp_epDesc );
   \   0000C2                ; Setup parameters for call to function afRegister
   \   0000C2   7A..         MOV     R2,#SampleApp_epDesc & 0xff
   \   0000C4   7B..         MOV     R3,#(SampleApp_epDesc >> 8) & 0xff
   \   0000C6   12....       LCALL   ??afRegister?relay
    237          
    238            // Register for all key events - This app will handle all key events
    239            RegisterForKeys( SampleApp_TaskID );
   \   0000C9                ; Setup parameters for call to function RegisterForKeys
   \   0000C9   90....       MOV     DPTR,#SampleApp_TaskID
   \   0000CC   E0           MOVX    A,@DPTR
   \   0000CD   F9           MOV     R1,A
   \   0000CE   12....       LCALL   ??RegisterForKeys?relay
    240          
    241            // By default, all devices start out in Group 1
    242            SampleApp_Group.ID = 0x0001;
   \   0000D1   90....       MOV     DPTR,#SampleApp_Group
   \   0000D4   7401         MOV     A,#0x1
   \   0000D6   F0           MOVX    @DPTR,A
   \   0000D7   A3           INC     DPTR
   \   0000D8   E4           CLR     A
   \   0000D9   F0           MOVX    @DPTR,A
    243            osal_memcpy( SampleApp_Group.name, "Group 1", 7 );
   \   0000DA                ; Setup parameters for call to function osal_memcpy
   \   0000DA   75....       MOV     ?V0 + 0,#`?<Constant "Group 1">` & 0xff
   \   0000DD   75....       MOV     ?V0 + 1,#(`?<Constant "Group 1">` >> 8) & 0xff
   \   0000E0   F5..         MOV     ?V0 + 2,A
   \   0000E2   78..         MOV     R0,#?V0 + 0
   \   0000E4   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   0000E7   7C07         MOV     R4,#0x7
   \   0000E9   7D00         MOV     R5,#0x0
   \   0000EB   7A..         MOV     R2,#(SampleApp_Group + 2) & 0xff
   \   0000ED   7B..         MOV     R3,#((SampleApp_Group + 2) >> 8) & 0xff
   \   0000EF   12....       LCALL   ??Subroutine17_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_42:
   \   0000F2   12....       LCALL   ?DEALLOC_XSTACK8
    244            aps_AddGroup( SAMPLEAPP_ENDPOINT, &SampleApp_Group );
   \   0000F5                ; Setup parameters for call to function aps_AddGroup
   \   0000F5   7A..         MOV     R2,#SampleApp_Group & 0xff
   \   0000F7   7B..         MOV     R3,#(SampleApp_Group >> 8) & 0xff
   \   0000F9   7914         MOV     R1,#0x14
   \   0000FB   12....       LCALL   ??aps_AddGroup?relay
    245          
    246          #if defined ( LCD_SUPPORTED )
    247            HalLcdWriteString( "SampleApp", HAL_LCD_LINE_1 );
   \   0000FE                ; Setup parameters for call to function HalLcdWriteString
   \   0000FE   7901         MOV     R1,#0x1
   \   000100   7A..         MOV     R2,#`?<Constant "SampleApp">` & 0xff
   \   000102   7B..         MOV     R3,#(`?<Constant "SampleApp">` >> 8) & 0xff
   \   000104   12....       LCALL   ??HalLcdWriteString?relay
    248          #endif
    249          }
   \   000107   740A         MOV     A,#0xa
   \   000109                REQUIRE ?Subroutine0
   \   000109                REQUIRE P2SEL
   \   000109                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   12....       LCALL   ?DEALLOC_XSTACK8
   \   000003   7F03         MOV     R7,#0x3
   \   000005   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   7AF4         MOV     R2,#-0xc
   \   000002   7B01         MOV     R3,#0x1
   \   000004   12....       LCALL   ??Delay_ms?relay
   \   000007                ; Setup parameters for call to function Delay_ms
   \   000007                ; Setup parameters for call to function Delay_ms
   \   000007   7AE8         MOV     R2,#-0x18
   \   000009   7B03         MOV     R3,#0x3
   \   00000B   12....       LCALL   ??Delay_ms?relay
   \   00000E                ; Setup parameters for call to function HalUARTWrite
   \   00000E                ; Setup parameters for call to function HalUARTWrite
   \   00000E   7C04         MOV     R4,#0x4
   \   000010   7D00         MOV     R5,#0x0
   \   000012   7A..         MOV     R2,#`?<Constant "AT\\r\\n">` & 0xff
   \   000014   7B..         MOV     R3,#(`?<Constant "AT\\r\\n">` >> 8) & 0xff
   \   000016   7901         MOV     R1,#0x1
   \   000018   12....       LCALL   ??HalUARTWrite?relay
   \   00001B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine17_0:
   \   000000   12....       LCALL   ??osal_memcpy?relay
   \   000003   7403         MOV     A,#0x3
   \   000005   22           RET
    250          
    251          
    252          /*********************************************************************
    253           * @fn      SampleApp_ProcessEvent
    254           *
    255           * @brief   Generic Application Task event processor.  This function
    256           *          is called to process all events for the task.  Events
    257           *          include timers, messages and any other user defined events.
    258           *
    259           * @param   task_id  - The OSAL assigned task ID.
    260           * @param   events - events to process.  This is a bit map and can
    261           *                   contain more than one event.
    262           *
    263           * @return  none
    264           */
    265          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    266          uint16 SampleApp_ProcessEvent( uint8 task_id, uint16 events )
   \                     SampleApp_ProcessEvent:
    267          {
   \   000000   74EA         MOV     A,#-0x16
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 22
   \   000005                ; Auto size: 256
   \   000005   758200       MOV     DPL,#0x0
   \   000008   7583FF       MOV     DPH,#-0x1
   \   00000B   12....       LCALL   ?ADD_XSTACK_DISP0_16
   \   00000E   EA           MOV     A,R2
   \   00000F   FE           MOV     R6,A
   \   000010   EB           MOV     A,R3
   \   000011   FF           MOV     R7,A
    268            char ATSTRCSTX[256];  //mqttÁ¬½Ó»º´æ
    269            afIncomingMSGPacket_t *MSGpkt;
    270            (void)task_id;  // Intentionally unreferenced parameter
    271            kmg++;
   \   000012   90....       MOV     DPTR,#kmg
   \   000015   E0           MOVX    A,@DPTR
   \   000016   2401         ADD     A,#0x1
   \   000018   F0           MOVX    @DPTR,A
   \   000019   A3           INC     DPTR
   \   00001A   E0           MOVX    A,@DPTR
   \   00001B   3400         ADDC    A,#0x0
   \   00001D   F0           MOVX    @DPTR,A
    272            if(kmg>3000)
   \   00001E   90....       MOV     DPTR,#kmg
   \   000021   C3           CLR     C
   \   000022   E0           MOVX    A,@DPTR
   \   000023   94B9         SUBB    A,#-0x47
   \   000025   A3           INC     DPTR
   \   000026   E0           MOVX    A,@DPTR
   \   000027   940B         SUBB    A,#0xb
   \   000029   A2D2         MOV     C,0xD0 /* PSW */.2
   \   00002B   65D0         XRL     A,PSW
   \   00002D   33           RLC     A
   \   00002E   4011         JC      ??SampleApp_ProcessEvent_0
    273            {
    274               kmg=0;
   \   000030   90....       MOV     DPTR,#kmg
   \   000033   E4           CLR     A
   \   000034   F0           MOVX    @DPTR,A
   \   000035   A3           INC     DPTR
   \   000036   F0           MOVX    @DPTR,A
    275               SystemReset();
   \   000037   C2AF         CLR     0xa8.7
   \   000039   75C9AB       MOV     0xc9,#-0x55
   \   00003C   75C95B       MOV     0xc9,#0x5b
   \                     ??SampleApp_ProcessEvent_1:
   \   00003F   80FE         SJMP    ??SampleApp_ProcessEvent_1
    276            }
    277            if ( events & SYS_EVENT_MSG )
   \                     ??SampleApp_ProcessEvent_0:
   \   000041   EF           MOV     A,R7
   \   000042   5480         ANL     A,#0x80
   \   000044   7003         JNZ     $+5
   \   000046   02....       LJMP    ??SampleApp_ProcessEvent_2 & 0xFFFF
    278            {
    279              MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   000049                ; Setup parameters for call to function osal_msg_receive
   \   000049   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_4:
   \   00004C   75....       MOV     ?V0 + 10,#`?<Constant "9dBJ0I0C3F">` & 0xff
   \   00004F   75....       MOV     ?V0 + 11,#(`?<Constant "9dBJ0I0C3F">` >> 8) & 0xff
   \   000052   75....       MOV     ?V0 + 6,#`?<Constant "MQTTCONNECTED">` & 0xff
   \   000055   75....       MOV     ?V0 + 7,#(`?<Constant "MQTTCONNECTED">` >> 8) & 0xff
   \   000058   75....       MOV     ?V0 + 4,#`?<Constant "OK">` & 0xff
   \   00005B   75....       MOV     ?V0 + 5,#(`?<Constant "OK">` >> 8) & 0xff
   \   00005E   75....       MOV     ?V0 + 8,#`?<Constant "yinxingru">` & 0xff
   \   000061   75....       MOV     ?V0 + 9,#(`?<Constant "yinxingru">` >> 8) & 0xff
   \   000064   8030         SJMP    ??CrossCallReturnLabel_5
    280              while ( MSGpkt )
    281              {
    282                switch ( MSGpkt->hdr.event )
    283                {
    284                  // Received when a key is pressed
    285                  case KEY_CHANGE:
    286                    SampleApp_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    287                    LCD_P8x16Str(0, 0, "2022442778.com ");
    288                    break;
    289          
    290                  // Received when a messages is received (OTA) for this endpoint
    291                  case AF_INCOMING_MSG_CMD:
    292                    SampleApp_MessageMSGCB( MSGpkt );
    293                    break;
    294                case CMD_SERIAL_MSG:
    295                  mtOSALSerialData_t *p = (mtOSALSerialData_t *)MSGpkt;
                         ^
Warning[Pe1072]: a declaration cannot have a label

        switch ( MSGpkt->hdr.event )
        ^
"D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\Source\SampleApp.c",282  Warning[Pe546]: 
          transfer of control bypasses initialization of:
            variable "p" (declared at line 295 of "D:\Program
                      field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\¶àÖÕ¶ËÊý¾ÝZigb
                      ee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-CC2530-2.3.0-1.4.0\Projects
                      \zstack\Samples\SampleApp\Source\SampleApp.c")
    296                  HalUARTWrite(HAL_UART_PORT_0, &p->msg[1], p->msg[0]); 
    297                  //°Ñ½ÓÊÕµ½µÄÊý¾Ý´®¿Ú1´òÓ¡³öÀ´ Ç°ÃæÊÇ×Ö·û´® ºóÃæÊÇ³¤¶È
    298                  if(flat==6) //ÊÕµ½WIFIºÍÆ½Ì¨½»»¥Êý¾Ý
    299                  LCD_P8x16Str(0, 4, "Get UART1 Data .");
    300                  LCD_P8x16Str(0, 6, "                ");
    301                  LCD_P8x16Str(0, 6, LYSSID);
    302                  if(flat==1) //·¢ATÃüÁî Ä£Ê½ÔOÖÃSTA
    303                  {
    304                     if(strstr((char const *)(&p->msg[1]),"OK"))
    305                     {
    306                        HalUARTWrite(1,CWMODE_C,strlen(CWMODE_C));
    307                        HalUARTWrite(0, "ZIGBEE-WIFI OK\r\n", 16);
    308                        flat=2;
    309                        Delay_ms(500);
    310                     }
    311                     else if(strstr((char const *)(&p->msg[1]),"MQTTCONNECTED"))  //Ê§°Ü¾ÍÖØÆô
    312                     {
    313                 
    314                        flat=5;    
    315                     }
    316                      else if(strstr((char const *)(&p->msg[1]),"ERROR"))  //Ê§°Ü¾ÍÖØÆô
    317                     {
    318                        ReSetWifi();//ÖØÆôWiFi
    319                        Delay_ms(1000);
    320                        HalUARTWrite(1,"AT\r\n",4);
    321                        flat=1;    
    322                     }
    323                  }
    324                   else if(flat==2) //Á´½ÓWiFiÂ·ÓÉÆ÷
    325                  {
    326                     if(strstr((char const *)(&p->msg[1]),"OK"))
    327                     {
    328                        memset(ATSTRCSTX,0,256);
    329                        sprintf(ATSTRCSTX,"AT+CWJAP=\"%s\",\"%s\"\r\n",LYSSID,LYPASSWD);
    330                        HalUARTWrite(1,(unsigned char*)ATSTRCSTX, strlen(ATSTRCSTX));//Á¬½Ó±¾µØWiFi
    331                        flat=3;
    332                        Delay_ms(1000);Delay_ms(1000);
    333                     }
    334                  }
    335                  
    336                   else if(flat==3) //ÔOÖÃé°lATÃüÁîÄ£Ê½´«ÊäÄ£Ê½
    337                  {
    338                     if(strstr((char const *)(&p->msg[1]),"OK"))
    339                     { 
    340                       //ÉèÖÃÆÕÍ¨´«ÊäÄ£Ê½ Ò²¾ÍÊÇ°lATÃüÁîÄ£Ê½      
    341                       HalUARTWrite(1,CIPMODE_C, strlen(CIPMODE_C));
    342                      
    343                       flat=4;
    344                       Delay_ms(500);
    345                     }
    346                     else 
    347                     {
    348                        ReSetWifi();//ÖØÆôWiFi
    349                        Delay_ms(1000);
    350                        HalUARTWrite(1,"AT\r\n",4);
    351                        flat=1;    
    352                     }
    353                  }
    354                  else if(flat==4)  
    355                  {
    356                     if(strstr((char const *)(&p->msg[1]),"OK"))
    357                     {
    358                       //·¢ËÍATÖ¸Áî ÉèÖÃmqttµÇÂ¼ÐÅÏ¢ ÅäÖÃÃØè ºÍÔOäidºÍ®aÆ·id Ë¼Í¨ÐÅ
    359                       memset(ATSTRCSTX,0,256);
    360                       sprintf(ATSTRCSTX,"AT+MQTTUSERCFG=0,1,\"%s\",\"%s\",\"%s\",0,0,\"\"\r\n",devid,proid,token);
    361                       HalUARTWrite(1,(unsigned char*)ATSTRCSTX, strlen(ATSTRCSTX));
    362                       Delay_ms(1000);
    363                       //·¢ËÍATÖ¸Áî µÇÂ¼mqtt
    364                       HalUARTWrite(1,MQTTCONN, strlen(MQTTCONN));//Ë¼ßB½Óµ½ONENETß@ÊÇONENETµÄÓòÃû
    365                       flat=5;
    366                       Delay_ms(500);
    367                     }
    368                  }
    369                   else if(flat==5) 
    370                  {
    371                     if(strstr((char const *)(&p->msg[1]),"MQTTCONNECTED"))
    372                     {   
    373                       //·¢ËÍATÖ¸Áî£¬¶©ÔÄmqttÖ÷Ìâ
    374                       memset(ATSTRCSTX,0,256);
    375                       sprintf(ATSTRCSTX,"AT+MQTTSUB=0,\"$sys/%s/%s/thing/property/post/reply\",1\r\n",proid,devid);
    376                       HalUARTWrite(1,(unsigned char*)ATSTRCSTX, strlen(ATSTRCSTX));
    377                       flat=6;
    378                       Delay_ms(500);
    379                     }
    380                  }
    381          
    382                   break;
    383                  // Received whenever the device changes state in the network
    384                  case ZDO_STATE_CHANGE:  //Ð­µ÷Æ÷²»Ö´ÐÐ¶¨Ê±·¢ËÍÃüÁî
    385                    SampleApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
   \                     ??SampleApp_ProcessEvent_3:
   \   000066   A3           INC     DPTR
   \   000067   E0           MOVX    A,@DPTR
   \   000068   90....       MOV     DPTR,#SampleApp_NwkState
   \   00006B   F0           MOVX    @DPTR,A
    386                    if ( //(SampleApp_NwkState == DEV_ZB_COORD) ||//Ð­µ÷Æ÷²»Ö´ÐÐ¶¨Ê±·¢ËÍÃüÁî
    387                           (SampleApp_NwkState == DEV_ROUTER)
    388                        || (SampleApp_NwkState == DEV_END_DEVICE) )
   \   00006C   6407         XRL     A,#0x7
   \   00006E   6005         JZ      ??SampleApp_ProcessEvent_4
   \   000070   E0           MOVX    A,@DPTR
   \   000071   6406         XRL     A,#0x6
   \   000073   7010         JNZ     ??SampleApp_ProcessEvent_5
    389                    {
    390                      // Start sending the periodic message in a regular interval.
    391                      osal_start_timerEx( SampleApp_TaskID,
    392                                        SAMPLEAPP_SEND_PERIODIC_MSG_EVT,
    393                                        SAMPLEAPP_SEND_PERIODIC_MSG_TIMEOUT );
   \                     ??SampleApp_ProcessEvent_4:
   \   000075                ; Setup parameters for call to function osal_start_timerEx
   \   000075   7CB8         MOV     R4,#-0x48
   \   000077   7D0B         MOV     R5,#0xb
   \   000079   7A01         MOV     R2,#0x1
   \   00007B   7B00         MOV     R3,#0x0
   \   00007D   90....       MOV     DPTR,#SampleApp_TaskID
   \   000080   E0           MOVX    A,@DPTR
   \   000081   F9           MOV     R1,A
   \   000082   12....       LCALL   ??osal_start_timerEx?relay
    394                    }
    395                    else
    396                    {
    397                      // Device is no longer in the network
    398                    }
    399                    break;
    400          
    401                  default:
    402                    break;
    403                }
    404                Delay_ms(10);
   \                     ??SampleApp_ProcessEvent_5:
   \   000085                ; Setup parameters for call to function Delay_ms
   \   000085   7A0A         MOV     R2,#0xa
   \   000087   7B00         MOV     R3,#0x0
   \   000089   12....       LCALL   ??Delay_ms?relay
    405                // Release the memory
    406                osal_msg_deallocate( (uint8 *)MSGpkt );
   \   00008C                ; Setup parameters for call to function osal_msg_deallocate
   \   00008C   AA..         MOV     R2,?V0 + 2
   \   00008E   AB..         MOV     R3,?V0 + 3
   \   000090   12....       LCALL   ??osal_msg_deallocate?relay
    407          
    408                // Next - if one is available
    409                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   000093                ; Setup parameters for call to function osal_msg_receive
   \   000093   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_5:
   \   000096   E5..         MOV     A,?V0 + 2
   \   000098   45..         ORL     A,?V0 + 3
   \   00009A   7003         JNZ     $+5
   \   00009C   02....       LJMP    ??SampleApp_ProcessEvent_6 & 0xFFFF
   \   00009F   E5..         MOV     A,?V0 + 2
   \   0000A1   2402         ADD     A,#0x2
   \   0000A3   F5..         MOV     ?V0 + 0,A
   \   0000A5   E5..         MOV     A,?V0 + 3
   \   0000A7   3400         ADDC    A,#0x0
   \   0000A9   F5..         MOV     ?V0 + 1,A
   \   0000AB   85..82       MOV     DPL,?V0 + 2
   \   0000AE   85..83       MOV     DPH,?V0 + 3
   \   0000B1   E0           MOVX    A,@DPTR
   \   0000B2   14           DEC     A
   \   0000B3   6034         JZ      ??SampleApp_ProcessEvent_7
   \   0000B5   24E7         ADD     A,#-0x19
   \   0000B7   6027         JZ      ??SampleApp_ProcessEvent_8
   \   0000B9   245A         ADD     A,#0x5a
   \   0000BB   6006         JZ      ??SampleApp_ProcessEvent_9
   \   0000BD   24EF         ADD     A,#-0x11
   \   0000BF   60A5         JZ      ??SampleApp_ProcessEvent_3
   \   0000C1   80C2         SJMP    ??SampleApp_ProcessEvent_5
   \                     ??SampleApp_ProcessEvent_9:
   \   0000C3                ; Setup parameters for call to function SampleApp_HandleKeys
   \   0000C3   A3           INC     DPTR
   \   0000C4   A3           INC     DPTR
   \   0000C5   A3           INC     DPTR
   \   0000C6   E0           MOVX    A,@DPTR
   \   0000C7   FA           MOV     R2,A
   \   0000C8   85..82       MOV     DPL,?V0 + 0
   \   0000CB   85..83       MOV     DPH,?V0 + 1
   \   0000CE   E0           MOVX    A,@DPTR
   \   0000CF   F9           MOV     R1,A
   \   0000D0   12....       LCALL   ??SampleApp_HandleKeys?relay
   \   0000D3                ; Setup parameters for call to function LCD_P8x16Str
   \   0000D3   7C..         MOV     R4,#`?<Constant "2022442778.com ">` & 0xff
   \   0000D5   7D..         MOV     R5,#(`?<Constant "2022442778.com ">` >> 8) & 0xff
   \   0000D7   7A00         MOV     R2,#0x0
   \   0000D9   7900         MOV     R1,#0x0
   \   0000DB   12....       LCALL   ??LCD_P8x16Str?relay
   \   0000DE   80A5         SJMP    ??SampleApp_ProcessEvent_5
   \                     ??SampleApp_ProcessEvent_8:
   \   0000E0                ; Setup parameters for call to function SampleApp_MessageMSGCB
   \   0000E0   AA..         MOV     R2,?V0 + 2
   \   0000E2   AB..         MOV     R3,?V0 + 3
   \   0000E4   12....       LCALL   ??SampleApp_MessageMSGCB?relay
   \   0000E7   809C         SJMP    ??SampleApp_ProcessEvent_5
   \                     ??SampleApp_ProcessEvent_7:
   \   0000E9   85..82       MOV     DPL,?V0 + 0
   \   0000EC   85..83       MOV     DPH,?V0 + 1
   \   0000EF   E0           MOVX    A,@DPTR
   \   0000F0   F8           MOV     R0,A
   \   0000F1   A3           INC     DPTR
   \   0000F2   E0           MOVX    A,@DPTR
   \   0000F3   F9           MOV     R1,A
   \   0000F4   8882         MOV     DPL,R0
   \   0000F6   8983         MOV     DPH,R1
   \   0000F8                ; Setup parameters for call to function HalUARTWrite
   \   0000F8   E0           MOVX    A,@DPTR
   \   0000F9   FC           MOV     R4,A
   \   0000FA   7D00         MOV     R5,#0x0
   \   0000FC   A3           INC     DPTR
   \   0000FD   AA82         MOV     R2,DPL
   \   0000FF   AB83         MOV     R3,DPH
   \   000101   7900         MOV     R1,#0x0
   \   000103   12....       LCALL   ??Subroutine16_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_35:
   \   000106   E0           MOVX    A,@DPTR
   \   000107   6406         XRL     A,#0x6
   \   000109   700B         JNZ     ??SampleApp_ProcessEvent_10
   \   00010B                ; Setup parameters for call to function LCD_P8x16Str
   \   00010B   7C..         MOV     R4,#`?<Constant "Get UART1 Data .">` & 0xff
   \   00010D   7D..         MOV     R5,#(`?<Constant "Get UART1 Data .">` >> 8) & 0xff
   \   00010F   7A04         MOV     R2,#0x4
   \   000111   7900         MOV     R1,#0x0
   \   000113   12....       LCALL   ??LCD_P8x16Str?relay
   \                     ??SampleApp_ProcessEvent_10:
   \   000116                ; Setup parameters for call to function LCD_P8x16Str
   \   000116   7C..         MOV     R4,#`?<Constant "                ">` & 0xff
   \   000118   7D..         MOV     R5,#(`?<Constant "                ">` >> 8) & 0xff
   \   00011A   7A06         MOV     R2,#0x6
   \   00011C   7900         MOV     R1,#0x0
   \   00011E   12....       LCALL   ??LCD_P8x16Str?relay
   \   000121                ; Setup parameters for call to function LCD_P8x16Str
   \   000121   AC..         MOV     R4,?V0 + 8
   \   000123   AD..         MOV     R5,?V0 + 9
   \   000125   7A06         MOV     R2,#0x6
   \   000127   7900         MOV     R1,#0x0
   \   000129   12....       LCALL   ??LCD_P8x16Str?relay
   \   00012C   90....       MOV     DPTR,#flat
   \   00012F   E0           MOVX    A,@DPTR
   \   000130   6401         XRL     A,#0x1
   \   000132   7058         JNZ     ??SampleApp_ProcessEvent_11
   \   000134                ; Setup parameters for call to function strstr
   \   000134   AC..         MOV     R4,?V0 + 4
   \   000136   AD..         MOV     R5,?V0 + 5
   \   000138   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_2:
   \   00013B   6027         JZ      ??SampleApp_ProcessEvent_12
   \   00013D                ; Setup parameters for call to function HalUARTWrite
   \   00013D   7C0D         MOV     R4,#0xd
   \   00013F   7D00         MOV     R5,#0x0
   \   000141   7A..         MOV     R2,#`?<Constant "AT+CWMODE=1\\r\\n">` & 0xff
   \   000143   7B..         MOV     R3,#(`?<Constant "AT+CWMODE=1\\r\\n">` >> 8) & 0xff
   \   000145   7901         MOV     R1,#0x1
   \   000147   12....       LCALL   ??HalUARTWrite?relay
   \   00014A                ; Setup parameters for call to function HalUARTWrite
   \   00014A   7C10         MOV     R4,#0x10
   \   00014C   7D00         MOV     R5,#0x0
   \   00014E   7A..         MOV     R2,#`?<Constant "ZIGBEE-WIFI OK\\r\\n">` & 0xff
   \   000150   7B..         MOV     R3,#(`?<Constant "ZIGBEE-WIFI OK\\r\\n">` >> 8) & 0xff
   \   000152   7900         MOV     R1,#0x0
   \   000154   12....       LCALL   ??Subroutine16_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_36:
   \   000157   7402         MOV     A,#0x2
   \                     ??SampleApp_ProcessEvent_13:
   \   000159   F0           MOVX    @DPTR,A
   \   00015A                ; Setup parameters for call to function Delay_ms
   \   00015A   7AF4         MOV     R2,#-0xc
   \   00015C   7B01         MOV     R3,#0x1
   \                     ??SampleApp_ProcessEvent_14:
   \   00015E   12....       LCALL   ??Delay_ms?relay
   \   000161   02....       LJMP    ??SampleApp_ProcessEvent_5 & 0xFFFF
   \                     ??SampleApp_ProcessEvent_12:
   \   000164                ; Setup parameters for call to function strstr
   \   000164   AC..         MOV     R4,?V0 + 6
   \   000166   AD..         MOV     R5,?V0 + 7
   \   000168   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_3:
   \   00016B   6009         JZ      ??SampleApp_ProcessEvent_15
   \   00016D   90....       MOV     DPTR,#flat
   \   000170   7405         MOV     A,#0x5
   \                     ??SampleApp_ProcessEvent_16:
   \   000172   F0           MOVX    @DPTR,A
   \   000173   02....       LJMP    ??SampleApp_ProcessEvent_5 & 0xFFFF
   \                     ??SampleApp_ProcessEvent_15:
   \   000176                ; Setup parameters for call to function strstr
   \   000176   7C..         MOV     R4,#`?<Constant "ERROR">` & 0xff
   \   000178   7D..         MOV     R5,#(`?<Constant "ERROR">` >> 8) & 0xff
   \   00017A   12....       LCALL   ??Subroutine14_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_27:
   \   00017D   7003         JNZ     $+5
   \   00017F   02....       LJMP    ??SampleApp_ProcessEvent_5 & 0xFFFF
   \                     ??SampleApp_ProcessEvent_17:
   \   000182                ; Setup parameters for call to function Delay_ms
   \   000182   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_1:
   \   000185   90....       MOV     DPTR,#flat
   \   000188   7401         MOV     A,#0x1
   \   00018A   80E6         SJMP    ??SampleApp_ProcessEvent_16
   \                     ??SampleApp_ProcessEvent_11:
   \   00018C   E0           MOVX    A,@DPTR
   \   00018D   6402         XRL     A,#0x2
   \   00018F   705A         JNZ     ??SampleApp_ProcessEvent_18
   \   000191                ; Setup parameters for call to function strstr
   \   000191   12....       LCALL   ?Subroutine4 & 0xFFFF
   \                     ??CrossCallReturnLabel_24:
   \   000194   7003         JNZ     $+5
   \   000196   02....       LJMP    ??SampleApp_ProcessEvent_5 & 0xFFFF
   \   000199                ; Setup parameters for call to function memset
   \   000199   75..00       MOV     ?V0 + 0,#0x0
   \   00019C   75..01       MOV     ?V0 + 1,#0x1
   \   00019F   78..         MOV     R0,#?V0 + 0
   \   0001A1   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0001A4   7C00         MOV     R4,#0x0
   \   0001A6   7D00         MOV     R5,#0x0
   \   0001A8   7402         MOV     A,#0x2
   \   0001AA   12....       LCALL   ?XSTACK_DISP0_8
   \   0001AD   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_6:
   \   0001B0   12....       LCALL   ?DEALLOC_XSTACK8
   \   0001B3                ; Setup parameters for call to function sprintf
   \   0001B3   75....       MOV     ?V0 + 0,#`?<Constant "woshiyxr">` & 0xff
   \   0001B6   75....       MOV     ?V0 + 1,#(`?<Constant "woshiyxr">` >> 8) & 0xff
   \   0001B9   78..         MOV     R0,#?V0 + 0
   \   0001BB   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0001BE   78..         MOV     R0,#?V0 + 8
   \   0001C0   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0001C3   7C..         MOV     R4,#`?<Constant "AT+CWJAP=\\"%s\\",\\"%s\\"\\r\\n">` & 0xff
   \   0001C5   7D..         MOV     R5,#(`?<Constant "AT+CWJAP=\\"%s\\",\\"%s\\"\\r\\n">` >> 8) & 0xff
   \   0001C7   7404         MOV     A,#0x4
   \   0001C9   12....       LCALL   ?XSTACK_DISP0_8
   \   0001CC   AA82         MOV     R2,DPL
   \   0001CE   AB83         MOV     R3,DPH
   \   0001D0   12....       LCALL   ??sprintf?relay
   \   0001D3   7404         MOV     A,#0x4
   \   0001D5   12....       LCALL   ?DEALLOC_XSTACK8
   \   0001D8                ; Setup parameters for call to function HalUARTWrite
   \   0001D8                ; Setup parameters for call to function strlen
   \   0001D8   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_31:
   \   0001DB   7403         MOV     A,#0x3
   \   0001DD   F0           MOVX    @DPTR,A
   \   0001DE                ; Setup parameters for call to function Delay_ms
   \   0001DE   7AE8         MOV     R2,#-0x18
   \   0001E0   FB           MOV     R3,A
   \   0001E1   12....       LCALL   ??Delay_ms?relay
   \   0001E4                ; Setup parameters for call to function Delay_ms
   \   0001E4   7AE8         MOV     R2,#-0x18
   \   0001E6   7B03         MOV     R3,#0x3
   \   0001E8   02....       LJMP    ??SampleApp_ProcessEvent_14 & 0xFFFF
   \                     ??SampleApp_ProcessEvent_18:
   \   0001EB   E0           MOVX    A,@DPTR
   \   0001EC   6403         XRL     A,#0x3
   \   0001EE   7015         JNZ     ??SampleApp_ProcessEvent_19
   \   0001F0                ; Setup parameters for call to function strstr
   \   0001F0   12....       LCALL   ?Subroutine4 & 0xFFFF
   \                     ??CrossCallReturnLabel_25:
   \   0001F3   608D         JZ      ??SampleApp_ProcessEvent_17
   \   0001F5                ; Setup parameters for call to function HalUARTWrite
   \   0001F5   7C0E         MOV     R4,#0xe
   \   0001F7   7D00         MOV     R5,#0x0
   \   0001F9   7A..         MOV     R2,#`?<Constant "AT+CIPMODE=0\\r\\n">` & 0xff
   \   0001FB   7B..         MOV     R3,#(`?<Constant "AT+CIPMODE=0\\r\\n">` >> 8) & 0xff
   \   0001FD   12....       LCALL   ??Subroutine15_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_33:
   \   000200   7404         MOV     A,#0x4
   \   000202   02....       LJMP    ??SampleApp_ProcessEvent_13 & 0xFFFF
   \                     ??SampleApp_ProcessEvent_19:
   \   000205   E0           MOVX    A,@DPTR
   \   000206   6404         XRL     A,#0x4
   \   000208   706B         JNZ     ??SampleApp_ProcessEvent_20
   \   00020A                ; Setup parameters for call to function strstr
   \   00020A   12....       LCALL   ?Subroutine4 & 0xFFFF
   \                     ??CrossCallReturnLabel_26:
   \   00020D   7003         JNZ     $+5
   \   00020F   02....       LJMP    ??SampleApp_ProcessEvent_5 & 0xFFFF
   \   000212                ; Setup parameters for call to function memset
   \   000212   75..00       MOV     ?V0 + 0,#0x0
   \   000215   75..01       MOV     ?V0 + 1,#0x1
   \   000218   78..         MOV     R0,#?V0 + 0
   \   00021A   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00021D   7C00         MOV     R4,#0x0
   \   00021F   7D00         MOV     R5,#0x0
   \   000221   7402         MOV     A,#0x2
   \   000223   12....       LCALL   ?XSTACK_DISP0_8
   \   000226   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_7:
   \   000229   12....       LCALL   ?DEALLOC_XSTACK8
   \   00022C                ; Setup parameters for call to function sprintf
   \   00022C   75....       MOV     ?V0 + 0,#`?<Constant "version=2018-10-31&re...">` & 0xff
   \   00022F   75....       MOV     ?V0 + 1,#(`?<Constant "version=2018-10-31&re...">` >> 8) & 0xff
   \   000232   78..         MOV     R0,#?V0 + 0
   \   000234   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000237   78..         MOV     R0,#?V0 + 10
   \   000239   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00023C   78..         MOV     R0,#?V0 + 8
   \   00023E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000241   7C..         MOV     R4,#`?<Constant "AT+MQTTUSERCFG=0,1,\\"%...">` & 0xff
   \   000243   7D..         MOV     R5,#(`?<Constant "AT+MQTTUSERCFG=0,1,\\"%...">` >> 8) & 0xff
   \   000245   7406         MOV     A,#0x6
   \   000247   12....       LCALL   ?XSTACK_DISP0_8
   \   00024A   AA82         MOV     R2,DPL
   \   00024C   AB83         MOV     R3,DPH
   \   00024E   12....       LCALL   ??sprintf?relay
   \   000251   7406         MOV     A,#0x6
   \   000253   12....       LCALL   ?DEALLOC_XSTACK8
   \   000256                ; Setup parameters for call to function HalUARTWrite
   \   000256                ; Setup parameters for call to function strlen
   \   000256   12....       LCALL   ?Subroutine12 & 0xFFFF
   \                     ??CrossCallReturnLabel_22:
   \   000259   7901         MOV     R1,#0x1
   \   00025B   12....       LCALL   ??HalUARTWrite?relay
   \   00025E                ; Setup parameters for call to function Delay_ms
   \   00025E   7AE8         MOV     R2,#-0x18
   \   000260   7B03         MOV     R3,#0x3
   \   000262   12....       LCALL   ??Delay_ms?relay
   \   000265                ; Setup parameters for call to function HalUARTWrite
   \   000265   7C2B         MOV     R4,#0x2b
   \   000267   7D00         MOV     R5,#0x0
   \   000269   7A..         MOV     R2,#`?<Constant "AT+MQTTCONN=0,\\"mqtts....">` & 0xff
   \   00026B   7B..         MOV     R3,#(`?<Constant "AT+MQTTCONN=0,\\"mqtts....">` >> 8) & 0xff
   \   00026D   12....       LCALL   ??Subroutine15_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_34:
   \   000270   7405         MOV     A,#0x5
   \   000272   02....       LJMP    ??SampleApp_ProcessEvent_13 & 0xFFFF
   \                     ??SampleApp_ProcessEvent_20:
   \   000275   E0           MOVX    A,@DPTR
   \   000276   6405         XRL     A,#0x5
   \   000278   6003         JZ      $+5
   \   00027A   02....       LJMP    ??SampleApp_ProcessEvent_5 & 0xFFFF
   \   00027D                ; Setup parameters for call to function strstr
   \   00027D   AC..         MOV     R4,?V0 + 6
   \   00027F   AD..         MOV     R5,?V0 + 7
   \   000281   12....       LCALL   ??Subroutine14_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_28:
   \   000284   7003         JNZ     $+5
   \   000286   02....       LJMP    ??SampleApp_ProcessEvent_5 & 0xFFFF
   \   000289                ; Setup parameters for call to function memset
   \   000289   75..00       MOV     ?V0 + 0,#0x0
   \   00028C   75..01       MOV     ?V0 + 1,#0x1
   \   00028F   78..         MOV     R0,#?V0 + 0
   \   000291   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000294   7C00         MOV     R4,#0x0
   \   000296   7D00         MOV     R5,#0x0
   \   000298   7402         MOV     A,#0x2
   \   00029A   12....       LCALL   ?XSTACK_DISP0_8
   \   00029D   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_8:
   \   0002A0   12....       LCALL   ?DEALLOC_XSTACK8
   \   0002A3                ; Setup parameters for call to function sprintf
   \   0002A3   78..         MOV     R0,#?V0 + 8
   \   0002A5   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0002A8   78..         MOV     R0,#?V0 + 10
   \   0002AA   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0002AD   7C..         MOV     R4,#`?<Constant "AT+MQTTSUB=0,\\"$sys/%s...">` & 0xff
   \   0002AF   7D..         MOV     R5,#(`?<Constant "AT+MQTTSUB=0,\\"$sys/%s...">` >> 8) & 0xff
   \   0002B1   7404         MOV     A,#0x4
   \   0002B3   12....       LCALL   ?XSTACK_DISP0_8
   \   0002B6   AA82         MOV     R2,DPL
   \   0002B8   AB83         MOV     R3,DPH
   \   0002BA   12....       LCALL   ??sprintf?relay
   \   0002BD   7404         MOV     A,#0x4
   \   0002BF   12....       LCALL   ?DEALLOC_XSTACK8
   \   0002C2                ; Setup parameters for call to function HalUARTWrite
   \   0002C2                ; Setup parameters for call to function strlen
   \   0002C2   12....       LCALL   ?Subroutine3 & 0xFFFF
    410              }
   \                     ??CrossCallReturnLabel_32:
   \   0002C5   7406         MOV     A,#0x6
   \   0002C7   02....       LJMP    ??SampleApp_ProcessEvent_13 & 0xFFFF
    411          
    412              // return unprocessed events
    413              return (events ^ SYS_EVENT_MSG);
   \                     ??SampleApp_ProcessEvent_6:
   \   0002CA   EE           MOV     A,R6
   \   0002CB   FA           MOV     R2,A
   \   0002CC   EF           MOV     A,R7
   \   0002CD   6480         XRL     A,#0x80
   \                     ??SampleApp_ProcessEvent_21:
   \   0002CF   FB           MOV     R3,A
   \   0002D0   802A         SJMP    ??SampleApp_ProcessEvent_22
    414            }
    415          
    416            // Send a message out - This event is generated by a timer
    417            //  (setup in SampleApp_Init()). Ð­µ÷Æ÷²»Ö´ÐÐ¶¨Ê±·¢ËÍº¯Êý
    418            if ( events & SAMPLEAPP_SEND_PERIODIC_MSG_EVT )
   \                     ??SampleApp_ProcessEvent_2:
   \   0002D2   EE           MOV     A,R6
   \   0002D3   A2E0         MOV     C,0xE0 /* A   */.0
   \   0002D5   5021         JNC     ??SampleApp_ProcessEvent_23
    419            {
    420              // Send the periodic message
    421              SampleApp_SendPeriodicMessage();
   \   0002D7                ; Setup parameters for call to function SampleApp_SendPeriodicMessage
   \   0002D7   12....       LCALL   ??SampleApp_SendPeriodicMessage?relay
    422          
    423              // Setup to send message again in normal period (+ a little jitter)
    424              osal_start_timerEx( SampleApp_TaskID, SAMPLEAPP_SEND_PERIODIC_MSG_EVT,
    425                  (SAMPLEAPP_SEND_PERIODIC_MSG_TIMEOUT + (osal_rand() & 0x00FF)) );
   \   0002DA                ; Setup parameters for call to function osal_rand
   \   0002DA   12....       LCALL   ??osal_rand?relay
   \   0002DD                ; Setup parameters for call to function osal_start_timerEx
   \   0002DD   EA           MOV     A,R2
   \   0002DE   24B8         ADD     A,#-0x48
   \   0002E0   FC           MOV     R4,A
   \   0002E1   E4           CLR     A
   \   0002E2   340B         ADDC    A,#0xb
   \   0002E4   FD           MOV     R5,A
   \   0002E5   7A01         MOV     R2,#0x1
   \   0002E7   7B00         MOV     R3,#0x0
   \   0002E9   90....       MOV     DPTR,#SampleApp_TaskID
   \   0002EC   E0           MOVX    A,@DPTR
   \   0002ED   F9           MOV     R1,A
   \   0002EE   12....       LCALL   ??osal_start_timerEx?relay
    426          
    427              // return unprocessed events
    428              return (events ^ SAMPLEAPP_SEND_PERIODIC_MSG_EVT);
   \   0002F1   EE           MOV     A,R6
   \   0002F2   6401         XRL     A,#0x1
   \   0002F4   FA           MOV     R2,A
   \   0002F5   EF           MOV     A,R7
   \   0002F6   80D7         SJMP    ??SampleApp_ProcessEvent_21
    429            }
    430          
    431            // Discard unknown events
    432            return 0;
   \                     ??SampleApp_ProcessEvent_23:
   \   0002F8   7A00         MOV     R2,#0x0
   \   0002FA   7B00         MOV     R3,#0x0
   \                     ??SampleApp_ProcessEvent_22:
   \   0002FC   758200       MOV     DPL,#0x0
   \   0002FF   758301       MOV     DPH,#0x1
   \   000302   12....       LCALL   ?ADD_XSTACK_DISP0_16
   \   000305   7F0E         MOV     R7,#0xe
   \   000307   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   00030A                REQUIRE _A_IEN0
   \   00030A                REQUIRE WDCTL
    433          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine7:
   \   000000   90....       MOV     DPTR,#SampleApp_TaskID
   \   000003   E0           MOVX    A,@DPTR
   \   000004   F9           MOV     R1,A
   \   000005   12....       LCALL   ??osal_msg_receive?relay
   \   000008   8A..         MOV     ?V0 + 2,R2
   \   00000A   8B..         MOV     ?V0 + 3,R3
   \   00000C   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_29:
   \   000003   8B..         MOV     ?V0 + 13,R3
   \   000005   EA           MOV     A,R2
   \   000006   45..         ORL     A,?V0 + 13
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   AC..         MOV     R4,?V0 + 4
   \   000002   AD..         MOV     R5,?V0 + 5
   \   000004                REQUIRE ??Subroutine14_0
   \   000004                ; // Fall through to label ??Subroutine14_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine14_0:
   \   000000   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_30:
   \   000003   8B..         MOV     ?V0 + 1,R3
   \   000005   EA           MOV     A,R2
   \   000006   45..         ORL     A,?V0 + 1
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine13:
   \   000000   85..82       MOV     DPL,?V0 + 0
   \   000003   85..83       MOV     DPH,?V0 + 1
   \   000006   E0           MOVX    A,@DPTR
   \   000007   2401         ADD     A,#0x1
   \   000009   FA           MOV     R2,A
   \   00000A   A3           INC     DPTR
   \   00000B   E0           MOVX    A,@DPTR
   \   00000C   3400         ADDC    A,#0x0
   \   00000E   FB           MOV     R3,A
   \   00000F   12....       LCALL   ??strstr?relay
   \   000012   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   12....       LCALL   ?Subroutine12 & 0xFFFF
   \                     ??CrossCallReturnLabel_23:
   \   000003                REQUIRE ??Subroutine15_0
   \   000003                ; // Fall through to label ??Subroutine15_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine15_0:
   \   000000   7901         MOV     R1,#0x1
   \   000002                REQUIRE ??Subroutine16_0
   \   000002                ; // Fall through to label ??Subroutine16_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine16_0:
   \   000000   12....       LCALL   ??HalUARTWrite?relay
   \   000003   90....       MOV     DPTR,#flat
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine12:
   \   000000   85..82       MOV     DPL,?XSP + 0
   \   000003   85..83       MOV     DPH,?XSP + 1
   \   000006   AA82         MOV     R2,DPL
   \   000008   AB83         MOV     R3,DPH
   \   00000A   12....       LCALL   ??strlen?relay
   \   00000D   EA           MOV     A,R2
   \   00000E   FC           MOV     R4,A
   \   00000F   EB           MOV     A,R3
   \   000010   FD           MOV     R5,A
   \   000011   85..82       MOV     DPL,?XSP + 0
   \   000014   85..83       MOV     DPH,?XSP + 1
   \   000017   AA82         MOV     R2,DPL
   \   000019   AB83         MOV     R3,DPH
   \   00001B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine8:
   \   000000   AA82         MOV     R2,DPL
   \   000002   AB83         MOV     R3,DPH
   \   000004   12....       LCALL   ??memset?relay
   \   000007   7402         MOV     A,#0x2
   \   000009   22           RET
    434          
    435          /*********************************************************************
    436           * Event Generation Functions
    437           */
    438          /*********************************************************************
    439           * @fn      SampleApp_HandleKeys
    440           *
    441           * @brief   Handles all key events for this device.
    442           *
    443           * @param   shift - true if in shift/alt.
    444           * @param   keys - bit field for key events. Valid entries:
    445           *                 HAL_KEY_SW_2
    446           *                 HAL_KEY_SW_1
    447           *
    448           * @return  none
    449           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    450          void SampleApp_HandleKeys( uint8 shift, uint8 keys )
   \                     SampleApp_HandleKeys:
    451          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
    452            (void)shift;  // Intentionally unreferenced parameter
    453            
    454            if ( keys & HAL_KEY_SW_1 )
   \   000007   A2E0         MOV     C,0xE0 /* A   */.0
   \   000009   5007         JNC     ??SampleApp_HandleKeys_0
    455            {
    456              /* This key sends the Flash Command is sent to Group 1.
    457               * This device will not receive the Flash Command from this
    458               * device (even if it belongs to group 1).
    459               */
    460              SampleApp_SendFlashMessage( SAMPLEAPP_FLASH_DURATION );
   \   00000B                ; Setup parameters for call to function SampleApp_SendFlashMessage
   \   00000B   7AE8         MOV     R2,#-0x18
   \   00000D   7B03         MOV     R3,#0x3
   \   00000F   12....       LCALL   ??SampleApp_SendFlashMessage?relay
    461            }
    462          
    463            if ( keys & HAL_KEY_SW_2 )
   \                     ??SampleApp_HandleKeys_0:
   \   000012   EE           MOV     A,R6
   \   000013   A2E1         MOV     C,0xE0 /* A   */.1
   \   000015   5024         JNC     ??SampleApp_HandleKeys_1
    464            {
    465              /* The Flashr Command is sent to Group 1.
    466               * This key toggles this device in and out of group 1.
    467               * If this device doesn't belong to group 1, this application
    468               * will not receive the Flash command sent to group 1.
    469               */
    470              aps_Group_t *grp;
    471              grp = aps_FindGroup( SAMPLEAPP_ENDPOINT, SAMPLEAPP_FLASH_GROUP );
    472              if ( grp )
   \   000017                ; Setup parameters for call to function aps_FindGroup
   \   000017   7A01         MOV     R2,#0x1
   \   000019   7B00         MOV     R3,#0x0
   \   00001B   7914         MOV     R1,#0x14
   \   00001D   12....       LCALL   ??aps_FindGroup?relay
   \   000020   8B..         MOV     ?V0 + 1,R3
   \   000022   EA           MOV     A,R2
   \   000023   45..         ORL     A,?V0 + 1
   \   000025   600B         JZ      ??SampleApp_HandleKeys_2
    473              {
    474                // Remove from the group
    475                aps_RemoveGroup( SAMPLEAPP_ENDPOINT, SAMPLEAPP_FLASH_GROUP );
   \   000027                ; Setup parameters for call to function aps_RemoveGroup
   \   000027   7A01         MOV     R2,#0x1
   \   000029   7B00         MOV     R3,#0x0
   \   00002B   7914         MOV     R1,#0x14
   \   00002D   12....       LCALL   ??aps_RemoveGroup?relay
   \   000030   8009         SJMP    ??SampleApp_HandleKeys_1
    476              }
    477              else
    478              {
    479                // Add to the flash group
    480                aps_AddGroup( SAMPLEAPP_ENDPOINT, &SampleApp_Group );
   \                     ??SampleApp_HandleKeys_2:
   \   000032                ; Setup parameters for call to function aps_AddGroup
   \   000032   7A..         MOV     R2,#SampleApp_Group & 0xff
   \   000034   7B..         MOV     R3,#(SampleApp_Group >> 8) & 0xff
   \   000036   7914         MOV     R1,#0x14
   \   000038   12....       LCALL   ??aps_AddGroup?relay
    481              }
    482            }
    483          }
   \                     ??SampleApp_HandleKeys_1:
   \   00003B                REQUIRE ?Subroutine1
   \   00003B                ; // Fall through to label ?Subroutine1

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    484          
    485          /*********************************************************************
    486           * LOCAL FUNCTIONS
    487           */
    488          
    489          /*********************************************************************
    490           * @fn      SampleApp_MessageMSGCB
    491           *
    492           * @brief   Data message processor callback.  This function processes
    493           *          any incoming data - probably from other devices.  So, based
    494           *          on cluster ID, perform the intended action.
    495          *
    496           * @param   none
    497           *
    498           * @return  none
    499           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    500          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pkt )
   \                     SampleApp_MessageMSGCB:
    501          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 267
   \   000005   7582F5       MOV     DPL,#-0xb
   \   000008   7583FE       MOV     DPH,#-0x2
   \   00000B   12....       LCALL   ?ADD_XSTACK_DISP0_16
   \   00000E   8A..         MOV     ?V0 + 0,R2
   \   000010   8B..         MOV     ?V0 + 1,R3
    502            uint16 flashTime;
    503            char HttpData[256];
    504            char check[3];//Õâ¸öÊý×éÓÃÓÚ¼ì²éÎÂÊª¶ÈÊý¾ÝÊÇ·ñÕýÈ·ÒÔ¼°ÓÃÓÚºÏ²¢¶à¸öÖÕ¶ËÊý¾ÝµÄÖÐ¼ä±äÁ¿
    505            char tem[3];
    506            char hum[3];
    507            char guang[2];
    508            //char kaiguan[2];
    509            uint8 led1_flag;
    510            P0DIR |= 0x40; // ÅäÖÃP0.6ÎªÊä³ö
   \   000012   43FD40       ORL     0xfd,#0x40
    511            memset(HttpData,0,256);
   \   000015                ; Setup parameters for call to function memset
   \   000015   75..00       MOV     ?V0 + 2,#0x0
   \   000018   75..01       MOV     ?V0 + 3,#0x1
   \   00001B   78..         MOV     R0,#?V0 + 2
   \   00001D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000020   7C00         MOV     R4,#0x0
   \   000022   7D00         MOV     R5,#0x0
   \   000024   740D         MOV     A,#0xd
   \   000026   12....       LCALL   ?XSTACK_DISP0_8
   \   000029   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_9:
   \   00002C   12....       LCALL   ?DEALLOC_XSTACK8
    512            memset(tem,0,3);
   \   00002F                ; Setup parameters for call to function memset
   \   00002F   75..03       MOV     ?V0 + 2,#0x3
   \   000032   75..00       MOV     ?V0 + 3,#0x0
   \   000035   78..         MOV     R0,#?V0 + 2
   \   000037   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00003A   7C00         MOV     R4,#0x0
   \   00003C   7D00         MOV     R5,#0x0
   \   00003E   740A         MOV     A,#0xa
   \   000040   12....       LCALL   ?XSTACK_DISP0_8
   \   000043   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_10:
   \   000046   12....       LCALL   ?DEALLOC_XSTACK8
    513            memset(hum,0,3);
   \   000049                ; Setup parameters for call to function memset
   \   000049   78..         MOV     R0,#?V0 + 2
   \   00004B   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00004E   7C00         MOV     R4,#0x0
   \   000050   7D00         MOV     R5,#0x0
   \   000052   7402         MOV     A,#0x2
   \   000054   12....       LCALL   ?XSTACK_DISP0_8
   \   000057   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_11:
   \   00005A   12....       LCALL   ?DEALLOC_XSTACK8
    514            switch ( pkt->clusterId )
   \   00005D   E5..         MOV     A,?V0 + 0
   \   00005F   2421         ADD     A,#0x21
   \   000061   FE           MOV     R6,A
   \   000062   E5..         MOV     A,?V0 + 1
   \   000064   3400         ADDC    A,#0x0
   \   000066   FF           MOV     R7,A
   \   000067   85..82       MOV     DPL,?V0 + 0
   \   00006A   85..83       MOV     DPH,?V0 + 1
   \   00006D   A3           INC     DPTR
   \   00006E   A3           INC     DPTR
   \   00006F   A3           INC     DPTR
   \   000070   A3           INC     DPTR
   \   000071   E0           MOVX    A,@DPTR
   \   000072   F5..         MOV     ?V0 + 2,A
   \   000074   A3           INC     DPTR
   \   000075   E0           MOVX    A,@DPTR
   \   000076   F5..         MOV     ?V0 + 3,A
   \   000078   78..         MOV     R0,#?V0 + 2
   \   00007A   12....       LCALL   ?US_SWITCH_DENSE
   \                     `?<Jumptable for SampleApp_MessageMSGCB>_0`:
   \   00007D   0100         DW        1
   \   00007F   01           DB        1
   \   000080   ....         DW        ??SampleApp_MessageMSGCB_0
   \   000082   ....         DW        ??SampleApp_MessageMSGCB_1
   \   000084   ....         DW        ??SampleApp_MessageMSGCB_2
    515            {
    516              case SAMPLEAPP_P2P_CLUSTERID:
    517          
    518                break;    
    519              case SAMPLEAPP_PERIODIC_CLUSTERID:
    520                HalUARTWrite(0, "\r\n================\r\n", 20);                          //ÌáÊ¾½ÓÊÕµ½Êý¾Ý
   \                     ??SampleApp_MessageMSGCB_1:
   \   000086   75....       MOV     ?V0 + 2,#`?<Constant "\\r\\n================\\r\\n">` & 0xff
   \   000089   75....       MOV     ?V0 + 3,#(`?<Constant "\\r\\n================\\r\\n">` >> 8) & 0xff
   \   00008C                ; Setup parameters for call to function HalUARTWrite
   \   00008C   7C14         MOV     R4,#0x14
   \   00008E   7D00         MOV     R5,#0x0
   \   000090   AA..         MOV     R2,?V0 + 2
   \   000092   AB..         MOV     R3,?V0 + 3
   \   000094   7900         MOV     R1,#0x0
   \   000096   12....       LCALL   ??HalUARTWrite?relay
    521                HalUARTWrite(0, pkt->cmd.Data, pkt->cmd.DataLength);                      //Êä³ö½ÓÊÕµ½µÄÊý¾Ý{"tem1":23,"hum1":58} ³¤¶ÈÊÇ21
   \   000099   E5..         MOV     A,?V0 + 0
   \   00009B   241F         ADD     A,#0x1f
   \   00009D   F5..         MOV     ?V0 + 0,A
   \   00009F   E5..         MOV     A,?V0 + 1
   \   0000A1   3400         ADDC    A,#0x0
   \   0000A3   F5..         MOV     ?V0 + 1,A
   \   0000A5                ; Setup parameters for call to function HalUARTWrite
   \   0000A5   85..82       MOV     DPL,?V0 + 0
   \   0000A8   F583         MOV     DPH,A
   \   0000AA   E0           MOVX    A,@DPTR
   \   0000AB   FC           MOV     R4,A
   \   0000AC   A3           INC     DPTR
   \   0000AD   E0           MOVX    A,@DPTR
   \   0000AE   FD           MOV     R5,A
   \   0000AF   8E82         MOV     DPL,R6
   \   0000B1   8F83         MOV     DPH,R7
   \   0000B3   E0           MOVX    A,@DPTR
   \   0000B4   FA           MOV     R2,A
   \   0000B5   A3           INC     DPTR
   \   0000B6   E0           MOVX    A,@DPTR
   \   0000B7   FB           MOV     R3,A
   \   0000B8   7900         MOV     R1,#0x0
   \   0000BA   12....       LCALL   ??HalUARTWrite?relay
    522                HalUARTWrite(0, "\r\n================\r\n", 20);                          //ÌáÊ¾½ÓÊÕµ½Êý¾Ý
   \   0000BD                ; Setup parameters for call to function HalUARTWrite
   \   0000BD   7C14         MOV     R4,#0x14
   \   0000BF   7D00         MOV     R5,#0x0
   \   0000C1   AA..         MOV     R2,?V0 + 2
   \   0000C3   AB..         MOV     R3,?V0 + 3
   \   0000C5   7900         MOV     R1,#0x0
   \   0000C7   12....       LCALL   ??HalUARTWrite?relay
    523                LCD_P8x16Str(0, 6, "                ");
   \   0000CA                ; Setup parameters for call to function LCD_P8x16Str
   \   0000CA   7C..         MOV     R4,#`?<Constant "                ">` & 0xff
   \   0000CC   7D..         MOV     R5,#(`?<Constant "                ">` >> 8) & 0xff
   \   0000CE   7A06         MOV     R2,#0x6
   \   0000D0   7900         MOV     R1,#0x0
   \   0000D2   12....       LCALL   ??LCD_P8x16Str?relay
    524                LCD_P8x16Str(0, 6, LYPASSWD);
   \   0000D5                ; Setup parameters for call to function LCD_P8x16Str
   \   0000D5   7C..         MOV     R4,#`?<Constant "woshiyxr">` & 0xff
   \   0000D7   7D..         MOV     R5,#(`?<Constant "woshiyxr">` >> 8) & 0xff
   \   0000D9   7A06         MOV     R2,#0x6
   \   0000DB   7900         MOV     R1,#0x0
   \   0000DD   12....       LCALL   ??LCD_P8x16Str?relay
    525                if(ibusy==1) //»¹ÔÚ·¢Êý¾ÝµÄÊ±ºò·µ»Ø
   \   0000E0   90....       MOV     DPTR,#ibusy
   \   0000E3   E0           MOVX    A,@DPTR
   \   0000E4   6401         XRL     A,#0x1
   \   0000E6   7003         JNZ     $+5
   \   0000E8   02....       LJMP    ??SampleApp_MessageMSGCB_3 & 0xFFFF
    526                  return ;
    527                 //tcpÁ¬½Ó³É¹¦²¢ÇÒÊÕµ½ÖÕ¶ËÊý¾ÝºóÏòÆ½Ì¨·¢ËÍÎÂÊª¶È
    528                if(flat==6)
   \   0000EB   90....       MOV     DPTR,#flat
   \   0000EE   E0           MOVX    A,@DPTR
   \   0000EF   6406         XRL     A,#0x6
   \   0000F1   6003         JZ      $+5
   \   0000F3   02....       LJMP    ??SampleApp_MessageMSGCB_4 & 0xFFFF
    529                {
    530                  //flagµÄ×÷ÓÃÊÇÉè±¸¸ÕÉÏµçµÚÒ»´Î¶ÁÈ¡Êý¾ÝÊ±£¬¶Á³öµÄÊý¾ÝÎª¡°01¡±£¬²»ÕýÈ·ÇÒ»á±»ÉÏ´«£¬Ìí¼ÓflagºóÉè±¸»áÔÚµÚ¶þ´Î²Å¿ªÊ¼ÉÏ´«Êý¾Ý
    531                  if(pkt->cmd.DataLength==30)
   \   0000F6   85..82       MOV     DPL,?V0 + 0
   \   0000F9   85..83       MOV     DPH,?V0 + 1
   \   0000FC   E0           MOVX    A,@DPTR
   \   0000FD   641E         XRL     A,#0x1e
   \   0000FF   7002         JNZ     ??SampleApp_MessageMSGCB_5
   \   000101   A3           INC     DPTR
   \   000102   E0           MOVX    A,@DPTR
   \                     ??SampleApp_MessageMSGCB_5:
   \   000103   6003         JZ      $+5
   \   000105   02....       LJMP    ??SampleApp_MessageMSGCB_6 & 0xFFFF
    532                  {
    533                    //memset(check,0,3);
    534                    //strncpy(check,(char const *)pkt->cmd.Data+8,2);         
    535                    if(1)//(check[0]!='0'&&check[1]!='1') //È¥³ýÎÂ¶È01 
    536                    {
    537                      //memset(check,0,3);
    538                      //strncpy(check,(char const *)pkt->cmd.Data+18,2);
    539                      if(1)//(check[0]!='0'&&check[1]!='1') //È¥³ýÊª¶È01
    540                      {
    541                          ibusy = 1;  //½øÈë·¢Éäº¯Êý ¿ªÊ¼Ã¦Âµ
   \   000108   90....       MOV     DPTR,#ibusy
   \   00010B   7401         MOV     A,#0x1
   \   00010D   F0           MOVX    @DPTR,A
    542                          //°Ñ½ÓÊÕµ½µÄÏûÏ¢½øÐÐÒ»¸ö×Ö·û´®½ØÈ¡²Ù×÷£¬½ØÈ¡×Ö·û´®µ±ÖÐµÄÎÂÊª¶ÈÊýÖµ
    543                          memset(check,0,3);
   \   00010E                ; Setup parameters for call to function memset
   \   00010E   75..03       MOV     ?V0 + 0,#0x3
   \   000111   75..00       MOV     ?V0 + 1,#0x0
   \   000114   78..         MOV     R0,#?V0 + 0
   \   000116   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000119   7C00         MOV     R4,#0x0
   \   00011B   7D00         MOV     R5,#0x0
   \   00011D   7405         MOV     A,#0x5
   \   00011F   12....       LCALL   ?XSTACK_DISP0_8
   \   000122   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_12:
   \   000125   12....       LCALL   ?DEALLOC_XSTACK8
    544                          strncpy(check,(char const *)pkt->cmd.Data+5,1); //µÃµ½ÖÕ¶Ë¼¸
   \   000128                ; Setup parameters for call to function strncpy
   \   000128   75..01       MOV     ?V0 + 0,#0x1
   \   00012B   78..         MOV     R0,#?V0 + 0
   \   00012D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000130   8E82         MOV     DPL,R6
   \   000132   8F83         MOV     DPH,R7
   \   000134   E0           MOVX    A,@DPTR
   \   000135   2405         ADD     A,#0x5
   \   000137   FC           MOV     R4,A
   \   000138   A3           INC     DPTR
   \   000139   E0           MOVX    A,@DPTR
   \   00013A   3400         ADDC    A,#0x0
   \   00013C   FD           MOV     R5,A
   \   00013D   7405         MOV     A,#0x5
   \   00013F   12....       LCALL   ?XSTACK_DISP0_8
   \   000142   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_16:
   \   000145   12....       LCALL   ?DEALLOC_XSTACK8
    545                          
    546                          if(check[0]=='1') //ÖÕ¶Ë1µÄÊý¾Ý
   \   000148   7403         MOV     A,#0x3
   \   00014A   12....       LCALL   ?XSTACK_DISP0_8
   \   00014D   E0           MOVX    A,@DPTR
   \   00014E   6431         XRL     A,#0x31
   \   000150   6003         JZ      $+5
   \   000152   02....       LJMP    ??SampleApp_MessageMSGCB_7 & 0xFFFF
    547                          {
    548                            strncpy(tem,(char const *)pkt->cmd.Data+8,2);
   \   000155                ; Setup parameters for call to function strncpy
   \   000155   75..02       MOV     ?V0 + 0,#0x2
   \   000158   78..         MOV     R0,#?V0 + 0
   \   00015A   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00015D   8E82         MOV     DPL,R6
   \   00015F   8F83         MOV     DPH,R7
   \   000161   E0           MOVX    A,@DPTR
   \   000162   2408         ADD     A,#0x8
   \   000164   FC           MOV     R4,A
   \   000165   A3           INC     DPTR
   \   000166   E0           MOVX    A,@DPTR
   \   000167   3400         ADDC    A,#0x0
   \   000169   FD           MOV     R5,A
   \   00016A   740A         MOV     A,#0xa
   \   00016C   12....       LCALL   ?XSTACK_DISP0_8
   \   00016F   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_17:
   \   000172   12....       LCALL   ?DEALLOC_XSTACK8
    549                            strncpy(hum,(char const *)pkt->cmd.Data+18,2);
   \   000175                ; Setup parameters for call to function strncpy
   \   000175   78..         MOV     R0,#?V0 + 0
   \   000177   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00017A   8E82         MOV     DPL,R6
   \   00017C   8F83         MOV     DPH,R7
   \   00017E   E0           MOVX    A,@DPTR
   \   00017F   2412         ADD     A,#0x12
   \   000181   FC           MOV     R4,A
   \   000182   A3           INC     DPTR
   \   000183   E0           MOVX    A,@DPTR
   \   000184   3400         ADDC    A,#0x0
   \   000186   FD           MOV     R5,A
   \   000187   7402         MOV     A,#0x2
   \   000189   12....       LCALL   ?XSTACK_DISP0_8
   \   00018C   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_18:
   \   00018F   12....       LCALL   ?DEALLOC_XSTACK8
    550                            strncpy(guang,(char const *)pkt->cmd.Data+28,1);
   \   000192                ; Setup parameters for call to function strncpy
   \   000192   75..01       MOV     ?V0 + 0,#0x1
   \   000195   78..         MOV     R0,#?V0 + 0
   \   000197   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00019A   8E82         MOV     DPL,R6
   \   00019C   8F83         MOV     DPH,R7
   \   00019E   E0           MOVX    A,@DPTR
   \   00019F   241C         ADD     A,#0x1c
   \   0001A1   FC           MOV     R4,A
   \   0001A2   A3           INC     DPTR
   \   0001A3   E0           MOVX    A,@DPTR
   \   0001A4   3400         ADDC    A,#0x0
   \   0001A6   FD           MOV     R5,A
   \   0001A7   7408         MOV     A,#0x8
   \   0001A9   12....       LCALL   ?XSTACK_DISP0_8
   \   0001AC   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_19:
   \   0001AF   12....       LCALL   ?DEALLOC_XSTACK8
    551                            hum_new = atoi(hum);
   \   0001B2                ; Setup parameters for call to function atoi
   \   0001B2   85..82       MOV     DPL,?XSP + 0
   \   0001B5   85..83       MOV     DPH,?XSP + 1
   \   0001B8   AA82         MOV     R2,DPL
   \   0001BA   AB83         MOV     R3,DPH
   \   0001BC   12....       LCALL   ??atoi?relay
   \   0001BF   EA           MOV     A,R2
   \   0001C0   90....       MOV     DPTR,#hum_new
   \   0001C3   F0           MOVX    @DPTR,A
    552                            //P0DIR |= 0x40;
    553                            if( hum_new >= 70 /*&& hum_old < 80*/)
   \   0001C4   C3           CLR     C
   \   0001C5   9446         SUBB    A,#0x46
   \   0001C7   4011         JC      ??SampleApp_MessageMSGCB_8
    554                            {
    555                              //relay ^= 1;
    556                              //RELAY = relay;
    557                              RELAY = 1;
   \   0001C9   D286         SETB    0x80.6
    558                              HalLedBlink(HAL_LED_2, 3, 50, 500);
   \   0001CB                ; Setup parameters for call to function HalLedBlink
   \   0001CB   7CF4         MOV     R4,#-0xc
   \   0001CD   7D01         MOV     R5,#0x1
   \   0001CF   7B32         MOV     R3,#0x32
   \   0001D1   7A03         MOV     R2,#0x3
   \   0001D3   7902         MOV     R1,#0x2
   \   0001D5   12....       LCALL   ??HalLedBlink?relay
   \   0001D8   8002         SJMP    ??SampleApp_MessageMSGCB_9
    559                            }
    560                            else
    561                            {
    562                              //relay ^= 1;
    563                              //RELAY = relay;
    564                              RELAY = 0;
   \                     ??SampleApp_MessageMSGCB_8:
   \   0001DA   C286         CLR     0x80.6
    565                              //HalLedBlink(HAL_LED_2, 3, 50, 500);
    566                            }
    567                            
    568                            sprintf(HttpData,"AT+MQTTPUB=0,\"$sys/%s/%s/thing/property/post\",\"{\\\"id\\\":\\\"2313\\\"\\\,\\\"version\\\":\\\"1.0\\\"\\\,\\\"params\\\":{\\\"temperature\\\":{\\\"value\\\":%d}\\\,\\\"humidity\\\":{\\\"value\\\":%d}}}\",0,0\r\n",proid,devid, atoi(tem), atoi(hum));
                                                                                                                                 ^
Warning[Pe192]: unrecognized character escape sequence

                    sprintf(HttpData,"AT+MQTTPUB=0,\"$sys/%s/%s/thing/property/post\",\"{\\\"id\\\":\\\"2313\\\"\\\,\\\"version\\\":\\\"1.0\\\"\\\,\\\"params\\\":{\\\"temperature\\\":{\\\"value\\\":%d}\\\,\\\"humidity\\\":{\\\"value\\\":%d}}}\",0,0\r\n",proid,devid, atoi(tem), atoi(hum));
                                                                                                                                                 ^
"D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\Source\SampleApp.c",568  Warning[Pe192]: 
          unrecognized character escape sequence

                    sprintf(HttpData,"AT+MQTTPUB=0,\"$sys/%s/%s/thing/property/post\",\"{\\\"id\\\":\\\"2313\\\"\\\,\\\"version\\\":\\\"1.0\\\"\\\,\\\"params\\\":{\\\"temperature\\\":{\\\"value\\\":%d}\\\,\\\"humidity\\\":{\\\"value\\\":%d}}}\",0,0\r\n",proid,devid, atoi(tem), atoi(hum));
                                                                                                                                                                                                           ^
"D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\Source\SampleApp.c",568  Warning[Pe192]: 
          unrecognized character escape sequence
   \                     ??SampleApp_MessageMSGCB_9:
   \   0001DC                ; Setup parameters for call to function atoi
   \   0001DC   85..82       MOV     DPL,?XSP + 0
   \   0001DF   85..83       MOV     DPH,?XSP + 1
   \   0001E2   AA82         MOV     R2,DPL
   \   0001E4   AB83         MOV     R3,DPH
   \   0001E6   12....       LCALL   ??atoi?relay
   \   0001E9   8A..         MOV     ?V0 + 4,R2
   \   0001EB   8B..         MOV     ?V0 + 5,R3
   \   0001ED   75....       MOV     ?V0 + 0,#`?<Constant "9dBJ0I0C3F">` & 0xff
   \   0001F0   75....       MOV     ?V0 + 1,#(`?<Constant "9dBJ0I0C3F">` >> 8) & 0xff
   \   0001F3   75....       MOV     ?V0 + 2,#`?<Constant "yinxingru">` & 0xff
   \   0001F6   75....       MOV     ?V0 + 3,#(`?<Constant "yinxingru">` >> 8) & 0xff
   \   0001F9                ; Setup parameters for call to function sprintf
   \   0001F9   78..         MOV     R0,#?V0 + 4
   \   0001FB   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0001FE                ; Setup parameters for call to function atoi
   \   0001FE   740A         MOV     A,#0xa
   \   000200   12....       LCALL   ?XSTACK_DISP0_8
   \   000203   12....       LCALL   ?Subroutine11 & 0xFFFF
   \                     ??CrossCallReturnLabel_20:
   \   000206   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000209   78..         MOV     R0,#?V0 + 2
   \   00020B   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00020E   78..         MOV     R0,#?V0 + 0
   \   000210   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000213   7C..         MOV     R4,#`?<Constant "AT+MQTTPUB=0,\\"$sys/%s...">` & 0xff
   \   000215   7D..         MOV     R5,#(`?<Constant "AT+MQTTPUB=0,\\"$sys/%s...">` >> 8) & 0xff
   \   000217   7413         MOV     A,#0x13
   \   000219   12....       LCALL   ?XSTACK_DISP0_8
   \   00021C   AA82         MOV     R2,DPL
   \   00021E   AB83         MOV     R3,DPH
   \   000220   12....       LCALL   ??sprintf?relay
   \   000223   7408         MOV     A,#0x8
   \   000225   12....       LCALL   ?DEALLOC_XSTACK8
    569                            HalUARTWrite(1,(unsigned char *) HttpData,strlen(HttpData));
   \   000228                ; Setup parameters for call to function HalUARTWrite
   \   000228                ; Setup parameters for call to function strlen
   \   000228   740B         MOV     A,#0xb
   \   00022A   12....       LCALL   ?XSTACK_DISP0_8
   \   00022D   12....       LCALL   ?Subroutine9 & 0xFFFF
   \                     ??CrossCallReturnLabel_14:
   \   000230   12....       LCALL   ?XSTACK_DISP0_8
   \   000233   AA82         MOV     R2,DPL
   \   000235   AB83         MOV     R3,DPH
   \   000237   7901         MOV     R1,#0x1
   \   000239   12....       LCALL   ??HalUARTWrite?relay
    570                            Delay_ms(500);
   \   00023C                ; Setup parameters for call to function Delay_ms
   \   00023C   7AF4         MOV     R2,#-0xc
   \   00023E   7B01         MOV     R3,#0x1
   \   000240   12....       LCALL   ??Delay_ms?relay
    571                            sprintf(HttpData,"AT+MQTTPUB=0,\"$sys/%s/%s/thing/property/post\",\"{\\\"id\\\":\\\"2313\\\"\\\,\\\"version\\\":\\\"1.0\\\"\\\,\\\"params\\\":{\\\"adc\\\":{\\\"value\\\":%d}\\\,\\\"guang\\\":{\\\"value\\\":%d}}}\",0,0\r\n",proid,devid, adc, atoi(guang));
                                                                                                                                 ^
Warning[Pe192]: unrecognized character escape sequence

                    sprintf(HttpData,"AT+MQTTPUB=0,\"$sys/%s/%s/thing/property/post\",\"{\\\"id\\\":\\\"2313\\\"\\\,\\\"version\\\":\\\"1.0\\\"\\\,\\\"params\\\":{\\\"adc\\\":{\\\"value\\\":%d}\\\,\\\"guang\\\":{\\\"value\\\":%d}}}\",0,0\r\n",proid,devid, adc, atoi(guang));
                                                                                                                                                 ^
"D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\Source\SampleApp.c",571  Warning[Pe192]: 
          unrecognized character escape sequence

                    sprintf(HttpData,"AT+MQTTPUB=0,\"$sys/%s/%s/thing/property/post\",\"{\\\"id\\\":\\\"2313\\\"\\\,\\\"version\\\":\\\"1.0\\\"\\\,\\\"params\\\":{\\\"adc\\\":{\\\"value\\\":%d}\\\,\\\"guang\\\":{\\\"value\\\":%d}}}\",0,0\r\n",proid,devid, adc, atoi(guang));
                                                                                                                                                                                                   ^
"D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\Source\SampleApp.c",571  Warning[Pe192]: 
          unrecognized character escape sequence

    uint16 flashTime;
           ^
"D:\Program field\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\¶àÖÕ¶ËÊý¾ÝZigbee×éÍøWiFi·¢ËÍµ½ONENET\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\Source\SampleApp.c",502  Warning[Pe177]: 
          variable "flashTime" was declared but never referenced
   \   000243                ; Setup parameters for call to function atoi
   \   000243   7406         MOV     A,#0x6
   \   000245   12....       LCALL   ?XSTACK_DISP0_8
   \   000248   12....       LCALL   ?Subroutine11 & 0xFFFF
   \                     ??CrossCallReturnLabel_21:
   \   00024B   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00024E   90....       MOV     DPTR,#adc
   \   000251   E0           MOVX    A,@DPTR
   \   000252   F5..         MOV     ?V0 + 4,A
   \   000254   75..00       MOV     ?V0 + 5,#0x0
   \   000257   78..         MOV     R0,#?V0 + 4
   \   000259   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00025C   78..         MOV     R0,#?V0 + 2
   \   00025E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000261   78..         MOV     R0,#?V0 + 0
   \   000263   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000266   7C..         MOV     R4,#`?<Constant "AT+MQTTPUB=0,\\"$sys/%s...">_1` & 0xff
   \   000268   7D..         MOV     R5,#(`?<Constant "AT+MQTTPUB=0,\\"$sys/%s...">_1` >> 8) & 0xff
   \   00026A   7413         MOV     A,#0x13
   \   00026C   12....       LCALL   ?XSTACK_DISP0_8
   \   00026F   AA82         MOV     R2,DPL
   \   000271   AB83         MOV     R3,DPH
   \   000273   12....       LCALL   ??sprintf?relay
   \   000276   7408         MOV     A,#0x8
   \   000278   12....       LCALL   ?DEALLOC_XSTACK8
    572                            HalUARTWrite(1,(unsigned char *) HttpData,strlen(HttpData));
   \   00027B                ; Setup parameters for call to function HalUARTWrite
   \   00027B                ; Setup parameters for call to function strlen
   \   00027B   740B         MOV     A,#0xb
   \   00027D   12....       LCALL   ?XSTACK_DISP0_8
   \   000280   12....       LCALL   ?Subroutine9 & 0xFFFF
    573                              
    574                          }
   \                     ??CrossCallReturnLabel_15:
   \   000283   12....       LCALL   ?XSTACK_DISP0_8
   \   000286   AA82         MOV     R2,DPL
   \   000288   AB83         MOV     R3,DPH
   \   00028A   7901         MOV     R1,#0x1
   \   00028C   12....       LCALL   ??HalUARTWrite?relay
    575                          
    576                          
    577                          memset(check,0,3);
   \                     ??SampleApp_MessageMSGCB_7:
   \   00028F                ; Setup parameters for call to function memset
   \   00028F   75..03       MOV     ?V0 + 0,#0x3
   \   000292   75..00       MOV     ?V0 + 1,#0x0
   \   000295   78..         MOV     R0,#?V0 + 0
   \   000297   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00029A   7C00         MOV     R4,#0x0
   \   00029C   7D00         MOV     R5,#0x0
   \   00029E   7405         MOV     A,#0x5
   \   0002A0   12....       LCALL   ?XSTACK_DISP0_8
   \   0002A3   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_13:
   \   0002A6   12....       LCALL   ?DEALLOC_XSTACK8
    578                          //HalUARTWrite(1,(unsigned char *) HttpData,strlen(HttpData));
    579                          ibusy = 0;//Ã¦Âµ½áÊø 
   \   0002A9   90....       MOV     DPTR,#ibusy
   \   0002AC   E4           CLR     A
   \   0002AD   F0           MOVX    @DPTR,A
    580                      }
    581                    }
    582                   
    583                  }
    584                 
    585                  LCD_P8x16Str(0, 4, "Send NET Data ..");
   \                     ??SampleApp_MessageMSGCB_6:
   \   0002AE                ; Setup parameters for call to function LCD_P8x16Str
   \   0002AE   7C..         MOV     R4,#`?<Constant "Send NET Data ..">` & 0xff
   \   0002B0   7D..         MOV     R5,#(`?<Constant "Send NET Data ..">` >> 8) & 0xff
   \   0002B2   7A04         MOV     R2,#0x4
   \   0002B4   7900         MOV     R1,#0x0
   \   0002B6   12....       LCALL   ??LCD_P8x16Str?relay
    586          
    587                }
    588                else
    589                {
    590                  SystemReset();
    591                }
    592                break;
   \   0002B9   801D         SJMP    ??SampleApp_MessageMSGCB_0
   \                     ??SampleApp_MessageMSGCB_4:
   \   0002BB   C2AF         CLR     0xa8.7
   \   0002BD   75C9AB       MOV     0xc9,#-0x55
   \   0002C0   75C95B       MOV     0xc9,#0x5b
   \                     ??SampleApp_MessageMSGCB_10:
   \   0002C3   80FE         SJMP    ??SampleApp_MessageMSGCB_10
    593          
    594              case SAMPLEAPP_FLASH_CLUSTERID:
    595                 
    596                    led1_flag = (uint8)pkt->cmd.Data[0];
    597                   /* if(led1_flag == 1)
    598                      HalLedSet(HAL_LED_2,HAL_LED_MODE_ON);
    599                    else
    600                      HalLedBlink(HAL_LED_2, 3, 50, 500);*/
    601                    HalLedSet(HAL_LED_1,led1_flag);
   \                     ??SampleApp_MessageMSGCB_2:
   \   0002C5                ; Setup parameters for call to function HalLedSet
   \   0002C5   8E82         MOV     DPL,R6
   \   0002C7   8F83         MOV     DPH,R7
   \   0002C9   E0           MOVX    A,@DPTR
   \   0002CA   F8           MOV     R0,A
   \   0002CB   A3           INC     DPTR
   \   0002CC   E0           MOVX    A,@DPTR
   \   0002CD   F583         MOV     DPH,A
   \   0002CF   8882         MOV     DPL,R0
   \   0002D1   E0           MOVX    A,@DPTR
   \   0002D2   FA           MOV     R2,A
   \   0002D3   7901         MOV     R1,#0x1
   \   0002D5   12....       LCALL   ??HalLedSet?relay
    602                  
    603                break;
    604            }
    605            P0DIR &= 0xbf;
   \                     ??SampleApp_MessageMSGCB_0:
   \   0002D8   53FDBF       ANL     0xfd,#0xbf
    606          }
   \                     ??SampleApp_MessageMSGCB_3:
   \   0002DB   75820B       MOV     DPL,#0xb
   \   0002DE   758301       MOV     DPH,#0x1
   \   0002E1   12....       LCALL   ?ADD_XSTACK_DISP0_16
   \   0002E4   7F08         MOV     R7,#0x8
   \   0002E6   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   0002E9                REQUIRE P0DIR
   \   0002E9                REQUIRE _A_P0
   \   0002E9                REQUIRE _A_IEN0
   \   0002E9                REQUIRE WDCTL

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine11:
   \   000000   AA82         MOV     R2,DPL
   \   000002   AB83         MOV     R3,DPH
   \   000004   12....       LCALL   ??atoi?relay
   \   000007   8A..         MOV     ?V0 + 4,R2
   \   000009   8B..         MOV     ?V0 + 5,R3
   \   00000B                ; Setup parameters for call to function sprintf
   \   00000B   78..         MOV     R0,#?V0 + 4
   \   00000D   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine10:
   \   000000   AA82         MOV     R2,DPL
   \   000002   AB83         MOV     R3,DPH
   \   000004   12....       LCALL   ??strncpy?relay
   \   000007   7402         MOV     A,#0x2
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine9:
   \   000000   AA82         MOV     R2,DPL
   \   000002   AB83         MOV     R3,DPH
   \   000004   12....       LCALL   ??strlen?relay
   \   000007   EA           MOV     A,R2
   \   000008   FC           MOV     R4,A
   \   000009   EB           MOV     A,R3
   \   00000A   FD           MOV     R5,A
   \   00000B   740B         MOV     A,#0xb
   \   00000D   22           RET
    607          
    608          /*********************************************************************
    609           * @fn      SampleApp_SendPeriodicMessage
    610           *
    611           * @brief   Send the periodic message.
    612           *
    613           * @param   none
    614           *
    615           * @return  none
    616           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    617          void SampleApp_SendPeriodicMessage( void )
   \                     SampleApp_SendPeriodicMessage:
    618          {
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 27
   \   000005   74E5         MOV     A,#-0x1b
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    619            byte i, temp[3], humidity[3], strTemp[21];
    620            Delay_ms(500);
   \   00000A                ; Setup parameters for call to function Delay_ms
   \   00000A   7AF4         MOV     R2,#-0xc
   \   00000C   7B01         MOV     R3,#0x1
   \   00000E   12....       LCALL   ??Delay_ms?relay
    621            DHT11();             //»ñÈ¡ÎÂÊª¶È
   \   000011                ; Setup parameters for call to function DHT11
   \   000011   12....       LCALL   ??DHT11?relay
    622            Delay_ms(500);
   \   000014                ; Setup parameters for call to function Delay_ms
   \   000014   7AF4         MOV     R2,#-0xc
   \   000016   7B01         MOV     R3,#0x1
   \   000018   12....       LCALL   ??Delay_ms?relay
    623            //½«ÎÂÊª¶ÈµÄ×ª»»³É×Ö·û´®,¹©LCDÏÔÊ¾  
    624            temp[0] = wendu_shi+0x30;
   \   00001B   90....       MOV     DPTR,#wendu_shi
   \   00001E   E0           MOVX    A,@DPTR
   \   00001F   2430         ADD     A,#0x30
   \   000021   C0E0         PUSH    A
   \   000023   7403         MOV     A,#0x3
   \   000025   12....       LCALL   ?XSTACK_DISP0_8
   \   000028   D0E0         POP     A
   \   00002A   F0           MOVX    @DPTR,A
    625            temp[1] = wendu_ge+0x30;
   \   00002B   90....       MOV     DPTR,#wendu_ge
   \   00002E   E0           MOVX    A,@DPTR
   \   00002F   2430         ADD     A,#0x30
   \   000031   C0E0         PUSH    A
   \   000033   7404         MOV     A,#0x4
   \   000035   12....       LCALL   ?XSTACK_DISP0_8
   \   000038   D0E0         POP     A
   \   00003A   F0           MOVX    @DPTR,A
    626            temp[2] = '\0';
   \   00003B   7405         MOV     A,#0x5
   \   00003D   12....       LCALL   ?XSTACK_DISP0_8
   \   000040   E4           CLR     A
   \   000041   F0           MOVX    @DPTR,A
    627            humidity[0] = shidu_shi+0x30;
   \   000042   90....       MOV     DPTR,#shidu_shi
   \   000045   E0           MOVX    A,@DPTR
   \   000046   2430         ADD     A,#0x30
   \   000048   85..82       MOV     DPL,?XSP + 0
   \   00004B   85..83       MOV     DPH,?XSP + 1
   \   00004E   F0           MOVX    @DPTR,A
    628            humidity[1] = shidu_ge+0x30;
   \   00004F   90....       MOV     DPTR,#shidu_ge
   \   000052   E0           MOVX    A,@DPTR
   \   000053   2430         ADD     A,#0x30
   \   000055   C0E0         PUSH    A
   \   000057   7401         MOV     A,#0x1
   \   000059   12....       LCALL   ?XSTACK_DISP0_8
   \   00005C   D0E0         POP     A
   \   00005E   F0           MOVX    @DPTR,A
    629            humidity[2] = '\0';
   \   00005F   7402         MOV     A,#0x2
   \   000061   12....       LCALL   ?XSTACK_DISP0_8
   \   000064   E4           CLR     A
   \   000065   F0           MOVX    @DPTR,A
    630            //½«Êý¾ÝÕûºÏºó·½±ã·¢¸øÐ­µ÷Æ÷ÏÔÊ¾
    631            //{"temp": ,"hum": }
    632          //  osal_memcpy(strTemp, temp, 2); 
    633          //  osal_memcpy(&strTemp[2], "  ", 2);
    634          //  osal_memcpy(&strTemp[4], humidity, 3);
    635            
    636             osal_memcpy(strTemp,"{\"temp1\":", 9); 
   \   000066                ; Setup parameters for call to function osal_memcpy
   \   000066   75....       MOV     ?V0 + 0,#`?<Constant "{\\"temp1\\":">` & 0xff
   \   000069   75....       MOV     ?V0 + 1,#(`?<Constant "{\\"temp1\\":">` >> 8) & 0xff
   \   00006C   F5..         MOV     ?V0 + 2,A
   \   00006E   78..         MOV     R0,#?V0 + 0
   \   000070   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000073   7C09         MOV     R4,#0x9
   \   000075   7D00         MOV     R5,#0x0
   \   000077   EC           MOV     A,R4
   \   000078   12....       LCALL   ?XSTACK_DISP0_8
   \   00007B   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_37:
   \   00007E   12....       LCALL   ?DEALLOC_XSTACK8
    637             osal_memcpy(&strTemp[9],temp, 2);
   \   000081                ; Setup parameters for call to function osal_memcpy
   \   000081   7403         MOV     A,#0x3
   \   000083   12....       LCALL   ?XSTACK_DISP0_8
   \   000086   A982         MOV     R1,DPL
   \   000088   AA83         MOV     R2,DPH
   \   00008A   89..         MOV     ?V0 + 0,R1
   \   00008C   8A..         MOV     ?V0 + 1,R2
   \   00008E   78..         MOV     R0,#?V0 + 0
   \   000090   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000093   7C02         MOV     R4,#0x2
   \   000095   7D00         MOV     R5,#0x0
   \   000097   7412         MOV     A,#0x12
   \   000099   12....       LCALL   ?XSTACK_DISP0_8
   \   00009C   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_38:
   \   00009F   12....       LCALL   ?DEALLOC_XSTACK8
    638             osal_memcpy(&strTemp[11],",\"hum1\":", 8);
   \   0000A2                ; Setup parameters for call to function osal_memcpy
   \   0000A2   75....       MOV     ?V0 + 0,#`?<Constant ",\\"hum1\\":">` & 0xff
   \   0000A5   75....       MOV     ?V0 + 1,#(`?<Constant ",\\"hum1\\":">` >> 8) & 0xff
   \   0000A8   78..         MOV     R0,#?V0 + 0
   \   0000AA   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   0000AD   7C08         MOV     R4,#0x8
   \   0000AF   7D00         MOV     R5,#0x0
   \   0000B1   7414         MOV     A,#0x14
   \   0000B3   12....       LCALL   ?XSTACK_DISP0_8
   \   0000B6   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_39:
   \   0000B9   12....       LCALL   ?DEALLOC_XSTACK8
    639             osal_memcpy(&strTemp[19],humidity, 2);
   \   0000BC                ; Setup parameters for call to function osal_memcpy
   \   0000BC   85..82       MOV     DPL,?XSP + 0
   \   0000BF   85..83       MOV     DPH,?XSP + 1
   \   0000C2   A982         MOV     R1,DPL
   \   0000C4   AA83         MOV     R2,DPH
   \   0000C6   89..         MOV     ?V0 + 0,R1
   \   0000C8   8A..         MOV     ?V0 + 1,R2
   \   0000CA   78..         MOV     R0,#?V0 + 0
   \   0000CC   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   0000CF   7C02         MOV     R4,#0x2
   \   0000D1   7D00         MOV     R5,#0x0
   \   0000D3   741C         MOV     A,#0x1c
   \   0000D5   12....       LCALL   ?XSTACK_DISP0_8
   \   0000D8   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_40:
   \   0000DB   12....       LCALL   ?DEALLOC_XSTACK8
    640             osal_memcpy(&strTemp[21],"}", 1);
   \   0000DE                ; Setup parameters for call to function osal_memcpy
   \   0000DE   75....       MOV     ?V0 + 0,#`?<Constant "}">` & 0xff
   \   0000E1   75....       MOV     ?V0 + 1,#(`?<Constant "}">` >> 8) & 0xff
   \   0000E4   78..         MOV     R0,#?V0 + 0
   \   0000E6   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   0000E9   7C01         MOV     R4,#0x1
   \   0000EB   7D00         MOV     R5,#0x0
   \   0000ED   741E         MOV     A,#0x1e
   \   0000EF   12....       LCALL   ?XSTACK_DISP0_8
   \   0000F2   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_41:
   \   0000F5   12....       LCALL   ?DEALLOC_XSTACK8
    641            
    642            //»ñµÃµÄÎÂÊª¶ÈÍ¨¹ý´®¿ÚÊä³öµ½µçÄÔÏÔÊ¾
    643            HalUARTWrite(0, "T&H:", 4);
   \   0000F8                ; Setup parameters for call to function HalUARTWrite
   \   0000F8   7C04         MOV     R4,#0x4
   \   0000FA   7D00         MOV     R5,#0x0
   \   0000FC   7A..         MOV     R2,#`?<Constant "T&H:">` & 0xff
   \   0000FE   7B..         MOV     R3,#(`?<Constant "T&H:">` >> 8) & 0xff
   \   000100   7900         MOV     R1,#0x0
   \   000102   12....       LCALL   ??HalUARTWrite?relay
    644            HalUARTWrite(0, strTemp, 22);
   \   000105                ; Setup parameters for call to function HalUARTWrite
   \   000105   7C16         MOV     R4,#0x16
   \   000107   7D00         MOV     R5,#0x0
   \   000109   7406         MOV     A,#0x6
   \   00010B   12....       LCALL   ?XSTACK_DISP0_8
   \   00010E   AA82         MOV     R2,DPL
   \   000110   AB83         MOV     R3,DPH
   \   000112   7900         MOV     R1,#0x0
   \   000114   12....       LCALL   ??HalUARTWrite?relay
    645            HalUARTWrite(0, "\n",1);
   \   000117                ; Setup parameters for call to function HalUARTWrite
   \   000117   7C01         MOV     R4,#0x1
   \   000119   7D00         MOV     R5,#0x0
   \   00011B   7A..         MOV     R2,#`?<Constant "\\n">` & 0xff
   \   00011D   7B..         MOV     R3,#(`?<Constant "\\n">` >> 8) & 0xff
   \   00011F   7900         MOV     R1,#0x0
   \   000121   12....       LCALL   ??HalUARTWrite?relay
    646          
    647            //Êä³öµ½LCDÏÔÊ¾
    648            for(i=0; i<3; i++)
    649            {   
    650              if(i==0)
    651              {
    652                LCD_P16x16Ch(i*16,4,i*16);
   \   000124                ; Setup parameters for call to function LCD_P16x16Ch
   \   000124   7B00         MOV     R3,#0x0
   \   000126   7A04         MOV     R2,#0x4
   \   000128   7900         MOV     R1,#0x0
   \   00012A   12....       LCALL   ??LCD_P16x16Ch?relay
    653                LCD_P16x16Ch(i*16,6,(i+3)*16);
   \   00012D                ; Setup parameters for call to function LCD_P16x16Ch
   \   00012D   7B30         MOV     R3,#0x30
   \   00012F   7A06         MOV     R2,#0x6
   \   000131   7900         MOV     R1,#0x0
   \   000133   12....       LCALL   ??LCD_P16x16Ch?relay
    654              }
   \   000136   7F01         MOV     R7,#0x1
    655              else
    656              {
    657                LCD_P16x16Ch(i*16,4,i*16);
   \                     ??SampleApp_SendPeriodicMessage_0:
   \   000138   EF           MOV     A,R7
   \   000139   C4           SWAP    A
   \   00013A   54F0         ANL     A,#0xf0
   \   00013C   FE           MOV     R6,A
   \   00013D                ; Setup parameters for call to function LCD_P16x16Ch
   \   00013D   FB           MOV     R3,A
   \   00013E   7A04         MOV     R2,#0x4
   \   000140   F9           MOV     R1,A
   \   000141   12....       LCALL   ??LCD_P16x16Ch?relay
    658                LCD_P16x16Ch(i*16,6,i*16);        
   \   000144                ; Setup parameters for call to function LCD_P16x16Ch
   \   000144   EE           MOV     A,R6
   \   000145   FB           MOV     R3,A
   \   000146   7A06         MOV     R2,#0x6
   \   000148   F9           MOV     R1,A
   \   000149   12....       LCALL   ??LCD_P16x16Ch?relay
    659              }
    660            } 
   \   00014C   0F           INC     R7
   \   00014D   EF           MOV     A,R7
   \   00014E   C3           CLR     C
   \   00014F   9403         SUBB    A,#0x3
   \   000151   40E5         JC      ??SampleApp_SendPeriodicMessage_0
    661            LCD_P8x16Str(44, 4, temp);
   \   000153                ; Setup parameters for call to function LCD_P8x16Str
   \   000153   7403         MOV     A,#0x3
   \   000155   12....       LCALL   ?XSTACK_DISP0_8
   \   000158   AC82         MOV     R4,DPL
   \   00015A   AD83         MOV     R5,DPH
   \   00015C   7A04         MOV     R2,#0x4
   \   00015E   792C         MOV     R1,#0x2c
   \   000160   12....       LCALL   ??LCD_P8x16Str?relay
    662            LCD_P8x16Str(44, 6, humidity);
   \   000163                ; Setup parameters for call to function LCD_P8x16Str
   \   000163   85..82       MOV     DPL,?XSP + 0
   \   000166   85..83       MOV     DPH,?XSP + 1
   \   000169   AC82         MOV     R4,DPL
   \   00016B   AD83         MOV     R5,DPH
   \   00016D   7A06         MOV     R2,#0x6
   \   00016F   792C         MOV     R1,#0x2c
   \   000171   12....       LCALL   ??LCD_P8x16Str?relay
    663            
    664              if ( AF_DataRequest( &SampleApp_Periodic_DstAddr, &SampleApp_epDesc,
    665                                 SAMPLEAPP_PERIODIC_CLUSTERID,
    666                                 22,
    667                                 strTemp,
    668                                 &SampleApp_TransID,
    669                                 AF_DISCV_ROUTE,
    670                                 AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
   \   000174                ; Setup parameters for call to function AF_DataRequest
   \   000174   75..1E       MOV     ?V0 + 0,#0x1e
   \   000177   78..         MOV     R0,#?V0 + 0
   \   000179   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00017C   75....       MOV     ?V0 + 0,#SampleApp_TransID & 0xff
   \   00017F   75....       MOV     ?V0 + 1,#(SampleApp_TransID >> 8) & 0xff
   \   000182   78..         MOV     R0,#?V0 + 0
   \   000184   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000187   7409         MOV     A,#0x9
   \   000189   12....       LCALL   ?XSTACK_DISP0_8
   \   00018C   8582..       MOV     ?V0 + 0,DPL
   \   00018F   8583..       MOV     ?V0 + 1,DPH
   \   000192   78..         MOV     R0,#?V0 + 0
   \   000194   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000197   75..16       MOV     ?V0 + 0,#0x16
   \   00019A   75..00       MOV     ?V0 + 1,#0x0
   \   00019D   78..         MOV     R0,#?V0 + 0
   \   00019F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0001A2   75..01       MOV     ?V0 + 0,#0x1
   \   0001A5   78..         MOV     R0,#?V0 + 0
   \   0001A7   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0001AA   7920         MOV     R1,#0x20
   \   0001AC   7C..         MOV     R4,#SampleApp_epDesc & 0xff
   \   0001AE   7D..         MOV     R5,#(SampleApp_epDesc >> 8) & 0xff
   \   0001B0   7A..         MOV     R2,#SampleApp_Periodic_DstAddr & 0xff
   \   0001B2   7B..         MOV     R3,#(SampleApp_Periodic_DstAddr >> 8) & 0xff
   \   0001B4   12....       LCALL   ??AF_DataRequest?relay
   \   0001B7   7409         MOV     A,#0x9
   \   0001B9   12....       LCALL   ?DEALLOC_XSTACK8
    671            {
    672            }
    673            else
    674            {
    675              // Error occurred in request to send.
    676            }
    677          }
   \   0001BC   741B         MOV     A,#0x1b
   \   0001BE   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   AA82         MOV     R2,DPL
   \   000002   AB83         MOV     R3,DPH
   \   000004                REQUIRE ??Subroutine17_0
   \   000004                ; // Fall through to label ??Subroutine17_0
    678          
    679          /*********************************************************************
    680           * @fn      SampleApp_SendFlashMessage
    681           *
    682           * @brief   Send the flash message to group 1.
    683           *
    684           * @param   flashTime - in milliseconds
    685           *
    686           * @return  none
    687           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    688          void SampleApp_SendFlashMessage( uint16 flashTime )
   \                     SampleApp_SendFlashMessage:
    689          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 3
   \   000005   74FD         MOV     A,#-0x3
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    690            uint8 buffer[3];
    691            buffer[0] = (uint8)(SampleAppFlashCounter++);
   \   00000A   90....       MOV     DPTR,#SampleAppFlashCounter
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   85..82       MOV     DPL,?XSP + 0
   \   000011   85..83       MOV     DPH,?XSP + 1
   \   000014   F0           MOVX    @DPTR,A
   \   000015   90....       MOV     DPTR,#SampleAppFlashCounter
   \   000018   E0           MOVX    A,@DPTR
   \   000019   04           INC     A
   \   00001A   F0           MOVX    @DPTR,A
    692            buffer[1] = LO_UINT16( flashTime );
   \   00001B   7401         MOV     A,#0x1
   \   00001D   12....       LCALL   ?XSTACK_DISP0_8
   \   000020   EA           MOV     A,R2
   \   000021   F0           MOVX    @DPTR,A
    693            buffer[2] = HI_UINT16( flashTime );
   \   000022   7402         MOV     A,#0x2
   \   000024   12....       LCALL   ?XSTACK_DISP0_8
   \   000027   EB           MOV     A,R3
   \   000028   F0           MOVX    @DPTR,A
    694          
    695            if ( AF_DataRequest( &SampleApp_Flash_DstAddr, &SampleApp_epDesc,
    696                                 SAMPLEAPP_FLASH_CLUSTERID,
    697                                 3,
    698                                 buffer,
    699                                 &SampleApp_TransID,
    700                                 AF_DISCV_ROUTE,
    701                                 AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
   \   000029                ; Setup parameters for call to function AF_DataRequest
   \   000029   75..1E       MOV     ?V0 + 0,#0x1e
   \   00002C   78..         MOV     R0,#?V0 + 0
   \   00002E   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000031   75....       MOV     ?V0 + 0,#SampleApp_TransID & 0xff
   \   000034   75....       MOV     ?V0 + 1,#(SampleApp_TransID >> 8) & 0xff
   \   000037   78..         MOV     R0,#?V0 + 0
   \   000039   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00003C   7403         MOV     A,#0x3
   \   00003E   12....       LCALL   ?XSTACK_DISP0_8
   \   000041   8582..       MOV     ?V0 + 0,DPL
   \   000044   8583..       MOV     ?V0 + 1,DPH
   \   000047   78..         MOV     R0,#?V0 + 0
   \   000049   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00004C   75..03       MOV     ?V0 + 0,#0x3
   \   00004F   75..00       MOV     ?V0 + 1,#0x0
   \   000052   78..         MOV     R0,#?V0 + 0
   \   000054   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000057   75..02       MOV     ?V0 + 0,#0x2
   \   00005A   78..         MOV     R0,#?V0 + 0
   \   00005C   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00005F   7920         MOV     R1,#0x20
   \   000061   7C..         MOV     R4,#SampleApp_epDesc & 0xff
   \   000063   7D..         MOV     R5,#(SampleApp_epDesc >> 8) & 0xff
   \   000065   7A..         MOV     R2,#SampleApp_Flash_DstAddr & 0xff
   \   000067   7B..         MOV     R3,#(SampleApp_Flash_DstAddr >> 8) & 0xff
   \   000069   12....       LCALL   ??AF_DataRequest?relay
   \   00006C   7409         MOV     A,#0x9
   \   00006E   12....       LCALL   ?DEALLOC_XSTACK8
    702            {
    703            }
    704            else
    705            {
    706              // Error occurred in request to send.
    707            }
    708          }
   \   000071   7403         MOV     A,#0x3
   \   000073   12....       LCALL   ?DEALLOC_XSTACK8
   \   000076   02....       LJMP    ?Subroutine1 & 0xFFFF

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for flat>`:
   \   000000   01           DB 1

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??ReSetWifi?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ReSetWifi

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_HandleKeys?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_HandleKeys

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_MessageMSGCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_MessageMSGCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_SendPeriodicMessage?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_SendPeriodicMessage

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_SendFlashMessage?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_SendFlashMessage

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "CoordinatorZB\\r\\n">`:
   \   000000   436F6F72     DB "CoordinatorZB\015\012"
   \            64696E61
   \            746F725A
   \            420D0A00

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT\\r\\n">`:
   \   000000   41540D0A     DB "AT\015\012"
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Group 1">`:
   \   000000   47726F75     DB "Group 1"
   \            70203100

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "SampleApp">`:
   \   000000   53616D70     DB "SampleApp"
   \            6C654170
   \            7000    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "2022442778.com ">`:
   \   000000   32303232     DB "2022442778.com "
   \            34343237
   \            37382E63
   \            6F6D2000

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Get UART1 Data .">`:
   \   000000   47657420     DB "Get UART1 Data ."
   \            55415254
   \            31204461
   \            7461202E
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "                ">`:
   \   000000   20202020     DB "                "
   \            20202020
   \            20202020
   \            20202020
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "yinxingru">`:
   \   000000   79696E78     DB "yinxingru"
   \            696E6772
   \            7500    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "OK">`:
   \   000000   4F4B00       DB "OK"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT+CWMODE=1\\r\\n">`:
   \   000000   41542B43     DB "AT+CWMODE=1\015\012"
   \            574D4F44
   \            453D310D
   \            0A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "ZIGBEE-WIFI OK\\r\\n">`:
   \   000000   5A494742     DB "ZIGBEE-WIFI OK\015\012"
   \            45452D57
   \            49464920
   \            4F4B0D0A
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MQTTCONNECTED">`:
   \   000000   4D515454     DB "MQTTCONNECTED"
   \            434F4E4E
   \            45435445
   \            4400    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "ERROR">`:
   \   000000   4552524F     DB "ERROR"
   \            5200    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT+CWJAP=\\"%s\\",\\"%s\\"\\r\\n">`:
   \   000000   41542B43     DB "AT+CWJAP=\"%s\",\"%s\"\015\012"
   \            574A4150
   \            3D222573
   \            222C2225
   \            73220D0A
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "woshiyxr">`:
   \   000000   776F7368     DB "woshiyxr"
   \            69797872
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT+CIPMODE=0\\r\\n">`:
   \   000000   41542B43     DB "AT+CIPMODE=0\015\012"
   \            49504D4F
   \            44453D30
   \            0D0A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT+MQTTUSERCFG=0,1,\\"%...">`:
   \   000000   41542B4D     DB "AT+MQTTUSERCFG=0,1,\"%s\",\"%s\",\"%s\",0,0,\"\"\015\012"
   \            51545455
   \            53455243
   \            46473D30
   \            2C312C22
   \            2573222C
   \            22257322
   \            2C222573
   \            222C302C
   \            302C2222
   \            0D0A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "9dBJ0I0C3F">`:
   \   000000   3964424A     DB "9dBJ0I0C3F"
   \            30493043
   \            334600  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "version=2018-10-31&re...">`:
   \   000000   76657273     DB 76H, 65H, 72H, 73H, 69H, 6FH, 6EH, 3DH
   \            696F6E3D
   \   000008   32303138     DB 32H, 30H, 31H, 38H, 2DH, 31H, 30H, 2DH
   \            2D31302D
   \   000010   33312672     DB 33H, 31H, 26H, 72H, 65H, 73H, 3DH, 70H
   \            65733D70
   \   000018   726F6475     DB 72H, 6FH, 64H, 75H, 63H, 74H, 73H, 25H
   \            63747325
   \   000020   32463964     DB 32H, 46H, 39H, 64H, 42H, 4AH, 30H, 49H
   \            424A3049
   \   000028   30433346     DB 30H, 43H, 33H, 46H, 25H, 32H, 46H, 64H
   \            25324664
   \   000030   65766963     DB 65H, 76H, 69H, 63H, 65H, 73H, 25H, 32H
   \            65732532
   \   000038   4679696E     DB 46H, 79H, 69H, 6EH, 78H, 69H, 6EH, 67H
   \            78696E67
   \   000040   72752665     DB 72H, 75H, 26H, 65H, 74H, 3DH, 31H, 37H
   \            743D3137
   \   000048   35313138     DB 35H, 31H, 31H, 38H, 30H, 32H, 31H, 38H
   \            30323138
   \   000050   266D6574     DB 26H, 6DH, 65H, 74H, 68H, 6FH, 64H, 3DH
   \            686F643D
   \   000058   6D643526     DB 6DH, 64H, 35H, 26H, 73H, 69H, 67H, 6EH
   \            7369676E
   \   000060   3D4A4C57     DB 3DH, 4AH, 4CH, 57H, 78H, 4BH, 52H, 71H
   \            784B5271
   \   000068   776A6153     DB 77H, 6AH, 61H, 53H, 44H, 5AH, 49H, 72H
   \            445A4972
   \   000070   55717772     DB 55H, 71H, 77H, 72H, 67H, 56H, 67H, 25H
   \            67566725
   \   000078   33442533     DB 33H, 44H, 25H, 33H, 44H, 0
   \            4400    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT+MQTTCONN=0,\\"mqtts....">`:
   \   000000   41542B4D     DB "AT+MQTTCONN=0,\"mqtts.heclouds.com\",1883,1\015\012"
   \            51545443
   \            4F4E4E3D
   \            302C226D
   \            71747473
   \            2E686563
   \            6C6F7564
   \            732E636F
   \            6D222C31
   \            3838332C
   \            310D0A00

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT+MQTTSUB=0,\\"$sys/%s...">`:
   \   000000   41542B4D     DB 41H, 54H, 2BH, 4DH, 51H, 54H, 54H, 53H
   \            51545453
   \   000008   55423D30     DB 55H, 42H, 3DH, 30H, 2CH, 22H, 24H, 73H
   \            2C222473
   \   000010   79732F25     DB 79H, 73H, 2FH, 25H, 73H, 2FH, 25H, 73H
   \            732F2573
   \   000018   2F746869     DB 2FH, 74H, 68H, 69H, 6EH, 67H, 2FH, 70H
   \            6E672F70
   \   000020   726F7065     DB 72H, 6FH, 70H, 65H, 72H, 74H, 79H, 2FH
   \            7274792F
   \   000028   706F7374     DB 70H, 6FH, 73H, 74H, 2FH, 72H, 65H, 70H
   \            2F726570
   \   000030   6C79222C     DB 6CH, 79H, 22H, 2CH, 31H, 0DH, 0AH, 0
   \            310D0A00

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "\\r\\n================\\r\\n">`:
   \   000000   0D0A3D3D     DB "\015\012================\015\012"
   \            3D3D3D3D
   \            3D3D3D3D
   \            3D3D3D3D
   \            3D3D0D0A
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT+MQTTPUB=0,\\"$sys/%s...">`:
   \   000000   41542B4D     DB 41H, 54H, 2BH, 4DH, 51H, 54H, 54H, 50H
   \            51545450
   \   000008   55423D30     DB 55H, 42H, 3DH, 30H, 2CH, 22H, 24H, 73H
   \            2C222473
   \   000010   79732F25     DB 79H, 73H, 2FH, 25H, 73H, 2FH, 25H, 73H
   \            732F2573
   \   000018   2F746869     DB 2FH, 74H, 68H, 69H, 6EH, 67H, 2FH, 70H
   \            6E672F70
   \   000020   726F7065     DB 72H, 6FH, 70H, 65H, 72H, 74H, 79H, 2FH
   \            7274792F
   \   000028   706F7374     DB 70H, 6FH, 73H, 74H, 22H, 2CH, 22H, 7BH
   \            222C227B
   \   000030   5C226964     DB 5CH, 22H, 69H, 64H, 5CH, 22H, 3AH, 5CH
   \            5C223A5C
   \   000038   22323331     DB 22H, 32H, 33H, 31H, 33H, 5CH, 22H, 5CH
   \            335C225C
   \   000040   2C5C2276     DB 2CH, 5CH, 22H, 76H, 65H, 72H, 73H, 69H
   \            65727369
   \   000048   6F6E5C22     DB 6FH, 6EH, 5CH, 22H, 3AH, 5CH, 22H, 31H
   \            3A5C2231
   \   000050   2E305C22     DB 2EH, 30H, 5CH, 22H, 5CH, 2CH, 5CH, 22H
   \            5C2C5C22
   \   000058   70617261     DB 70H, 61H, 72H, 61H, 6DH, 73H, 5CH, 22H
   \            6D735C22
   \   000060   3A7B5C22     DB 3AH, 7BH, 5CH, 22H, 74H, 65H, 6DH, 70H
   \            74656D70
   \   000068   65726174     DB 65H, 72H, 61H, 74H, 75H, 72H, 65H, 5CH
   \            7572655C
   \   000070   223A7B5C     DB 22H, 3AH, 7BH, 5CH, 22H, 76H, 61H, 6CH
   \            2276616C
   \   000078   75655C22     DB 75H, 65H, 5CH, 22H, 3AH, 25H, 64H, 7DH
   \            3A25647D
   \   000080   5C2C5C22     DB 5CH, 2CH, 5CH, 22H, 68H, 75H, 6DH, 69H
   \            68756D69
   \   000088   64697479     DB 64H, 69H, 74H, 79H, 5CH, 22H, 3AH, 7BH
   \            5C223A7B
   \   000090   5C227661     DB 5CH, 22H, 76H, 61H, 6CH, 75H, 65H, 5CH
   \            6C75655C
   \   000098   223A2564     DB 22H, 3AH, 25H, 64H, 7DH, 7DH, 7DH, 22H
   \            7D7D7D22
   \   0000A0   2C302C30     DB 2CH, 30H, 2CH, 30H, 0DH, 0AH, 0
   \            0D0A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT+MQTTPUB=0,\\"$sys/%s...">_1`:
   \   000000   41542B4D     DB 41H, 54H, 2BH, 4DH, 51H, 54H, 54H, 50H
   \            51545450
   \   000008   55423D30     DB 55H, 42H, 3DH, 30H, 2CH, 22H, 24H, 73H
   \            2C222473
   \   000010   79732F25     DB 79H, 73H, 2FH, 25H, 73H, 2FH, 25H, 73H
   \            732F2573
   \   000018   2F746869     DB 2FH, 74H, 68H, 69H, 6EH, 67H, 2FH, 70H
   \            6E672F70
   \   000020   726F7065     DB 72H, 6FH, 70H, 65H, 72H, 74H, 79H, 2FH
   \            7274792F
   \   000028   706F7374     DB 70H, 6FH, 73H, 74H, 22H, 2CH, 22H, 7BH
   \            222C227B
   \   000030   5C226964     DB 5CH, 22H, 69H, 64H, 5CH, 22H, 3AH, 5CH
   \            5C223A5C
   \   000038   22323331     DB 22H, 32H, 33H, 31H, 33H, 5CH, 22H, 5CH
   \            335C225C
   \   000040   2C5C2276     DB 2CH, 5CH, 22H, 76H, 65H, 72H, 73H, 69H
   \            65727369
   \   000048   6F6E5C22     DB 6FH, 6EH, 5CH, 22H, 3AH, 5CH, 22H, 31H
   \            3A5C2231
   \   000050   2E305C22     DB 2EH, 30H, 5CH, 22H, 5CH, 2CH, 5CH, 22H
   \            5C2C5C22
   \   000058   70617261     DB 70H, 61H, 72H, 61H, 6DH, 73H, 5CH, 22H
   \            6D735C22
   \   000060   3A7B5C22     DB 3AH, 7BH, 5CH, 22H, 61H, 64H, 63H, 5CH
   \            6164635C
   \   000068   223A7B5C     DB 22H, 3AH, 7BH, 5CH, 22H, 76H, 61H, 6CH
   \            2276616C
   \   000070   75655C22     DB 75H, 65H, 5CH, 22H, 3AH, 25H, 64H, 7DH
   \            3A25647D
   \   000078   5C2C5C22     DB 5CH, 2CH, 5CH, 22H, 67H, 75H, 61H, 6EH
   \            6775616E
   \   000080   675C223A     DB 67H, 5CH, 22H, 3AH, 7BH, 5CH, 22H, 76H
   \            7B5C2276
   \   000088   616C7565     DB 61H, 6CH, 75H, 65H, 5CH, 22H, 3AH, 25H
   \            5C223A25
   \   000090   647D7D7D     DB 64H, 7DH, 7DH, 7DH, 22H, 2CH, 30H, 2CH
   \            222C302C
   \   000098   300D0A00     DB 30H, 0DH, 0AH, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Send NET Data ..">`:
   \   000000   53656E64     DB "Send NET Data .."
   \            204E4554
   \            20446174
   \            61202E2E
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "{\\"temp1\\":">`:
   \   000000   7B227465     DB "{\"temp1\":"
   \            6D703122
   \            3A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant ",\\"hum1\\":">`:
   \   000000   2C226875     DB ",\"hum1\":"
   \            6D31223A
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "}">`:
   \   000000   7D00         DB "}"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "T&H:">`:
   \   000000   5426483A     DB "T&H:"
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "\\n">`:
   \   000000   0A00         DB "\012"
    709          
    710          
    711          
    712          /*********************************************************************
    713          *********************************************************************/

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     ReSetWifi                          2      0      0
       -> Delay_ms                      4      0      0
     SampleApp_HandleKeys               0      0    288
       -> SampleApp_SendFlashMessage
                                        0      0     20
       -> aps_FindGroup                 0      0     20
       -> aps_RemoveGroup               0      0     20
       -> aps_AddGroup                  0      0     20
     SampleApp_Init                     0      0     24
       -> MT_UartInit                   0      0     42
       -> MT_UartRegisterTaskID         0      0     42
       -> HalUARTWrite                  0      0     42
       -> osal_memset                   0      0     42
       -> HalUARTWrite                  0      0     42
       -> Delay_ms                      0      0     42
       -> Delay_ms                      0      0     42
       -> HalUARTWrite                  0      0     42
       -> afRegister                    0      0     42
       -> RegisterForKeys               0      0     42
       -> osal_memcpy                   0      0     48
       -> aps_AddGroup                  0      0     42
       -> HalLcdWriteString             0      0     42
     SampleApp_MessageMSGCB             0      0    569
       -> memset                        0      0    570
       -> memset                        0      0    570
       -> memset                        0      0    570
       -> HalUARTWrite                  0      0    566
       -> HalUARTWrite                  0      0    566
       -> HalUARTWrite                  0      0    566
       -> LCD_P8x16Str                  0      0    566
       -> LCD_P8x16Str                  0      0    566
       -> memset                        0      0    570
       -> strncpy                       0      0    570
       -> strncpy                       0      0    570
       -> strncpy                       0      0    570
       -> strncpy                       0      0    570
       -> atoi                          0      0    566
       -> HalLedBlink                   0      0    566
       -> atoi                          0      0    566
       -> atoi                          0      0    570
       -> sprintf                       0      0    582
       -> strlen                        0      0    566
       -> HalUARTWrite                  0      0    566
       -> Delay_ms                      0      0    566
       -> atoi                          0      0    566
       -> sprintf                       0      0    582
       -> strlen                        0      0    566
       -> HalUARTWrite                  0      0    566
       -> memset                        0      0    570
       -> LCD_P8x16Str                  0      0    566
       -> HalLedSet                     0      0    566
     SampleApp_ProcessEvent             0      0    284
       -> osal_msg_receive              0      0    556
       -> osal_start_timerEx            0      0    556
       -> Delay_ms                      0      0    556
       -> osal_msg_deallocate           0      0    556
       -> osal_msg_receive              0      0    556
       -> SampleApp_HandleKeys          0      0    556
       -> LCD_P8x16Str                  0      0    556
       -> SampleApp_MessageMSGCB        0      0    556
       -> HalUARTWrite                  0      0    556
       -> LCD_P8x16Str                  0      0    556
       -> LCD_P8x16Str                  0      0    556
       -> LCD_P8x16Str                  0      0    556
       -> strstr                        0      0    556
       -> HalUARTWrite                  0      0    556
       -> HalUARTWrite                  0      0    556
       -> Delay_ms                      0      0    556
       -> strstr                        0      0    556
       -> strstr                        0      0    556
       -> Delay_ms                      0      0    556
       -> Delay_ms                      0      0    556
       -> HalUARTWrite                  0      0    556
       -> strstr                        0      0    556
       -> memset                        0      0    560
       -> sprintf                       0      0    564
       -> strlen                        0      0    556
       -> HalUARTWrite                  0      0    556
       -> Delay_ms                      0      0    556
       -> Delay_ms                      0      0    556
       -> strstr                        0      0    556
       -> HalUARTWrite                  0      0    556
       -> Delay_ms                      0      0    556
       -> strstr                        0      0    556
       -> memset                        0      0    560
       -> sprintf                       0      0    568
       -> strlen                        0      0    556
       -> HalUARTWrite                  0      0    556
       -> Delay_ms                      0      0    556
       -> HalUARTWrite                  0      0    556
       -> Delay_ms                      0      0    556
       -> strstr                        0      0    556
       -> memset                        0      0    560
       -> sprintf                       0      0    564
       -> strlen                        0      0    556
       -> HalUARTWrite                  0      0    556
       -> Delay_ms                      0      0    556
       -> SampleApp_SendPeriodicMessage
                                        0      0    556
       -> osal_rand                     0      0    556
       -> osal_start_timerEx            0      0    556
     SampleApp_SendFlashMessage         1      0     32
       -> AF_DataRequest                0      0     44
     SampleApp_SendPeriodicMessage      1      0    325
       -> Delay_ms                      0      0     76
       -> DHT11                         0      0     76
       -> Delay_ms                      0      0     76
       -> osal_memcpy                   0      0     82
       -> osal_memcpy                   0      0     82
       -> osal_memcpy                   0      0     82
       -> osal_memcpy                   0      0     82
       -> osal_memcpy                   0      0     82
       -> HalUARTWrite                  0      0     76
       -> HalUARTWrite                  0      0     76
       -> HalUARTWrite                  0      0     76
       -> LCD_P16x16Ch                  0      0     76
       -> LCD_P16x16Ch                  0      0     76
       -> LCD_P16x16Ch                  0      0     76
       -> LCD_P16x16Ch                  0      0     76
       -> LCD_P8x16Str                  0      0     76
       -> LCD_P8x16Str                  0      0     76
       -> AF_DataRequest                0      0     94


   Segment part sizes:

     Function/Label                            Bytes
     --------------                            -----
     _A_P0                                        1
     _A_IEN0                                      1
     WDCTL                                        1
     P2SEL                                        1
     P0DIR                                        1
     ibusy                                        1
     kmg                                          2
     flat                                         1
     relay                                        1
     hum_old                                      1
     hum_new                                      1
     adc                                          1
     SampleApp_ClusterList                        4
     SampleApp_SimpleDesc                        12
     SampleApp_epDesc                             6
     SampleApp_TaskID                             1
     SampleApp_NwkState                           1
     SampleApp_TransID                            1
     SampleApp_Periodic_DstAddr                  12
     SampleApp_Flash_DstAddr                     12
     SampleApp_P2P_DstAddr                       12
     SampleApp_Group                             18
     SampleAppPeriodicCounter                     1
     SampleAppFlashCounter                        1
     ReSetWifi                                   18
     SampleApp_Init                             265
     ?Subroutine0                                 8
     ?Subroutine2                                28
     ??Subroutine17_0                             6
     SampleApp_ProcessEvent                     778
     ?Subroutine7                                13
     ?Subroutine5                                 9
     ?Subroutine4                                 4
     ??Subroutine14_0                             9
     ?Subroutine13                               19
     ?Subroutine3                                 3
     ??Subroutine15_0                             2
     ??Subroutine16_0                             7
     ?Subroutine12                               28
     ?Subroutine8                                10
     SampleApp_HandleKeys                        59
     ?Subroutine1                                 5
     SampleApp_MessageMSGCB                     745
     ?Subroutine11                               14
     ?Subroutine10                               10
     ?Subroutine9                                14
     SampleApp_SendPeriodicMessage              449
     ?Subroutine6                                 4
     SampleApp_SendFlashMessage                 121
     ?<Initializer for flat>                      1
     ??ReSetWifi?relay                            6
     ??SampleApp_Init?relay                       6
     ??SampleApp_ProcessEvent?relay               6
     ??SampleApp_HandleKeys?relay                 6
     ??SampleApp_MessageMSGCB?relay               6
     ??SampleApp_SendPeriodicMessage?relay        6
     ??SampleApp_SendFlashMessage?relay           6
     ?<Constant "CoordinatorZB\r\n">             16
     ?<Constant "AT\r\n">                         5
     ?<Constant "Group 1">                        8
     ?<Constant "SampleApp">                     10
     ?<Constant "2022442778.com ">               16
     ?<Constant "Get UART1 Data .">              17
     ?<Constant "                ">              17
     ?<Constant "yinxingru">                     10
     ?<Constant "OK">                             3
     ?<Constant "AT+CWMODE=1\r\n">               14
     ?<Constant "ZIGBEE-WIFI OK\r\n">            17
     ?<Constant "MQTTCONNECTED">                 14
     ?<Constant "ERROR">                          6
     ?<Constant "AT+CWJAP=\"%s\",\"%s\"\r\n">    21
     ?<Constant "woshiyxr">                       9
     ?<Constant "AT+CIPMODE=0\r\n">              15
     ?<Constant "AT+MQTTUSERCFG=0,1,\"%...">     43
     ?<Constant "9dBJ0I0C3F">                    11
     ?<Constant "version=2018-10-31&re...">     126
     ?<Constant "AT+MQTTCONN=0,\"mqtts....">     44
     ?<Constant "AT+MQTTSUB=0,\"$sys/%s...">     56
     ?<Constant "\r\n================\r\n">      21
     ?<Constant "AT+MQTTPUB=0,\"$sys/%s...">    167
     ?<Constant "AT+MQTTPUB=0,\"$sys/%s...">_1  156
     ?<Constant "Send NET Data ..">              17
     ?<Constant "{\"temp1\":">                   10
     ?<Constant ",\"hum1\":">                     9
     ?<Constant "}">                              2
     ?<Constant "T&H:">                           5
     ?<Constant "\n">                             2

 
 2 628 bytes in segment BANKED_CODE
    42 bytes in segment BANK_RELAYS
     5 bytes in segment SFR_AN
     1 byte  in segment XDATA_I
     1 byte  in segment XDATA_ID
   883 bytes in segment XDATA_ROM_C
    72 bytes in segment XDATA_Z
 
 2 671 bytes of CODE  memory
   883 bytes of CONST memory
     0 bytes of DATA  memory (+ 5 bytes shared)
    73 bytes of XDATA memory

Errors: none
Warnings: 9
